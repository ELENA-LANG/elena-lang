[#general#]
#name=Standard Protocols
#shortdescr=ELENA standart protocols.

[#list#]
action
arithmetic
arithmetic_variable
array
arraypattern
bool
bytearray
bytearrapattern
char
collection
container
enumerable
enumerator
factory
func_argument
group
indexable
indexer
input
inputable
int
iterator
literal
long
magnitude
pattern
printable
printer
reader
real
stream
typecaster
varbytearray
variable
writer

[pattern]
#shortdescr=A pattern protocol
#method=run,action,object;Executes the action

[action]
#shortdescr=An action protocol
#method=proceed,object;Executes the action

[int]
#shortdescr=An integer protocol
#method=<a href="stddictionary.html#int">int'get</a>,,object;Returns the integer

[enumerable]
#shortdescr=An enumerable protocol
#method=<a href="stddictionary.html#enum">enum'get</a>,,enumerator;Returns the object enumerator
                                                                                   
[enumerator]
#shortdescr=An enumerator protocol
#method=<a href="stddictionary.html#content">content'get</a>,,object;Returns the current item
#method=<a href="stddictionary.html#content">content'set</a>,object;Sets the current item
#method=<a href="stddictionary.html#enum">enum'continue</a>,,;Goes to the next enumerating item

[indexable]
#shortdescr=An indexable protocol
#method=@,object,object;Returns the item at specified position
#method=@,object,indexer;Returns the indexer at specified position
#method=<a href="stddictionary.html#indexer">indexer'get</a>,,indexer;Creates the indexer

[indexer]
#shortdescr=An indexer protocol
#method=<a href="stddictionary.html#content">content'get</a>,,object;Returns the indexed object
#method=<a href="stddictionary.html#content">content'set</a>,object;Sets the indexed object
#method=<a href="stddictionary.html#index">index'add</a>,object;Adds the offset to the index
#method=<a href="stddictionary.html#index">index'get</a>,,object;Returns the current index
#method=<a href="stddictionary.html#index">index'if</a>,object;Fails if the provided index is out of range
#method=<a href="stddictionary.html#index">index'seek</a>,object;Sets the index to the first occurance of the provided parameters or fails
#method=<a href="stddictionary.html#index">index'set</a>,object;Sets the current index
#method=<a href="stddictionary.html#index">index'subtract</a>,object;Subtracts the offset to the index
#method=<a href="stddictionary.html#indexer">indexer'get</a>,,indexer;Returns itself
#method=<a href="stddictionary.html#proxy">proxy'ifnotnil</a>,,;Fails if the indexer pointing to nil

[iterator]
#shortdescr=An iterator protocol
#method=<a href="stddictionary.html#it">it'get</a>,,object;Returns the iterator value
#method=<a href="stddictionary.html#it">it'ifnotnil</a>,,object;Fails if the iterator is out of range
#method=<a href="stddictionary.html#it">it'next</a>,,object;Makes an iteration step

[group]
#shortdescr=A group protocol
#method=<a href="stddictionary.html#group">group'get</a>,,object;Returns the group collection
#method=<a href="stddictionary.html#group">group'set</a>,object;Sets the group collection

[collection]
#shortdescr=A collection protocol
#method=+=,object;Adds the item to the collection
#method=<a href="stddictionary.html#count">count'get</a>,,array;Returns the number of items

[magnitude]
#shortdescr=A magnitude protocol
#method===,magnitude,bool;Returns <b>true</b> if the object value is equal to the parameter otherwise <b>false</b>.
#method=!=,magnitude,bool;Returns <b>true</b> if the object value is not equal to the parameter otherwise <b>false</b>.
#method=>,magnitude,bool;Returns <b>true</b> if the object value is greater than the parameter otherwise <b>false</b>.
#method=<,magnitude,bool;Returns <b>true</b> if the object value is less than the parameter otherwise <b>false</b>.
#method=>=,magnitude,bool;Returns <b>true</b> if the object value is greater or equal to the parameter otherwise <b>false</b>.
#method=<=,magnitude,bool;Returns <b>true</b> if the object value is less or equal to the parameter otherwise <b>false</b>.

[container]
#shortdescr=A container protocol
#method=<a href="stddictionary.html#content">content'get</a>,,object;Returns the object content
#method=<a href="stddictionary.html#content">content'set</a>,object;Sets the object content
#method=<a href="stddictionary.html#content">content'exchange</a>,container;Exchanges the content
#method=<a href="stddictionary.html#content">content'lock</a>,,;Locks the content

[arithmetic]
#shortdescr=An arithmetic protocol
#method=+,object,object;Returns the sum.
#method=-,object,object;Returns the difference.
#method=*,object,object;Returns the products
#method=/,object,object;Returns the fraction.

[array]
#shortdescr=An array protocol
#method=<a href="stddictionary.html#array">array'get</a>,,array;Returns the array
#method=<a href="stddictionary.html#count">count'get</a>,,array;Returns the number of array items

[literal]
#shortdescr=A literal protocol
#method=<a href="stddictionary.html#literal">literal'get</a>,,object;Returns the literal value
#method=<a href="stddictionary.html#count">count'get</a>,,array;Returns the string length

[char]
#shortdescr=A charcter protocol
#method=<a href="stddictionary.html#char">char'get</a>,,object;Returns the character
#method=<a href="stddictionary.html#int">int'get</a>,,object;Returns the character code

[printable]
#shortdescr=A printable protocol
#method=<a href="stddictionary.html#printer">printer'writeto</a>,printer;Writes the object text represenation to the stream writer

[printer]
#shortdescr=A text writer protocol
#method=<a href="stddictionary.html#literal">literal'write</a>,literal;Prints the literal value
#method=<a href="stddictionary.html#int">int'write</a>,int;Prints the literal representation of an integer value
#method=<a href="stddictionary.html#long">long'write</a>,long;Prints the literal representation of a long integer value
#method=<a href="stddictionary.html#real">real'write</a>,int;Prints the literal representation of a real number value

[bool]
#shortdescr=A bool protocol
#method=?,,;Succeeds if the object has <b>true</b> value.
#method=!,,;Succeeds if the object has <b>false</b> value.
#method=<a href="stddictionary.html#bool">bool'and</a>,bool,bool;Returns the result of the logical AND operation.
#method=<a href="stddictionary.html#bool">bool'get</a>,,bool;Returns itself
#method=<a href="stddictionary.html#bool">bool'or</a>,bool,bool;Always returns <b>true</b>.
#method=<a href="stddictionary.html#bool">bool'not</a>,,bool;Always returns <b>false</b>.
#method=<a href="stddictionary.html#bool">bool'xor</a>,bool,bool;Returns the result of the logical XOR operation.

[variable]
#shortdescr=A variable protocol
#method=<<,object;Copies the object content

[arithmetic_variable]
#shortdescr=An arithmetic variable protocol
#method=<<,object;Copies the number value
#method=+=,object;Adds an operand to the object.
#method=-=,object;Subtracts the operand from the object
#method=*=,object;Multiplies the object by an operand
#method=/=,object;Divides the object into an operand

[inputable]
#shortdescr=A binary value readable protocol
#method=<a href="stddictionary.html#input">input'read</a>,input,object;Reads the text value from the reader and returns the object containing this value

[input]
#shortdescr=An input protocol
#method=<a href="stddictionary.html#literal">char'get</a>,,char;Returns the inputed character
#method=<a href="stddictionary.html#literal">literal'get</a>,,literal;Returns the inputed line

[typecaster]
#shortdescr=An object typecasting action protocol
#method=of,object,object;Tries to convert the provide object

[arraypatterm]
#shortdescr=An array factory attribute protocol
#method=<a href="stddictionary.html#count">count'get</a>,,int;Returns the desired array length
#method=<a href="stddictionary.html#pattern">pattern'proceed</a>,object;Applies the pattern to the newly created array

[factory]
#shortdescr=An object factory protocol
#method=*create,object,object;Creates the object with provided properties

[writer]
#shortdescr=A writer protocol
#method=<a href="stddictionary.html#barray">barray'write</a>,bytearray;Writes the byte array value
#method=<a href="stddictionary.html#int">int'write</a>,int;Writes the integer value
#method=<a href="stddictionary.html#literal">literal'write</a>,literal;Writes the literal value
#method=<a href="stddictionary.html#long">long'write</a>,int;Writes the long integer value
#method=<a href="stddictionary.html#real">real'write</a>,real;Writes the real number value
#method=<a href="stddictionary.html#varray">varray'write</a>,varbytearray;Writes the variable byte array value

[bytearray]
#shortdescr=A byte array protocol
#method=<a href="stddictionary.html#barray">barray'get</a>,,object;Returns the byte array

[stream]
#shortdescr=A stream protocol
#method=<a href="stddictionary.html#reader">reader'get</a>,,reader;Returns the reader
#method=<a href="stddictionary.html#writer">writer'get</a>,,writer;Returns the writer

[reader]
#shortdescr=A writer protocol
#method=<a href="stddictionary.html#barray">barray'read</a>,bytearray;Reads the byte array value
#method=<a href="stddictionary.html#int">int'read</a>,int;Reads the integer value
#method=<a href="stddictionary.html#literal">literal'read</a>,literal;Reads the literal value
#method=<a href="stddictionary.html#long">long'read</a>,int;Reads the long integer value
#method=<a href="stddictionary.html#real">real'read</a>,real;Reads the real number value
#method=<a href="stddictionary.html#varray">varray'read</a>,varbytearray;Reads the variable byte array value

[long]
#shortdescr=A long integer protocol
#method=<a href="stddictionary.html#long">long'get</a>,,long;Returns the long integer

[real]
#shortdescr=A real number protocol
#method=<a href="stddictionary.html#real">real'get</a>,,real;Returns the real number

[varbytearray]
#shortdescr=A variable byte array protocol
#method=<a href="stddictionary.html#varray">varray'get</a>,,object;Returns the variable byte array

[bytearrayattr]
#shortdescr=A byte array factory attribute protocol
#method=<a href="stddictionary.html#pattern">pattern'proceed</a>,object;Applies the pattern to the newly created array
#method=<a href="stddictionary.html#size">size'get</a>,,int;Returns the desired array size

[func_argument]
#shortdescr=An (X,Y) function argument
#method=<a href="stddictionary.html#math">math'x'get</a>,,object;Returns an x argument
#method=<a href="stddictionary.html#math">math'y'get</a>,,object;Returns an y argument

[#general#]
#name=win32'api
#shortdescr=Provides classes that implement the primitive data operations for win32 package

[#list#]
classtype
commandline
dword
filehandle
filehandletype
handle
handletype
hbitmap
hbrush
hdc
hinstance
hwnd
hwndtype
instance
lpcstr
msg
message
paintstruct
stdinput
stdoutput
windprocptr

[dword]
#title=Class DWORD
#shortdescr=A DWORD wrapper class
#protocol=int
#parent=elena.html#object:Object
#method=<a href="stdscopes.html#int">int'get</a>,,object;Returns the integer

[handle]
#title=Class Handle
#shortdescr=A handle primitive type
#parent=elena.html#object:Object
#parent=dword:win32'api'DWORD
#protocol=win32protocol.html#handle:handle
#method=<a href="win32scopes.html#handler">win32'handle'get</a>,,int;Returns the handler

[stdoutput]
#title=Symbol StdOutput handle
#shortdescr=A console standard output handle
#protocol=win32protocol.html#handle:handle

[handletype]
#title=Symbol HandleType
#shortdescr=A handle adapter
#protocol=typecaster
#method=of,object,win32protocol.html#handle;Tries to convert the parameter to a win32 handle

[stdinput]
#title=Symbol StdInput handle
#shortdescr=A console standard input handle
#protocol=win32protocol.html#handle:handle

[commandline]
#title=Symbol CommandLine
#shortdescr=A program command line

[filehandle]
#title=Class Handle
#shortdescr=A handle primitive type
#protocol=win32protocol.html#handle:handle
#parent=elena.html#object:Object
#parent=dword:win32'api'DWORD
#parent=handle:win32'api'Handle
#method=free,,;Releases the handle
#method=<a href="stdscopes.html#barray">barray'write</a>,bytearray;Writes the byte array value
#method=<a href="stdscopes.html#barray">barray'read</a>,bytearray;Reads the byte array value
#method=<a href="stdscopes.html#int">int'write</a>,int;Writes the integer value
#method=<a href="stdscopes.html#int">int'read</a>,int;Reads the integer value
#method=<a href="stdscopes.html#literal">literal'write</a>,literal;Writes the literal value
#method=<a href="stdscopes.html#long">long'write</a>,int;Writes the long integer value
#method=<a href="stdscopes.html#long">long'read</a>,int;Reads the long integer value
#method=<a href="stdscopes.html#real">real'write</a>,real;Writes the real number value
#method=<a href="stdscopes.html#real">real'read</a>,real;Reads the real number value
#method=<a href="stdscopes.html#varray">varray'write</a>,varbytearray;Writes the variable byte array value
#method=<a href="stdscopes.html#varray">varray'read</a>,varbytearray;Reads the variable byte array value
#method=<a href="win32scopes.html#handler">win32'handle'get</a>,,int;Returns the handler

[filehandletype]
#title=Symbol FileHandleType
#shortdescr=A file handle adapter
#protocol=typecaster
#protocol=factory
#method=create,win32protocol.html#fileattr,win32protocol.html#handle;Creates a file handle
#method=create,sysprotocol.html#fileattr,win32protocol.html#handle;Creates a file handle
#method=of,object,win32protocol.html#handle;Tries to convert the parameter to a win32 handle

[instance]
#title=Symbol Instance
#shortdescr=An application instance handle
#protocol=win32protocol.html#handle:handle
#method=<a href="win32scopes.html#handler">win32'handle'get</a>,,int;Returns the handler

[hinstance]
#title=Class HInstance
#shortdescr=An application instance handle primitive type
#parent=elena.html#object:Object
#parent=dword:win32'api'DWORD
#parent=handle:win32'api'Handle
#protocol=win32protocol.html#handle:handle
#method=<a href="win32scopes.html#handler">win32'handle'get</a>,,int;Returns the handler

[hwnd]
#title=Class Handle
#shortdescr=A handle primitive type
#protocol=win32protocol.html#handle:handle
#protocol=win32protocol.html#controlhandler:controlhandler
#parent=elena.html#object:Object
#parent=dword:win32'api'DWORD
#parent=handle:win32'api'Handle
#method=free,,;Releases the handle
#method=<a href="guiscopes.html#size">locatiton'set</a>,guicontrols.html#location;Sets the window location
#method=<a href="guiscopes.html#size">size'set</a>,guicontrols.html#size;Sets the window size
#method=<a href="win32scopes.html#handler">win32'handler'get</a>,,int;Returns the handler object
#method=<a href="win32scopes.html#hwnd">win32'hwnd'visible'set</a>,int;Shows or hides the window
#method=<a href="win32scopes.html#hwnd">win32'hwnd'text'set</a>,literal;Set the control text
#method=<a href="win32scopes.html#hwnd">win32'hwnd'text'get</a>,,literal;Get the control text

[hwndtype]
#title=Symbol HWNDType
#shortdescr=A HWND handle adapter
#protocol=typecaster
#protocol=factory
#method=<a href="guiscopes.html#style">control'style'create</a>,win32protocol.html#controlattr,win32protocol.html#controlhandler;Creates HWND handle
#method=of,object,win32protocol.html#controlhandler;Tries to convert the parameter to HWND handle

[classtype]
#title=Symbol ClassType
#shortdescr=A class type adapter
#protocol=factory
#method=<a href="guiscopes.html#style">win32'class'create</a>,win32protocol.html#classattr,literal;Registers the control class

[lpcstr]
#title=Symbol LPCSTR
#shortdescr=A constan literal reference
#method=new,literal,int;Returns the pointer to the constant literal

[windprocptr]
#title=Symbol WindProcPTR
#shortdescr=A WindProc pointer

[message]
#title=Class Message
#shortdescr=A Message primitive type
#parent=elena.html#object:Object
#method=<a href="win32scopes.html#message">message'lparam'get</a>,,int;Returns LPARAM field
#method=<a href="win32scopes.html#message">message'wparam'get</a>,,int;Returns WPARAM field
#method=<a href="win32scopes.html#message">message'id'get</a>,,int;Returns ID field
#method=<a href="win32scopes.html#message">message'proceed</a>,object,object;Sends a message

[msg]
#title=Class MSG
#shortdescr=An MSG primitive type
#parent=elena.html#object:Object
#method=<a href="win32scopes.html#msg">win32'msg'continue</a>,win32protocol.html#controlhandler;Proceeds the current message
#method=<a href="win32scopes.html#msg">win32'msg'proceed</a>,win32protocol.html#controlhandler;Execute the main application loop

[hdc]
#title=Class HDC
#shortdescr=An HDC primitive type
#parent=elena.html#object:Object
#method=<a href="win32scopes.html#hdc">hdc'bkcolor'set</a>,int;Sets the background color
#method=<a href="win32scopes.html#hdc">hdc'bkmode'set</a>,int;Sets the background mode

[hbrush]
#title=Class HBRUSH
#shortdescr=A HBRUSH primitive type
#protocol=win32protocol.html#handle:handle
#protocol=win32protocol.html#controlhandler:controlhandler
#parent=elena.html#object:Object
#parent=dword:win32'api'DWORD
#parent=handle:win32'api'Handle
#method=free,,;Releases the handle
#method=<a href="win32scopes.html#handler">win32'handler'get</a>,,int;Returns the handler object

[paintstruct]
#title=Class PAINTSTRUCT
#shortdescr=A PAINTSTRUCT primitive type
#parent=elena.html#object:Object
#method=<a href="win32scopes.html#hwnd">win32'hwnd'paint'start</a>,hdc;Starts painting
#method=<a href="win32scopes.html#hwnd">win32'hwnd'paint'stop</a>,hdc;Ends painting

[hbitmap]
#title=Class HBITMAP
#shortdescr=A HBITMAP primitive type
#protocol=win32protocol.html#handle:handle
#protocol=win32protocol.html#controlhandler:controlhandler
#parent=elena.html#object:Object
#parent=dword:win32'api'DWORD
#parent=handle:win32'api'Handle

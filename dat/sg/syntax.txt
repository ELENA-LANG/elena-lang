__define START          	 1
__define eps            	 2

__define TOKEN 			 4112
__define GLOBAL_TOKEN 		 4113
__define SCOPE_DECLARATION	 4128
__define SCOPE_CLASS_DECLARATION 4129
__define SCOPE_FIELD_DECLARATION 4130
__define ATTRIBUTE_DECLARATION   4144
__define SIZE 			 4160
__define BASE 			 4176
__define STATEMENT_BASE          4177
__define DISPATCH		 4208
__define TEMPLATE_ARGS		 4272
__define NESTED_CLASS		 4288
__define PARAMETER 		 4304
__define EMPTY_PARAMETER	 4320
__define STATEMENT_DECLARATION   4352
__define STATEMENT_ARGS 	 4368
__define FIELD_ASSIGNER          4384
__define DYNAMIC_SIZE 		 4400
__define CLOSURE_EXPRESSION 	 4416
__define INLINE_DECLARATION 	 4432
__define INLINE_ARG 	         4448
__define FIELD_ACCUMULATOR       4464
__define ATTR_EXPRESSION         4496
__define BLOCK 		        69728
__define BLOCK_END	        69776
__define MESSAGE	       135296
__define IMPLICIT_MESSAGE      135297
__define ASSIGN_OPERATOR       135328
__define L7_OPERATOR  	       135408
__define L4_OPERATOR  	       135409
__define L5_OPERATOR  	       135410
__define L3_OPERATOR  	       135411
__define L8_OPERATOR  	       135412
__define L6_OPERATOR  	       135413
__define L8b_OPERATOR  	       135414
__define ARRAY_OPERATOR        135552
__define EXPRESSION	       364592
__define ROOT_EXPRESSION       364593
__define OPERAND_EXPRESSION    364594
__define SINGLE_STATEMENT      364595
__define L4_EXPRESSION         364596
__define L3_EXPRESSION         364597
__define SUB_EXPRESSION        364598
__define L5_EXPRESSION         364599
__define L8_EXPRESSION         364600
__define L6_EXPRESSION         364601
__define SINGLE_BLOCK 	       364602
__define RET_EXPRESSION	       364848
__define RESEND                364912  

__define eof            	 8208
__define identifier 	 	 8209
__define hex 			 8210
__define reference		 8211
__define global			 8212
__define integer                 8213
__define literal                 8214
__define meta                    8215
__define wide                    8216
__define character               8217
__define long                    8218
__define real                    8219

START ->
	DECLARATION DECLARATIONS eof
	| eof

ATTRIBUTE_DECLARATION ->
	identifier SIZE

STATEMENT_DECLARATION ->
	identifier STATEMENT_DECLARATION_BODY

STATEMENT_DECLARATION_BODY ->
	TEMPLATE_ARGS METHOD_DECLARATION
	| COLON STATEMENT_BASE STATEMENT_DECLARATION_BODY
	| METHOD_DECLARATION

INLINE_DECLARATION ->
	identifier INLINE_DECLARATION_BODY

INLINE_DECLARATION_BODY ->
	TEMPLATE_ARGS { SCOPE_FIELD_DECLARATIONS }

DECLARATIONS ->
	DECLARATION DECLARATIONS
	| eps

DECLARATION ->
        TOKEN NEXT_DECLARATION_ITEM
	| OPENING_SBRACKET INLINE_ARG INLINE_ARGS TOKEN NEXT_DECLARATION_ITEM
	| #define ATTRIBUTE_DECLARATION
	| #declare STATEMENT_DECLARATION
	| #inline INLINE_DECLARATION

INLINE_ARGS ->
	# OPENING_CURLY_BRACKET INLINE_ARG INLINE_ARGS
	| eps	

NEXT_DECLARATION_ITEM ->
	TOKEN NEXT_DECLARATION_ITEM
	| TEMPLATE_ARGS NEXT_TEMPLATE_TOKEN
	| DYNAMIC_SIZE DYNAMIC_SIZES LAST_TEMPLATE_TOKEN
	| SCOPE_DECLARATION

LAST_TEMPLATE_TOKEN ->
	TOKEN SCOPE_DECLARATION

NEXT_TEMPLATE_TOKEN ->	
	SCOPE_CLASS_DECLARATION
	| LAST_TEMPLATE_TOKEN

SCOPE_DECLARATIONS ->
	TOKEN NEXT_DECLARATION_ITEM SCOPE_DECLARATIONS
	| OPENING_SBRACKET INLINE_ARG INLINE_ARGS TOKEN NEXT_DECLARATION_ITEM SCOPE_DECLARATIONS
	| eps

SCOPE_CLASS_DECLARATION ->
	CLASS_DECLARATION
	| COLON BASE BASE_DECLARATION

SCOPE_FIELD_DECLARATIONS ->
	TOKEN NEXT_FIELD_TOKEN SCOPE_FIELD_DECLARATION SCOPE_FIELD_DECLARATIONS
	| eps

NEXT_FIELD_TOKEN ->
	TOKEN NEXT_FIELD_TOKEN
	| eps

SCOPE_FIELD_DECLARATION ->
	ASSIGN_SIGN FIELD_ASSIGNER DECLARATION_END	

SCOPE_DECLARATION ->
	CLASS_DECLARATION
	| COLON BASE BASE_DECLARATION
	| SYMBOL_DECLARATION DECLARATION_END
	| METHOD_DECLARATION
	| SIZE_DECLARATION DECLARATION_END
	| ASSIGN_SIGN FIELD_ASSIGNER DECLARATION_END
	| APPEND_SIGN FIELD_ACCUMULATOR DECLARATION_END	
	| DECLARATION_END

SIZE_DECLARATION ->
	[ SIZE ]

BASE_DECLARATION ->
	CLASS_DECLARATION
	| DECLARATION_END
	| , BASE BASE_DECLARATION

CLASS_DECLARATION ->
	{ SCOPE_DECLARATIONS }

METHOD_DECLARATION ->
	( PARAMETERS ) METHOD_BODY

METHOD_BODY ->
	BLOCK
	| = RET_EXPRESSION DECLARATION_END
	| => DISPATCH DECLARATION_END
	| <= RESEND RESEND_DECLARATION

RESEND_DECLARATION ->
	DECLARATION_END
	| BLOCK

DISPATCH ->
	EXPRESSION

SYMBOL_DECLARATION ->
	= EXPRESSION

FIELD_ASSIGNER ->
	EXPRESSION

FIELD_ACCUMULATOR ->
	EXPRESSION

ATTR_EXPRESSION ->
	EXPRESSION

RET_EXPRESSION ->
	EXPRESSION

CLOSURE_EXPRESSION ->
	BLOCK

BLOCK ->
	OPENING_CURLY_BRACKET STATEMENTS

SINGLE_BLOCK ->
	SINGLE_STATEMENT

STATEMENTS ->
	STATEMENT NEXT_STATEMENT
	| ^ RET_EXPRESSION RET_STATEMENT_END
	| BLOCK_END

NEXT_STATEMENT ->
        DECLARATION_END STATEMENTS
	| BLOCK_END

SINGLE_STATEMENT ->
	TOKEN TS_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION

STATEMENT ->
	ROOT_EXPRESSION

ROOT_EXPRESSION ->
        TOKEN TR_OPERATIONS
	| GLOBAL_TOKEN T_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION E_OPERATIONS
	| integer E_OPERATIONS
	| long E_OPERATIONS
	| real E_OPERATIONS
	| hex E_OPERATIONS
	| literal E_OPERATIONS
	| character E_OPERATIONS
	| wide E_OPERATIONS

EXPRESSION ->
	TOKEN TI_OPERATIONS
	| GLOBAL_TOKEN T_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION
	| integer E_OPERATIONS
	| long E_OPERATIONS
	| real E_OPERATIONS
	| hex E_OPERATIONS
	| literal E_OPERATIONS
	| character E_OPERATIONS
	| wide E_OPERATIONS
	| meta

L3_EXPRESSION ->
	TOKEN E3_OPERATIONS
	| GLOBAL_TOKEN E3_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION
	| integer E3_OPERATIONS
	| long E3_OPERATIONS
	| real E3_OPERATIONS
	| hex E3_OPERATIONS
	| literal E3_OPERATIONS
	| character E3_OPERATIONS
	| wide E3_OPERATIONS

L4_EXPRESSION ->
	TOKEN E4_OPERATIONS
	| GLOBAL_TOKEN E4_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION
	| integer E4_OPERATIONS
	| long E4_OPERATIONS
	| real E4_OPERATIONS
	| hex E4_OPERATIONS
	| literal E4_OPERATIONS
	| character E4_OPERATIONS
 	| wide E4_OPERATIONS

L5_EXPRESSION ->
	TOKEN E5_OPERATIONS
	| GLOBAL_TOKEN E5_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION
	| integer E5_OPERATIONS
	| long E5_OPERATIONS
	| real E5_OPERATIONS
	| hex E5_OPERATIONS
	| literal E5_OPERATIONS
	| character E5_OPERATIONS
	| wide E5_OPERATIONS

L6_EXPRESSION ->
	TOKEN E6_OPERATIONS
	| GLOBAL_TOKEN E6_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION
	| integer E6_OPERATIONS
	| long E6_OPERATIONS
	| real E6_OPERATIONS
	| hex E6_OPERATIONS
	| literal E6_OPERATIONS
	| character E6_OPERATIONS
	| wide E6_OPERATIONS

L8_EXPRESSION ->
	MESSAGE MESSAGE_BODY

OPERAND_EXPRESSION ->
	TOKEN
	| GLOBAL_TOKEN
	| OPENING_BRACKET SUB_EXPRESSION
	| integer
	| long
	| real
	| hex
	| literal
	| character
	| wide

SUB_EXPRESSION ->
	TOKEN SUB_TR_OPERATIONS
	| GLOBAL_TOKEN SUB_T_OPERATIONS
	| integer E_OPERATIONS CLOSING_BRACKET
	| long E_OPERATIONS CLOSING_BRACKET
	| real E_OPERATIONS CLOSING_BRACKET
	| hex E_OPERATIONS CLOSING_BRACKET
	| literal E_OPERATIONS CLOSING_BRACKET
	| wide E_OPERATIONS CLOSING_BRACKET
	| character E_OPERATIONS CLOSING_BRACKET

TR_OPERATIONS ->
	TOKEN T_OPERATIONS
        | IMPLICIT_OPERATION STATEMENT_OPERATIONS
	| STATEMENT_OPERATION NEXT_STATEMENT_ARG
	| T0_OPERATIONS
	| : ATTR_EXPRESSION

TI_OPERATIONS ->
	TOKEN T_OPERATIONS
	| L0_OPERATION L0_OPERATIONS L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L5_OPERATION L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| DYNAMIC_SIZE TEMPLATE_OPERATIONS
	| ASSIGNMENT_OPERATION
	| :: DCOLON_OPERATION E_OPERATIONS
	| OPERATIONS

T_OPERATIONS ->
	TOKEN T_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
        | T0_OPERATIONS

SUB_TR_OPERATIONS ->
	L5_OPERATION L7_OPERATIONS CLOSING_BRACKET
	| SUB_T_OPERATIONS

SUB_T_OPERATIONS ->
	TOKEN SUB_T_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS CLOSING_BRACKET
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS CLOSING_BRACKET
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS CLOSING_BRACKET
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS CLOSING_BRACKET
	| CLOSING_BRACKET SUB_T0_OPERATIONS
	| => RET_EXPRESSION CLOSING_BRACKET
	| , PARAMETER SUB_T_PARAMETERS

SUB_T_PARAMETERS ->
	CLOSING_BRACKET SUB_T0_OPERATIONS
	| , PARAMETER SUB_T_PARAMETERS
	| => RET_EXPRESSION CLOSING_BRACKET	

SUB_T0_OPERATIONS ->
	CLOSURE_EXPRESSION
	| eps

TS_OPERATIONS ->
	eps

T0_OPERATIONS ->
	TEMPLATE_ARGS TEMPLATE_OPERATIONS
	| DYNAMIC_SIZE TEMPLATE_OPERATIONS
	| ASSIGNMENT_OPERATION
	| :: DCOLON_OPERATION
	| L0_OPERATION L0_OPERATIONS L0_FOLLOWERS
	| L2_OPERATION L2_OPERATIONS L2_FOLLOWERS
	| OPERATIONS

E_OPERATIONS ->
        L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L5_OPERATION
	| OPERATIONS

E3_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS L2_OPERATIONS
	| L2_OPERATION L2_OPERATIONS
	| eps	

E4_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS
	| L3_OPERATION L3_OPERATIONS
	| eps	

E5_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS
	| L4_OPERATION L4_OPERATIONS
	| eps	

E6_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS
	| L5_OPERATION
	| eps	

OPERATIONS ->
	L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L6_OPERATION L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L7_OPERATION L8_OPERATIONS
	| L8_OPERATION
	| eps

TEMPLATE_OPERATIONS ->
	TOKEN ASSIGNMENT_OPERATIONS
	| DYNAMIC_SIZE TEMPLATE_OPERATIONS
	| E_OPERATIONS

L0_FOLLOWERS ->
	L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L5_OPERATION L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L6_OPERATION L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L7_OPERATION L8_OPERATIONS
	| L8_OPERATION
	| ASSIGNMENT_OPERATION
	| eps

L0_OPERATIONS ->
	L0_OPERATION L0_OPERATIONS
	| eps

L0_OPERATION ->
	ARRAY_OPERATION

ARRAY_OPERATION ->
	ARRAY_OPERATOR EXPRESSION CLOSING_SBRACKET

L1_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS
	| eps

RESEND ->
	MESSAGE RESEND_BODY

L1_OPERATION ->
  	IMPLICIT_OPERATION

L2_FOLLOWERS ->
	L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L5_OPERATION L5_OPERATIONS L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L6_OPERATION L6_OPERATIONS L7_OPERATIONS L8_OPERATIONS
	| L7_OPERATION L8_OPERATIONS
	| L8_OPERATION
	| ASSIGNMENT_OPERATION
	| eps

L2_OPERATIONS ->
	L2_OPERATION L2_OPERATIONS
	| eps
	                                                                                                    
L2_OPERATION ->
	. MESSAGE MESSAGE_BODY

L3_OPERATIONS ->
	L3_OPERATION L3_OPERATIONS
	| eps

L3_OPERATION ->
	L3_OPERATOR L3_EXPRESSION

L4_OPERATIONS ->
	L4_OPERATION L4_OPERATIONS
	| eps

L4_OPERATION ->
	L4_OPERATOR L4_EXPRESSION

L5_OPERATIONS ->
	L5_OPERATION
	| eps	 

L5_OPERATION ->
	L5_OPERATOR L5_EXPRESSION

L6_OPERATIONS ->
	L6_OPERATION L6_OPERATIONS
	| eps	 

L6_OPERATION ->
	L6_OPERATOR L6_EXPRESSION

L7_OPERATIONS ->
	L7_OPERATION
	| eps

L7_OPERATION ->
	L7_OPERATOR L7_OPERAND ELSE_OPERATIONS

L8_OPERATIONS ->
	L8_OPERATION
	| eps

L8_OPERATION ->
	L8_OPERATOR L8_EXPRESSION
	| L8b_OPERATOR OPERAND_EXPRESSION

STATEMENT_OPERATION ->
	BLOCK

STATEMENT_OPERATIONS ->
	STATEMENT_ARGS
	| E_OPERATIONS

MESSAGE_BODY ->
	( MESSAGE_PARAMETERS )
	| EMPTY_PARAMETER
	| : OPERAND_EXPRESSION

RESEND_BODY ->
	( MESSAGE_PARAMETERS )

MESSAGE_PARAMETERS ->
	EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps

NEXT_MESSAGE_PARAMETER ->
	, EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps	

IMPLICIT_OPERATION ->
	IMPLICIT_MESSAGE MESSAGE_PARAMETERS )

ASSIGNMENT_OPERATIONS ->
	ASSIGNMENT_OPERATION
	| eps

ASSIGNMENT_OPERATION ->
	ASSIGN_OPERATOR EXPRESSION

DCOLON_OPERATION ->
	NESTED_CLASS

NESTED_CLASS ->
	OPENING_CURLY_BRACKET SCOPE_DECLARATIONS CLOSING_CURLY_BRACKET

ELSE_OPERATIONS ->
	: L7_OPERAND
	| eps	

L7_OPERAND ->
	BLOCK
	| OPERAND_EXPRESSION

PARAMETERS ->
	PARAMETER NEXT_PARAMETER	
	| eps

PARAMETER ->
	TOKENS

EMPTY_PARAMETER ->
	eps

NEXT_PARAMETER ->
	, PARAMETER NEXT_PARAMETER
	| eps
	
TOKENS ->
	TOKEN NEXT_TOKEN

NEXT_TOKEN ->
	TOKENS
	| TEMPLATE_ARGS TEMPLATE_TOKEN
	| DYNAMIC_SIZE DYNAMIC_SIZES TOKEN
	| eps

TEMPLATE_TOKEN ->
	DYNAMIC_SIZE DYNAMIC_SIZES TOKEN
	| TOKEN

TOKEN ->
	identifier
	| reference

GLOBAL_TOKEN ->
	global

TEMPLATE_ARG ->
	TOKEN TOKEN_BODY
	| GLOBAL_TOKEN TOKEN_BODY	

TOKEN_BODY ->
	TEMPLATE_ARGS DYNAMIC_SIZES
	| DYNAMIC_SIZE DYNAMIC_SIZES
	| eps	

TEMPLATE_ARGS ->
	OPENING_EDGE_BRACKET TEMPLATE_ARG NEXT_TEMPLATE_ARG

NEXT_TEMPLATE_ARG ->
	, TEMPLATE_ARG NEXT_TEMPLATE_ARG
	| >

NEXT_STATEMENT_ARG ->
	TOKEN STATEMENT_ARG NEXT_STATEMENT_ARG
	| eps

STATEMENT_ARG ->
	BLOCK 
	| COLON SINGLE_BLOCK
	
STATEMENT_ARGS ->
	STATEMENT_ARG NEXT_STATEMENT_ARG

INLINE_ARG ->
	identifier INLINE_PARAMS 

INLINE_PARAMS ->
	: OPERAND_EXPRESSION NEXT_INLINE_PARAM
	| CLOSING_SBRACKET

NEXT_INLINE_PARAM ->
	, OPERAND_EXPRESSION NEXT_INLINE_PARAM
	| CLOSING_SBRACKET

ARRAY_OPERATOR ->
	[

MESSAGE ->                                                                                                   
	identifier

ASSIGN_OPERATOR ->
	:=

ASSIGN_SIGN ->
	:=

APPEND_SIGN ->
	+=

L3_OPERATOR ->
	*
	| /
	| $shr
	| $shl
	| $sizeof

L4_OPERATOR ->
	+
	| -

L5_OPERATOR ->
	<
	| >
	| ==
	| !=
	| >=
	| <=

L6_OPERATOR ->
	&&
	| &|
	| ^^

L7_OPERATOR ->
	?
	| !

L8_OPERATOR ->
	||
	| \

L8b_OPERATOR ->
	??

SIZE ->
	hex
	| integer

BASE ->
	TOKEN BASE_ARGS
	| GLOBAL_TOKEN BASE_ARGS

BASE_ARGS ->
	TEMPLATE_ARGS
	| eps

STATEMENT_BASE ->
	TOKEN
	| GLOBAL_TOKEN

DYNAMIC_SIZES ->
	DYNAMIC_SIZE DYNAMIC_SIZES
	| eps
	
DYNAMIC_SIZE ->
	[]

IMPLICIT_MESSAGE ->
	OPENING_BRACKET

OPENING_BRACKET ->
	(

OPENING_CURLY_BRACKET ->
	{

OPENING_EDGE_BRACKET ->
	<

OPENING_SBRACKET ->
	[

COLON ->
	:

RET_STATEMENT_END ->
	DECLARATION_END BLOCK_END
	| BLOCK_END

DECLARATION_END ->
	;

CLOSING_CURLY_BRACKET ->
	}

BLOCK_END ->
	}

CLOSING_BRACKET ->
	)

CLOSING_SBRACKET ->
	]

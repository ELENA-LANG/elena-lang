__define START          	1
__define eps            	2

__define TEMPLATE               4111
__define EXPRESSION		4114
__define TOKEN_PARAM		4117
__define OBJECT			4121
__define CODE_BLOCK		4122
__define MESSAGE		4123
__define BLOCK_END		4125
__define DISPATCH               4128
__define BASE_CLASS             4131
__define TOKEN   		4172
__define SCOPE   		4173
__define ATTRIBUTE   		4174

__define DECLARATION_END_EXPECTED	16384
__define BLOCK_CLOSING_EXPECTED         16386

__define eof            	12291
__define identifier		12293
__define private	        12294
__define reference		12295
__define integer		12296
__define attribute		12303

START ->
	SCOPE_DECLARATION DECLARATIONS eof
	| ATTRIBUTE_DECLARATION DECLARATIONS eof
	| eof

SCOPE_DECLARATION ->
	TOKEN TOKENS SCOPE

ATTRIBUTE_DECLARATION ->
	ATTRIBUTE ATTRIBUTES TEMPLATE DECLARATION_END

DECLARATIONS ->
	SCOPE_DECLARATION DECLARATIONS
	| ATTRIBUTE_DECLARATION DECLARATIONS eof
	| eps
	
SCOPES ->
	TOKEN TOKENS SCOPE SCOPES
	| eps

TOKENS ->
	TOKEN TOKENS
	| eps

ATTRIBUTES ->
	ATTRIBUTE ATTRIBUTES
	| eps

TOKEN_PARAMS ->
	, TOKEN_PARAM TOKEN_PARAMS
	| )

OPERATIONS ->
	MESSAGE
	| eps

TOKEN ->
	identifier TOKEN_BODY
	| private TOKEN_BODY

TEMPLATE ->
	identifier

SCOPE ->
	= SYMBOL_EXPRESSION DECLARATION_END
	| { SCOPES CLOSING_CURLY_BRACKET
	| :: BASE_CLASS { SCOPES CLOSING_CURLY_BRACKET
	| => DISPATCH DECLARATION_END
	| CODE_BLOCK
	| DECLARATION_END
	
BASE_CLASS ->
	identifier
	| reference

TOKEN_BODY ->
	( TOKEN_PARAM TOKEN_PARAMS
	| eps

CODE_BLOCK ->
	[ FIRST_STATEMENT

FIRST_STATEMENT ->
	BLOCK_END

SYMBOL_EXPRESSION ->
	EXPRESSION

EXPRESSION ->
	OBJECT OPERATIONS

DISPATCH ->
	OBJECT

OBJECT ->
	identifier
	| reference
	| private
	| integer
	| CODE_BLOCK	

MESSAGE ->
	identifier
	| private

ATTRIBUTE ->
	attribute

TOKEN_PARAM ->
	identifier

TERMINATOR ->
	.

BLOCK_END ->
	]
	| BLOCK_CLOSING_EXPECTED

CLOSING_CURLY_BRACKET ->
	}

DECLARATION_END ->
	TERMINATOR
	| DECLARATION_END_EXPECTED


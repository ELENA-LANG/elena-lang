__define START          	1
__define eps            	2

__define TOKEN			4112
__define ROOT_EXPRESSION        4113
__define EXPRESSION             4114
__define SCOPE_DECLARATION      4115
__define PARAMETER		4119
__define NESTED_CLASS		4120
__define BLOCK		        4122
__define MESSAGE		4123
__define BLOCK_END		4125
__define DISPATCH               4128
__define ASSIGN_OPERATOR	4129
__define BASE                   4131
__define RESEND                 4145
__define SWITCHING		4155
__define OPTION			4156
__define LAST_OPTION		4157
__define ATTRIBUTE_DECLARATION  4174
__define L1_OPERATOR            4193
__define L2_OPERATOR            4194
__define L3_OPERATOR            4195
__define L5_OPERATOR            4196
__define RET_EXPRESSION         4198
__define IMPLICIT_MESSAGE       4199
__define SIZE			4200
__define DYNAMIC_SIZE		4201
__define OPERAND_EXPRESSION     4202
__define EMPTY_PARAMETER        4203
__define ARRAY_OPERATOR         4204
__define SUB_EXPRESSION         4205
__define CLOSURE_EXPRESSION     4206
__define SINGLE_STATEMENT       4207
__define L6_OPERATOR            4209
__define L6_OPERAND             4210
__define L3_EXPRESSION          4211
__define L4_OPERATOR            4212
__define COLLECTION             4213
__define L2_EXPRESSION          4214
__define FIELD_ASSIGNER         4215
__define L4_EXPRESSION          4216
__define ASSIGNMENT_OPERATOR    4217
__define NIL_OPERATOR           4218
__define SINGLE_BLOCK		4219
__define NEXT_BLOCK		4220
__define L6b_OPERATOR           4222
__define TEMPLATE_OPERATOR	4225
__define L1_EXPRESSION          4226
__define FIELD_ACCUMULATOR      4227

__define eof            	12291
__define literal		12292
__define identifier		12293
__define reference		12295
__define integer		12296
__define hex			12297
__define real			12298
__define character		12299
__define long                   12300
__define wide                   12301
__define global			12305

START ->
	DECLARATION DECLARATIONS eof
	| eof

DECLARATIONS ->
	DECLARATION DECLARATIONS
	| eps

DECLARATION ->
	#define ATTRIBUTE_DECLARATION
	| TOKEN TOKENS SCOPE_DECLARATION

ATTRIBUTE_DECLARATION ->
	identifier SIZE

SCOPE_DECLARATIONS ->
	TOKEN TOKENS SCOPE_DECLARATION SCOPE_DECLARATIONS
	| eps

SCOPE_DECLARATION ->
	CLASS_DECLARATION
	| COLON BASE BASES BASE_DECLARATION
	| METHOD_DECLARATION
	| SYMBOL_DECLARATION DECLARATION_END
	| SIZE_DECLARATION DECLARATION_END
	| DECLARATION_END
	| APPEND_SIGN FIELD_ACCUMULATOR DECLARATION_END
	| ASSIGN_SIGN FIELD_ASSIGNER DECLARATION_END

BASE_DECLARATION ->
	CLASS_DECLARATION
	| METHOD_DECLARATION

CLASS_DECLARATION ->
	{ SCOPE_DECLARATIONS }

FIELD_ACCUMULATOR ->
	EXPRESSION

FIELD_ASSIGNER ->
	EXPRESSION

SYMBOL_DECLARATION ->
	= EXPRESSION

METHOD_DECLARATION ->
	( PARAMETERS ) METHOD_BODY

METHOD_BODY ->
	BLOCK
	| => DISPATCH DECLARATION_END
	| = RET_EXPRESSION DECLARATION_END
	| <= RESEND RESEND_BODY

BLOCK ->
	OPENING_CURLY_BRACKET STATEMENTS

STATEMENTS ->
	STATEMENT NEXT_STATEMENT
	| ^ RET_EXPRESSION RET_STATEMENT_END
	| BLOCK_END

NEXT_STATEMENT ->
        DECLARATION_END STATEMENTS
	| BLOCK_END

DISPATCH ->
	EXPRESSION

RET_EXPRESSION ->
	EXPRESSION

STATEMENT ->
	ROOT_EXPRESSION

ROOT_EXPRESSION ->
	TOKEN R_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION E_OPERATIONS
	| literal E_OPERATIONS
	| integer E_OPERATIONS
	| hex E_OPERATIONS
	| long E_OPERATIONS
	| real E_OPERATIONS
	| character E_OPERATIONS
	| wide E_OPERATIONS

EXPRESSION ->
	identifier I_OPERATIONS
	| reference I_OPERATIONS
	| global I_OPERATIONS
	| literal E_OPERATIONS
	| integer E_OPERATIONS
	| hex E_OPERATIONS
	| long E_OPERATIONS
	| real E_OPERATIONS
	| character E_OPERATIONS
	| wide E_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION E_OPERATIONS
	| CLOSURE_EXPRESSION E_OPERATIONS

SINGLE_STATEMENT ->
	identifier S_OPERATIONS
	| reference S_OPERATIONS
	| global S_OPERATIONS
	| literal S_OPERATIONS
	| integer S_OPERATIONS
	| hex S_OPERATIONS
	| long S_OPERATIONS
	| real S_OPERATIONS
	| character S_OPERATIONS
	| wide S_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION S_OPERATIONS

OPERAND_EXPRESSION ->
	identifier
	| reference
	| global
	| literal
	| integer
	| hex
	| long
	| real
	| character
	| wide
	| OPENING_BRACKET SUB_EXPRESSION

SUB_EXPRESSION ->
	identifier SUB_I_OPERATIONS
	| reference SUB_I_OPERATIONS
	| global SUB_I_OPERATIONS
	| literal E_OPERATIONS CLOSING_BRACKET
	| integer E_OPERATIONS CLOSING_BRACKET
	| hex E_OPERATIONS CLOSING_BRACKET
	| long E_OPERATIONS CLOSING_BRACKET
	| real E_OPERATIONS CLOSING_BRACKET
	| character E_OPERATIONS CLOSING_BRACKET
	| wide E_OPERATIONS CLOSING_BRACKET
	| CLOSURE_EXPRESSION E_OPERATIONS CLOSING_BRACKET

L1_EXPRESSION ->
	identifier OPERATIONS_1
	| reference OPERATIONS_1
	| global OPERATIONS_1
	| literal OPERATIONS_1
	| integer OPERATIONS_1
	| hex OPERATIONS_1
	| long OPERATIONS_1
	| real OPERATIONS_1
	| character OPERATIONS_1
	| wide OPERATIONS_1
	| OPENING_BRACKET SUB_EXPRESSION OPERATIONS_1

L2_EXPRESSION ->
	identifier OPERATIONS_2
	| reference OPERATIONS_2
	| global OPERATIONS_2
	| literal OPERATIONS_2
	| integer OPERATIONS_2
	| hex OPERATIONS_2
	| long OPERATIONS_2
	| real OPERATIONS_2
	| character OPERATIONS_2
	| wide OPERATIONS_2
	| OPENING_BRACKET SUB_EXPRESSION OPERATIONS_2

L3_EXPRESSION ->
	identifier OPERATIONS_3
	| reference OPERATIONS_3
	| global OPERATIONS_3
	| literal OPERATIONS_3
	| integer OPERATIONS_3
	| hex OPERATIONS_3
	| long OPERATIONS_3
	| real OPERATIONS_3
	| character OPERATIONS_3
	| wide OPERATIONS_3
	| OPENING_BRACKET SUB_EXPRESSION OPERATIONS_3

L4_EXPRESSION ->
	identifier OPERATIONS_4
	| reference OPERATIONS_4
	| global OPERATIONS_4
	| literal OPERATIONS_4
	| integer OPERATIONS_4
	| hex OPERATIONS_4
	| long OPERATIONS_4
	| real OPERATIONS_4
	| character OPERATIONS_4
	| wide OPERATIONS_4
	| OPENING_BRACKET SUB_EXPRESSION OPERATIONS_4

L5_OPERAND ->
	BLOCK
	| OPERAND_EXPRESSION	

I_BODY ->
	NESTED_CLASS
	| COLLECTION

NESTED_CLASS ->
	OPENING_CURLY_BRACKET SCOPE_DECLARATIONS CLOSING_CURLY_BRACKET

COLLECTION ->
	OPENING_BRACKET EXPRESSION NEXT_COLLECTION_ITEM CLOSING_BRACKET

NEXT_COLLECTION_ITEM ->
	, EXPRESSION NEXT_COLLECTION_ITEM
	| eps

CLOSURE_EXPRESSION ->
	BLOCK

TEMPLATE_OPERAND ->
	BLOCK
	| SINGLE_BLOCK

NEXT_TEMPLATE_OPERAND ->
	BLOCK TEMPLATE_OPERANDS
	| SINGLE_BLOCK TEMPLATE_OPERANDS
	| NEXT_BLOCK

TEMPLATE_OPERANDS ->
	TOKEN NEXT_TEMPLATE_OPERAND
	| eps

NEXT_BLOCK ->
	ROOT_EXPRESSION

SINGLE_BLOCK ->
	COLON SINGLE_STATEMENT

SWITCHING ->
	OPTION OPTIONS

OPTION ->
	integer OPTION_BODY
	| character OPTION_BODY
	| literal OPTION_BODY
	| identifier OPTION_BODY

OPTION_BODY ->
	BLOCK

LAST_OPTION ->
	COLON OPTION_BODY

OPTIONS ->
	NEXT_OPTION
	| eps

NEXT_OPTION ->
	OPTION OPTIONS
	| LAST_OPTION

R_OPERATIONS ->
	TOKEN TOKENS T_OPERATIONS_0
	| IMPLICIT_OPERATION IM_OPERATIONS
	| ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| M_OPERATION M_OPERATIONS OPERATIONS
	| :: I_BODY IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| TEMPLATE_OPERAND TEMPLATE_OPERANDS
	| ASSIGNMENT_OPERATION
	| => SWITCHING
	| T_OPERATIONS

IM_OPERATIONS ->
	TEMPLATE_OPERAND TEMPLATE_OPERANDS
	| IMPLICIT_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| M_OPERATION M_OPERATIONS OPERATIONS
	| eps

I_OPERATIONS ->
	TOKEN TOKENS T_OPERATIONS_0
	| ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS OPERATIONS
	| M_OPERATION M_OPERATIONS OPERATIONS
	| :: I_BODY IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| ASSIGNMENT_OPERATION
	| OPERATIONS

E_OPERATIONS ->
	ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS OPERATIONS
	| M_OPERATION M_OPERATIONS OPERATIONS
	| OPERATIONS

S_OPERATIONS ->
	ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS
	| M_OPERATION M_OPERATIONS
	| eps

T_OPERATIONS_0 ->
	ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS OPERATIONS
	| M_OPERATION M_OPERATIONS OPERATIONS
	| :: I_BODY IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS
	| T_OPERATIONS

SUB_T_OPERATIONS ->
	IMPLICIT_OPERATION M_OPERATIONS OPERATIONS CLOSING_BRACKET
	| , PARAMETER SUB_T_PARAMETERS
	| => RET_EXPRESSION CLOSING_BRACKET
        | CLOSING_BRACKET CLOSURE_OPERATIONS
	
SUB_T_PARAMETERS ->
	CLOSING_BRACKET CLOSURE_OPERATIONS
	| , PARAMETER SUB_T_PARAMETERS
	| => RET_EXPRESSION CLOSING_BRACKET

SUB_I_OPERATIONS ->
	TOKEN TOKENS SUB_T_OPERATIONS
	| ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS OPERATIONS CLOSING_BRACKET
	| IMPLICIT_OPERATION M_OPERATIONS OPERATIONS CLOSING_BRACKET
	| M_OPERATION M_OPERATIONS OPERATIONS CLOSING_BRACKET
	| ASSIGN_OPERATOR EXPRESSION CLOSING_BRACKET
	| NIL_OPERATOR OPERAND_EXPRESSION CLOSING_BRACKET
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS CLOSING_BRACKET
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS CLOSING_BRACKET
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS CLOSING_BRACKET
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS CLOSING_BRACKET
	| L5_OPERATION CLOSING_BRACKET
	| , PARAMETER SUB_T_PARAMETERS
	| => RET_EXPRESSION CLOSING_BRACKET
	| CLOSING_BRACKET CLOSURE_OPERATIONS

T_OPERATIONS ->
	ASSIGN_OPERATOR EXPRESSION
	| NIL_OPERATOR OPERAND_EXPRESSION
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L5_OPERATION L6_OPERATIONS
	| L6_OPERATION
	| eps

OPERATIONS ->
	ASSIGN_OPERATOR EXPRESSION
	| NIL_OPERATOR OPERAND_EXPRESSION
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L5_OPERATION L6_OPERATIONS
	| L6_OPERATION
	| eps

OPERATIONS_1 ->
	ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS
	| M_OPERATION M_OPERATIONS
	| eps

OPERATIONS_2 ->
	ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS L1_OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS L1_OPERATIONS
	| M_OPERATION M_OPERATIONS L1_OPERATIONS
	| L1_OPERATION L1_OPERATIONS
	| eps

OPERATIONS_3 ->
	ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS L1_OPERATIONS L2_OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS L1_OPERATIONS L2_OPERATIONS
	| M_OPERATION M_OPERATIONS L1_OPERATIONS L2_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS
	| L2_OPERATION L2_OPERATIONS
	| eps

OPERATIONS_4 ->
	ARRAY_OPERATION IMPLICIT_OPERATIONS M_OPERATIONS L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS
	| IMPLICIT_OPERATION M_OPERATIONS L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS
	| M_OPERATION M_OPERATIONS L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS
	| L3_OPERATION
	| eps

ARRAY_OPERATIONS ->
	ARRAY_OPERATION ARRAY_OPERATIONS
	| eps

ARRAY_OPERATION ->
	ARRAY_OPERATOR EXPRESSION CLOSING_SBRACKET

ASSIGNMENT_OPERATION ->
	ASSIGNMENT_OPERATOR EXPRESSION

L1_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS
	| eps

L1_OPERATION ->
	L1_OPERATOR L1_EXPRESSION

L2_OPERATIONS ->
	L2_OPERATION L2_OPERATIONS
	| eps

L2_OPERATION ->
	L2_OPERATOR L2_EXPRESSION

L3_OPERATIONS ->
	L3_OPERATION
	| eps

L3_OPERATION ->
	L3_OPERATOR L3_EXPRESSION
	
L4_OPERATIONS ->
	L4_OPERATION L4_OPERATIONS
	| eps

L4_OPERATION ->
	L4_OPERATOR L4_EXPRESSION
	
L5_OPERATIONS ->
	L5_OPERATION
	| eps

ELSE_OPERATIONS ->
	: L5_OPERAND
	| eps	

L5_OPERATION ->
	L5_OPERATOR L5_OPERAND ELSE_OPERATIONS

L6_OPERATIONS ->
	L6_OPERATION
	| eps

L6_OPERATION ->
	L6_OPERATOR L6_OPERAND
	| L6b_OPERATOR OPERAND_EXPRESSION || L6_OPERAND

M_OPERATIONS ->
	M_OPERATION M_OPERATIONS
	| eps

M_OPERATION ->
	. M_OPERATION_2

M_OPERATION_2 ->
	MESSAGE MESSAGE_BODY
	| TEMPLATE_OPERATOR TEMPLATE_OPERATOR_BODY

RESEND_MESSAGE_BODY ->
	( MESSAGE_PARAMETERS )
	| EMPTY_PARAMETER

TEMPLATE_OPERATOR_BODY ->
	MESSAGE MESSAGE_BODY 
	| IMPLICIT_OPERATION	

MESSAGE_BODY ->
	( MESSAGE_PARAMETERS )
	| EMPTY_PARAMETER
	| : OPERAND_EXPRESSION

IMPLICIT_OPERATIONS ->
	IMPLICIT_OPERATION
	| eps

IMPLICIT_OPERATION ->
	IMPLICIT_MESSAGE MESSAGE_PARAMETERS )

MESSAGE_PARAMETERS ->
	EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps

NEXT_MESSAGE_PARAMETER ->
	, EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps	

RESEND_BODY ->
	DECLARATION_END
	| BLOCK

RESEND ->
	MESSAGE RESEND_MESSAGE_BODY
	| IMPLICIT_OPERATION RESEND_MESSAGE_BODY

L6_OPERAND ->
	MESSAGE MESSAGE_BODY

CLOSURE_OPERATIONS ->
	CLOSURE_EXPRESSION
	| eps

TEMPLATE_OPERATOR ->
	?
	| \
	
ASSIGN_OPERATOR ->
	:=

ASSIGNMENT_OPERATOR ->
	+=
	| *=
	| -=
	| /=

L1_OPERATOR ->
	*
	| /
	| $shr
	| $shl

L2_OPERATOR ->
	+
	| -

L3_OPERATOR ->
	<
	| >
	| ==
	| !=
	| >=
	| <=

L4_OPERATOR ->
	&&
	| &|
	| ^^

L5_OPERATOR ->
	?
	| !

L6_OPERATOR ->
	||
	| \

L6b_OPERATOR ->
	$fnl

SIZE_DECLARATION ->
	[ SIZE ]

SIZE ->
	hex
	| integer

DYNAMIC_SIZE ->
	[]

TOKENS ->
	TOKEN TOKENS
	| eps

TOKEN ->
	identifier TOKEN_BODY
	| reference TOKEN_BODY
	| global TOKEN_BODY

TOKEN_BODY ->
	< TOKEN NEXT_TOKEN_PARAM
	| DYNAMIC_SIZE DYNAMIC_SIZE_OPTION
	| eps

NEXT_TOKEN_PARAM ->
	, TOKEN NEXT_TOKEN_PARAM
	| > DYNAMIC_SIZE_OPTION

DYNAMIC_SIZE_OPTION ->
	DYNAMIC_SIZE DYNAMIC_SIZE_OPTION
	| eps

PARAMETERS ->
	PARAMETER NEXT_PARAMETER	
	| eps

PARAMETER ->
	TOKEN TOKENS

NEXT_PARAMETER ->
	, PARAMETER NEXT_PARAMETER
	| eps

OPENING_CURLY_BRACKET ->
	{

BLOCK_END ->
	}

DECLARATION_END ->
	;

MESSAGE ->
	identifier

IMPLICIT_MESSAGE ->
	(

OPENING_BRACKET ->
	(

EMPTY_PARAMETER ->
	eps

COLON ->
	:

BASES ->
	, BASE BASES
	| eps	

BASE ->
	TOKEN

RET_STATEMENT_END ->
	DECLARATION_END BLOCK_END
	| BLOCK_END

NIL_OPERATOR ->
	??

ARRAY_OPERATOR ->
	[

CLOSING_SBRACKET ->
	]

CLOSING_CURLY_BRACKET ->
	}

ASSIGN_SIGN ->
	:=

APPEND_SIGN ->
	+=

CLOSING_BRACKET ->
	)

__define START          	 1
__define eps            	 2

// NOTE : low word should be unique for every key
__define TOKEN 			 4112
__define SCOPE_DECLARATION	 4128
__define BLOCK 		         4192
__define MESSAGE	         4224
__define BLOCK_END	         4240
__define PARAMETER 		 4304
__define MESSAGE_OP_END       4264496
__define EXPRESSION           8458768

__define eof            	 8208
__define identifier 	 	 8209
__define hex 			 8210
__define reference		 8211
__define global			 8212
__define integer                 8213
__define literal                 8214
__define meta                    8215
__define wide                    8216
__define character               8217
__define long                    8218
__define real                    8219
__define constant                8220

START ->
	DECLARATION DECLARATIONS eof
	| eof

DECLARATION ->
        TOKEN NEXT_DECLARATION_ITEM

DECLARATIONS ->
	DECLARATION DECLARATIONS
	| eps

NEXT_DECLARATION_ITEM ->
	TOKEN NEXT_DECLARATION_ITEM
	| SCOPE_DECLARATION

SCOPE_DECLARATION ->
        CLASS_DECLARATION
	| SYMBOL_DECLARATION DECLARATION_END
	| METHOD_DECLARATION
	| DECLARATION_END

CLASS_DECLARATION ->
	{ SCOPE_DECLARATIONS }

SYMBOL_DECLARATION ->
	= EXPRESSION

METHOD_DECLARATION ->
	( PARAMETERS ) METHOD_BODY

SCOPE_DECLARATIONS ->
	TOKEN NEXT_DECLARATION_ITEM SCOPE_DECLARATIONS
	| eps

METHOD_BODY ->
	BLOCK

BLOCK ->
	OPENING_CURLY_BRACKET STATEMENTS

STATEMENTS ->
	BLOCK_END

EXPRESSION ->
        TOKEN TI_OPERATIONS

TOKENS ->
	TOKEN NEXT_TOKEN

NEXT_TOKEN ->
	TOKENS
	| eps

TOKEN ->
	identifier
	| reference

TI_OPERATIONS ->
	L2_OPERATION
	| OPERATIONS

OPERATIONS ->
	eps

L2_OPERATION ->
	. L2_OPERATOR_BODY

L2_OPERATOR_BODY ->
	MESSAGE MESSAGE_BODY

MESSAGE_BODY ->
	OPENING_BRACKET MESSAGE_PARAMETERS MESSAGE_OP_END

MESSAGE_OP_END ->
	CLOSING_BRACKET 

PARAMETERS ->
	PARAMETER NEXT_PARAMETER	
	| eps

NEXT_PARAMETER ->
	, PARAMETER NEXT_PARAMETER
	| eps	

MESSAGE_PARAMETERS ->
	EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps

NEXT_MESSAGE_PARAMETER ->
	, EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps	

MESSAGE ->
	identifier

PARAMETER ->
	TOKENS	

OPENING_BRACKET ->
	(

OPENING_CURLY_BRACKET ->
	{

DECLARATION_END ->
	;

CLOSING_BRACKET ->
	)

BLOCK_END ->
	}

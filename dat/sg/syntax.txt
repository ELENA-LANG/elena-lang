__define START          	1
__define eps            	2

__define SUBJECT_ARG		4112
__define EXPRESSION		4114
__define TOKEN_PARAM		4117
__define PARAMETER		4119
__define NESTED_CLASS		4120
__define OBJECT			4121
__define BLOCK		        4122
__define MESSAGE		4123
__define MESSAGE_PARAMETER	4124
__define BLOCK_END		4125
__define L_OPERATION            4127
__define DISPATCH               4128
__define ASSIGNING		4129
__define BASE_CLASS             4131
__define L5_OPERATION           4134
__define RET_STATEMENT		4135
__define EXTENSION		4139
__define ALT_MESSAGE		4140
__define CATCH_MESSAGE          4143
__define RESEND                 4145
__define MESSAGE_REFERENCE	4147
__define SWITCHING		4155
__define OPTION			4156
__define LAST_OPTION		4157
__define TOKEN   		4172
__define DECLARATION   		4173
__define ATTRIBUTE   		4174
__define LAZY_EXPRESSION	4176
__define ARRAY_OPERATION        4179
__define XCLOSURE               4183
__define NESTED_CODE_BLOCK      4186
__define NESTED_EXPRESSION      4187
__define ASSIGN_OPERATION       4188
__define IDLE_MESSAGE_PARAMETER 4189
__define SUB_MESSAGE_PARAMETER  4190
__define REFERENCE              4192
__define L1_OPERATOR            4193
__define L2_OPERATOR            4194
__define L3_OPERATOR            4195
__define L4_OPERATOR            4196
__define CLOSING_OPERATOR       4197

__define eof            	12291
__define literal		12292
__define identifier		12293
__define private	        12294
__define reference		12295
__define integer		12296
__define hex			12297
__define real			12298
__define character		12299
__define long                   12300
__define wide                   12301
__define constant               12302
__define attribute		12303
__define member			12304
__define global			12305

__define DECLARATION_END_EXPECTED	16384
__define STATEMENT_END_EXPECTED         16385
__define BLOCK_CLOSING_EXPECTED         16386

START ->
	TOKEN TOKENS DECLARATION DECLARATIONS eof
	| eof

DECLARATION ->
	EXPRESSION_DECLARATION DECLARATION_END
	| DISPATCH_DECLARATION DECLARATION_END	
	| CLASS_DECLARATION
	| DOUBLE_COLON BASE_CLASS NEXT_BASE_CLASS CLASS_SCOPE
	| BLOCK
	| COLON PARAMETER PARAMETERS METHOD_BODY
	| OPENING_BRACKET SIGNATURE_BODY METHOD_BODY
	| ASSIGN_OPERATOR ASSIGNING DECLARATION_END
	| RESEND_OPERATOR RESEND
	| DECLARATION_END
 
DECLARATIONS ->
	TOKEN TOKENS DECLARATION DECLARATIONS
	| eps

TOKENS ->
	TOKEN TOKENS
	| eps

PARAMETERS ->
	TOKEN COLON PARAMETER PARAMETERS
	| eps

NEXT_BASE_CLASS ->
	, BASE_CLASS NEXT_BASE_CLASS
	| eps
	        
CLASS_DECLARATION ->
	OPENING_CURLY_BRACKET DECLARATIONS CLOSING_CURLY_BRACKET

CLASS_SCOPE ->
	CLASS_DECLARATION
	| BLOCK
	| DECLARATION_END

NESTED_CLASS ->
	OPENING_CURLY_BRACKET DECLARATIONS CLOSING_CURLY_BRACKET

SIGNATURE_BODY ->
	TOKEN_PARAM PARAM_BODY

PARAM_BODY ->
	PARAMETER NEXT_SIGNATURE
	| NEXT_SIGNATURE

NEXT_SIGNATURE_BODY ->
	SUBJECT_ARG OPENING_BRACKET SIGNATURE_BODY
	| eps

NEXT_SIGNATURE ->
	, TOKEN_PARAM PARAM_BODY
	| CLOSING_BRACKET NEXT_SIGNATURE_BODY

METHOD_BODY ->
	BLOCK	
	| = EXPRESSION DECLARATION_END
	| => DISPATCH DECLARATION_END
	| <= RESEND

DISPATCH_DECLARATION ->
	=> DISPATCH 

EXPRESSION_DECLARATION ->
	= EXPRESSION_BODY

EXPRESSION_BODY ->
	EXPRESSION
	| ATTRIBUTE

BLOCK ->
	OPEN_SBRACKET STATEMENTS

STATEMENTS ->
	^ RET_STATEMENT RET_STATEMENT_END
	| EXPRESSION NEXT_STATEMENT
	| BLOCK_END

NEXT_STATEMENT ->
	STATEMENT_END STATEMENTS
	| BLOCK_END

RET_STATEMENT ->
 	EXPRESSION

ASSIGNING ->
	EXPRESSION

SWITCHING ->
	OPTION OPTIONS

OPTION ->
	identifier OPTION_BODY
	| literal OPTION_BODY
	| reference OPTION_BODY
	| integer OPTION_BODY
	| hex OPTION_BODY
	| real OPTION_BODY
	| character OPTION_BODY
	| long OPTION_BODY
	| wide OPTION_BODY
	| constant OPTION_BODY

OPTIONS ->
	; NEXT_OPTION
	| eps

NEXT_OPTION ->
	OPTION OPTIONS
	| LAST_OPTION

LAST_OPTION ->
	EXCALMATION BLOCK

OPTION_BODY ->
	BLOCK

SUB_EXPRESSION ->
	EXPRESSION CLOSING_BRACKET
	| : PARAMETER CLOSURE_ARGS
	| IDLE_MESSAGE_PARAMETER

CLOSURE_ARGS ->
	: PARAMETER CLOSURE_ARGS
	| ) CLOSURE_SIGNATURE_BODY CLOSURE_ARGS_BODY

CLOSURE_SIGNATURE_BODY ->
	< TOKEN_PARAM TOKEN_PARAMS
	| eps	

CLOSURE_ARGS_BODY ->
	BLOCK
	| ( RET_STATEMENT )

NEXT_EXPRESSION ->
	, OBJECT SUB_OPERATIONS NEXT_EXPRESSION
	| eps	

EXPRESSION ->
	OBJECT OPERATIONS

SUB_MESSAGE_PARAMETERS ->
	, SUB_MESSAGE_PARAMETER SUB_MESSAGE_PARAMETERS
	| CLOSING_BRACKET

SUB_MESSAGE_PARAMETER ->
        OBJECT SUB_OPERATIONS

OPERATIONS ->
	MESSAGE NEXT_MESSAGE L_OPERATIONS NEXT_EXPRESSION LAST_OPERATION
	| ~ EXTENSION MESSAGE NEXT_MESSAGE L_OPERATIONS NEXT_EXPRESSION LAST_OPERATION
	| ARRAY_OPERATION ARRAY_OPERATIONS ARRAY_LAST_OPERATIONS
	| L_OPERATION L_OPERATIONS NEXT_EXPRESSION LAST_OPERATION
	| , OBJECT SUB_OPERATIONS NEXT_EXPRESSION LAST_OPERATION
	| := ASSIGNING
	| L5_OPERATION
	| ASSIGN_OPERATION
	| ( INLINE_MESSAGE INLINE_OPERATIONS
        | \ ALT_MESSAGE
        | || CATCH_MESSAGE
	| => SWITCHING
	| eps

INLINE_OPERATIONS ->
	BLOCK NEXT_INLINE_OPERATIONS
	| NESTED_CLASS
	| MESSAGE NEXT_MESSAGE L_OPERATIONS
	| L_OPERATION L_OPERATIONS
	| eps

NEXT_INLINE_OPERATIONS ->
	; INLINE_OPERATION2
	| eps

INLINE_OPERATION2 ->
	BLOCK
	| NESTED_CLASS
	| NESTED_CODE_BLOCK

NESTED_CODE_BLOCK ->
        NESTED_EXPRESSION

NESTED_EXPRESSION ->
	identifier OPENING_BRACKET INLINE_MESSAGE INLINE_OPERATIONS

ASSIGN_OPERATION ->
	+= ASSIGN_OPERAND	
	| -= ASSIGN_OPERAND
	| *= ASSIGN_OPERAND
	| /= ASSIGN_OPERAND

ASSIGN_OPERAND ->
	OBJECT ARRAY_OPERATIONS MESSAGE_OPERATIONS

LAST_OPERATION ->
	:= ASSIGNING
	| L5_OPERATION
        | \ ALT_MESSAGE
        | || CATCH_MESSAGE
	| eps	

ARRAY_LAST_OPERATIONS ->
	MESSAGE NEXT_MESSAGE L_OPERATIONS NEXT_EXPRESSION
	| ~ EXTENSION MESSAGE NEXT_MESSAGE L_OPERATIONS NEXT_EXPRESSION
	| L_OPERATION L_OPERATIONS NEXT_EXPRESSION
	| := ASSIGNING
	| L5_OPERATION
	| ( INLINE_MESSAGE INLINE_OPERATIONS
        | \ ALT_MESSAGE
        | || CATCH_MESSAGE
	| , OBJECT SUB_OPERATIONS NEXT_EXPRESSION
	| eps

SUB_OPERATIONS ->
	MESSAGE NEXT_MESSAGE L_OPERATIONS
	| ~ EXTENSION MESSAGE NEXT_MESSAGE L_OPERATIONS
	| ARRAY_OPERATION ARRAY_OPERATIONS MESSAGE_OPERATIONS L_OPERATIONS
	| L_OPERATION L_OPERATIONS
	| ( INLINE_MESSAGE INLINE_OPERATIONS
	| eps

L_OPERAND ->
	OBJECT OPERAND_OPERATION

OPERAND_OPERATION ->
	ARRAY_OPERATION ARRAY_OPERATIONS MESSAGE_OPERATIONS
	| MESSAGE NEXT_MESSAGE
	| ~ EXTENSION MESSAGE NEXT_MESSAGE
	| ( INLINE_MESSAGE
	| eps

L_OPERATIONS ->
	L_OPERATION L_OPERATIONS
	| eps

L1_OPERATOR ->
	*
	| /

L2_OPERATOR ->
	+
	| -
	| <<

L3_OPERATOR ->
	==
	| !=
	| <
	| >=
	| <=

CLOSING_OPERATOR ->
	> 

L4_OPERATOR ->
	&&
	| &|
	| ^^
	
L_OPERATION ->
	L1_OPERATOR L_OPERAND
	| L2_OPERATOR L_OPERAND
	| L3_OPERATOR L_OPERAND
	| L4_OPERATOR L_OPERAND
	| CLOSING_OPERATOR CLOSING_OPERAND

CLOSING_OPERAND ->
	L_OPERAND
	| :: NESTED_CLASS
	| eps

L5_OPERATION ->
	? L5_OPERAND ELSE_BODY
	| ! L5_OPERAND

ELSE_BODY ->
	ELSE_OPERATION
	| eps	

ELSE_OPERATION ->
	! L5_OPERAND

L5_OPERAND ->
	BLOCK	

MESSAGE_OPERATIONS ->
	MESSAGE NEXT_MESSAGE
	| ~ EXTENSION MESSAGE NEXT_MESSAGE
	| eps

ARRAY_OPERATION ->
	[ EXPRESSION CLOSING_SBRACKET

ARRAY_OPERATIONS ->
	ARRAY_OPERATION ARRAY_OPERATIONS
	| eps

DISPATCH ->
	OBJECT

EXTENSION ->
	OBJECT

RESEND ->
	MESSAGE RESEND_BODY

RESEND_BODY ->
	; BLOCK
	| DECLARATION_END

ALT_MESSAGE ->
	identifier MESSAGE_BODY

CATCH_MESSAGE ->
	identifier MESSAGE_BODY

MESSAGE ->
	identifier MESSAGE_BODY

NEXT_MESSAGE ->
	; MESSAGE NEXT_MESSAGE
	| eps

MESSAGE_BODY ->
	: MESSAGE_PARAMETER NEXT_SUBJECT_ARG
	| OPENING_BRACKET MESSAGE_SUB_EXPR
	| eps
	          
NEXT_SUBJECT_ARG ->
	SUBJECT_ARG SUBJECT_ARG_R
	| eps

SUBJECT_ARG_R ->
	: MESSAGE_PARAMETER NEXT_SUBJECT_ARG
	| ( MESSAGE_SUB_EXPR

MESSAGE_SUB_EXPR ->
	EXPRESSION CLOSING_BRACKET NEXT_SUBJECT_ARG
	| XCLOSURE

MESSAGE_PARAMETER ->
	OBJECT

INLINE_MESSAGE ->
	SUB_MESSAGE_PARAMETER SUB_MESSAGE_PARAMETERS
	| IDLE_MESSAGE_PARAMETER

OBJECT ->
	identifier OBJECT_BODY
	| reference  OBJECT_BODY
	| member
	| global OBJECT_BODY
	| private
	| integer
	| hex
	| long
	| real
	| character
	| literal
	| wide
	| constant
	| OPENING_BRACKET SUB_EXPRESSION	
	| NESTED_CLASS
	| BLOCK
	| AMPERSAND REFERENCE
	| PERCENT_SIGN MESSAGE_REFERENCE
	| DOLLAR_SIGN LAZY_EXPRESSION
	   
LAZY_EXPRESSION ->
	OPENING_BRACKET EXPRESSION CLOSING_BRACKET

REFERENCE ->
	OBJECT

OBJECT_BODY ->
	:: OBJECT_EXT
	| eps		

OBJECT_EXT ->
	NESTED_CLASS
	| ( EXPRESSION )

IDLE_MESSAGE_PARAMETER ->
	CLOSING_BRACKET

PARAMETER ->
	identifier

TOKEN ->
	identifier TOKEN_BODY
	| member
	| reference TOKEN_BODY

TOKEN_PARAM ->
	identifier TOKEN_BODY
	| reference
	| global
	| integer

ATTRIBUTE ->
	attribute

BASE_CLASS ->
	identifier TOKEN_BODY
	| reference TOKEN_BODY
	| global TOKEN_BODY

SUBJECT_ARG ->
	identifier

TOKEN_BODY ->
	< NEXT_TOKEN_PARAM
	| eps

TOKEN_PARAMS ->
	, NEXT_TOKEN_PARAM
	| CLOSING_ANGLE_BRACKET

NEXT_TOKEN_PARAM ->
	TOKEN_PARAM TOKEN_PARAMS

XCLOSURE ->
	COLON PARAMETER CLOSURE_ARGS NEXT_SUBJECT_ARG

MESSAGE_REFERENCE ->
	identifier
	| literal

DECLARATION_END ->
	TERMINATOR
	| DECLARATION_END_EXPECTED

RET_STATEMENT_END ->
	TERMINATOR BLOCK_END
	| BLOCK_END

STATEMENT_END ->
	TERMINATOR
	| STATEMENT_END_EXPECTED

BLOCK_END ->
	]
	| BLOCK_CLOSING_EXPECTED

OPENING_CURLY_BRACKET ->
	{

OPENING_BRACKET ->
	(

OPEN_SBRACKET ->
	[

COLON ->
	:

DOUBLE_COLON ->
	::

ASSIGN_OPERATOR ->
	:=

RESEND_OPERATOR ->
	<=

AMPERSAND ->
	&

PERCENT_SIGN ->
	%

DOLLAR_SIGN ->
	$

TERMINATOR ->
	.

EXCALMATION ->
	!

CLOSING_CURLY_BRACKET ->
	}

CLOSING_SBRACKET ->
	]

CLOSING_BRACKET ->
	)

CLOSING_ANGLE_BRACKET ->
	>

__define START          	1
__define eps            	2

__define TOKEN			4112
__define ROOT_EXPRESSION        4113
__define EXPRESSION             4114
__define DECLARATION            4115
__define PARAMETER		4119
__define NESTED_CLASS		4120
__define BLOCK		        4122
__define MESSAGE		4123
__define BLOCK_END		4125
__define DISPATCH               4128
__define ASSIGN_OPERATOR	4129
__define BASE                   4131
__define RESEND                 4145
__define SWITCHING		4155
__define OPTION			4156
__define LAST_OPTION		4157
__define ATTRIBUTE_DECLARATION  4174
__define L1_OPERATOR            4193
__define L2_OPERATOR            4194
__define L3_OPERATOR            4195
__define L5_OPERATOR            4196
__define RET_EXPRESSION         4198
__define IMPLICIT_MESSAGE       4199
__define SIZE			4200
__define DYNAMIC_SIZE		4201
__define OPERAND_EXPRESSION     4202
__define EMPTY_PARAMETER        4203
__define ARRAY_OPERATOR         4204
__define SUB_EXPRESSION         4205
__define CLOSURE_EXPRESSION     4206
__define SINGLE_EXPRESSION      4207
__define SUB_SINGLE_EXPRESSION  4208
__define L6_OPERATOR            4209
__define L6_OPERAND             4210
__define L3_EXPRESSION          4211
__define L4_OPERATOR            4212
__define COLLECTION             4213
__define L2_EXPRESSION          4214
__define FIELD_ASSIGNER         4215
__define L4_EXPRESSION          4216
__define ASSIGNMENT_OPERATOR    4217
__define NIL_OPERATOR           4218
__define SUB_BLOCK		4219
__define SUB_ROOT_EXPRESSION    4220
__define SUBMESSAGE		4221
__define L6b_OPERATOR           4222
__define INLINE_CLOSURE         4223
__define ATTR_EXPRESSION	4224
__define TEMPLATE_OPERATOR	4225
__define L1_EXPRESSION          4226

__define eof            	12291
__define literal		12292
__define identifier		12293
__define reference		12295
__define integer		12296
__define hex			12297
__define real			12298
__define character		12299
__define long                   12300
__define wide                   12301
__define attribute		12303

START ->
	ATTRIBUTE_DECLARATION ATTRIBUTE_DECLARATIONS DECLARATIONS eof
	| TOKEN TOKENS DECLARATION DECLARATIONS eof
	| eof

ATTRIBUTE_DECLARATIONS ->
	ATTRIBUTE_DECLARATION ATTRIBUTE_DECLARATIONS
	| eps

ATTRIBUTE_DECLARATION ->
	attribute ATTRIBUTE_BODY

ATTRIBUTE_BODY ->
	= TOKEN DECLARATION_END

DECLARATIONS ->
	TOKEN TOKENS DECLARATION DECLARATIONS
	| eps

DECLARATION ->
	SYMBOL_DECLARATION DECLARATION_END
	| CLASS_DECLARATION
	| COLON BASE BASES BASE_DECLARATION
	| METHOD_DECLARATION
	| SIZE_DECLARATION DECLARATION_END
	| ASSIGN_SIGN FIELD_ASSIGNER DECLARATION_END
	| DECLARATION_END

CLASS_DECLARATION ->
	{ DECLARATIONS }

SYMBOL_DECLARATION ->
	= EXPRESSION

SIZE_DECLARATION ->
	[ SIZE ]

BASE_DECLARATION ->
	CLASS_DECLARATION
	| METHOD_DECLARATION

METHOD_DECLARATION ->
	( PARAMETERS ) METHOD_BODY

METHOD_BODY ->
	BLOCK
	| <= RESEND RESEND_BODY
	| => DISPATCH DECLARATION_END
	| = RET_EXPRESSION DECLARATION_END

PARAMETERS ->
	PARAMETER NEXT_PARAMETER	
	| eps

PARAMETER ->
	TOKEN TOKENS

NEXT_PARAMETER ->
	, PARAMETER NEXT_PARAMETER
	| eps

BLOCK ->
	OPENING_CURLY_BRACKET STATEMENTS

STATEMENTS ->
	STATEMENT NEXT_STATEMENT
	| ^ RET_EXPRESSION RET_STATEMENT_END
	| BLOCK_END

RET_STATEMENT_END ->
	DECLARATION_END BLOCK_END
	| BLOCK_END

STATEMENT ->
	ROOT_EXPRESSION

NEXT_STATEMENT ->
        DECLARATION_END STATEMENTS
	| BLOCK_END

ROOT_EXPRESSION ->        
	TOKEN ROOT_T_OPERATIONS
	| literal MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| wide MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| integer MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| hex MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| long MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| real MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| character MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION IMPLICIT_OPERATIONS MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| NESTED_CLASS MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS

SUB_ROOT_EXPRESSION ->
	TOKEN ROOT_T_OPERATIONS

EXPRESSION ->
	identifier I_OPERATIONS
	| reference I_OPERATIONS
	| literal MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| wide MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| integer MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| hex MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| long MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| real MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| character MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION IMPLICIT_OPERATIONS MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS
	| NESTED_CLASS MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS

L2_EXPRESSION ->
	identifier I2_OPERATIONS
	| reference I2_OPERATIONS
	| literal MESSAGES L1_OPERATIONS
	| wide MESSAGES L1_OPERATIONS
	| integer MESSAGES L1_OPERATIONS
	| hex MESSAGES L1_OPERATIONS
	| long MESSAGES L1_OPERATIONS
	| real MESSAGES L1_OPERATIONS
	| character MESSAGES L1_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION MESSAGES L1_OPERATIONS
	| NESTED_CLASS MESSAGES L1_OPERATIONS

L3_EXPRESSION ->
	identifier I3_OPERATIONS
	| reference I3_OPERATIONS
	| literal MESSAGES L1_OPERATIONS L2_OPERATIONS
	| wide MESSAGES L1_OPERATIONS L2_OPERATIONS
	| integer MESSAGES L1_OPERATIONS L2_OPERATIONS
	| hex MESSAGES L1_OPERATIONS L2_OPERATIONS
	| long MESSAGES L1_OPERATIONS L2_OPERATIONS
	| real MESSAGES L1_OPERATIONS L2_OPERATIONS
	| character MESSAGES L1_OPERATIONS L2_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION MESSAGES L1_OPERATIONS L2_OPERATIONS
	| NESTED_CLASS MESSAGES L1_OPERATIONS L2_OPERATIONS

L4_EXPRESSION ->
	identifier I4_OPERATIONS
	| reference I4_OPERATIONS
	| literal MESSAGES
	| wide MESSAGES
	| integer MESSAGES
	| hex MESSAGES
	| long MESSAGES
	| real MESSAGES
	| character MESSAGES
	| OPENING_BRACKET SUB_EXPRESSION MESSAGES
	| NESTED_CLASS MESSAGES

SINGLE_EXPRESSION ->
	identifier
	| integer
	| literal
	| wide
	| hex
	| long
	| real
	| character

L1_EXPRESSION ->
	identifier I1_OPERATIONS
	| reference I1_OPERATIONS
	| literal MESSAGES
	| wide MESSAGES
	| integer MESSAGES
	| hex MESSAGES
	| long MESSAGES
	| real MESSAGES
	| character MESSAGES
	| OPENING_BRACKET SUB_EXPRESSION MESSAGES

OPERAND_EXPRESSION ->
	identifier
	| reference
	| literal
	| wide
	| integer
	| hex
	| long
	| real
	| character
	| OPENING_BRACKET SUB_EXPRESSION

SUB_SINGLE_EXPRESSION ->
	identifier SUB_SINGLE_I_OPERATIONS

SUB_EXPRESSION ->
	identifier SUB_I_OPERATIONS
	| reference SUB_I_OPERATIONS
	| literal L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| wide L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| integer L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| hex L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| long L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| real L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| character L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| OPENING_BRACKET SUB_EXPRESSION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| NESTED_CLASS MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| CLOSING_BRACKET CLOSURE_OPERATIONS
	| INLINE_CLOSURE CLOSING_BRACKET

ATTR_EXPRESSION ->
	( SUB_EXPRESSION

DOT_EXPRESSION ->
	MESSAGE MESSAGE_BODY
	| TEMPLATE_OPERATOR MESSAGE MESSAGE_BODY 

ROOT_T_OPERATIONS ->
	TOKEN TOKENS T_OPERATIONS
	| . DOT_EXPRESSION MESSAGES M_OPERATIONS
	| : NESTED_CLASS MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| IMPLICIT_OPERATION ROOT_IMPLICIT_OPERATIONS
	| ARRAY_OPERATION A_OPERATIONS
	| NIL_OPERATOR OPERAND_EXPRESSION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L6_OPERATION
	| ASSIGN_OPERATOR EXPRESSION
	| => SWITCHING
	| CLOSURE CLOSURES
	| ASSIGNMENT_OPERATION
	| eps

T_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES M_OPERATIONS
	| : NESTED_CLASS MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| IMPLICIT_OPERATION MESSAGES NIL_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| ARRAY_OPERATION A_OPERATIONS
	| NIL_OPERATOR OPERAND_EXPRESSION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L6_OPERATION
	| ASSIGN_OPERATOR EXPRESSION
	| => SWITCHING
	| { COLLECTION } MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| eps

I_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES M_OPERATIONS
	| IMPLICIT_OPERATION MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| TOKEN TOKENS T_OPERATIONS
	| ARRAY_OPERATION A_OPERATIONS
	| NIL_OPERATOR OPERAND_EXPRESSION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L3_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L6_OPERATION
	| ASSIGN_OPERATOR EXPRESSION
	| => SWITCHING
	| ASSIGNMENT_OPERATION
	| { COLLECTION } MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
        | : NESTED_CLASS MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| :: ATTR_EXPRESSION
	| eps

I1_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES
	| ARRAY_OPERATION MESSAGES
	| IMPLICIT_OPERATION MESSAGES
	| eps

I2_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES L1_OPERATIONS
	| ARRAY_OPERATION MESSAGES L1_OPERATIONS
	| IMPLICIT_OPERATION MESSAGES L1_OPERATIONS
	| L1_OPERATION L1_OPERATIONS
	| eps

I3_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES L1_OPERATIONS L2_OPERATIONS
	| ARRAY_OPERATION MESSAGES L1_OPERATIONS L2_OPERATIONS
	| IMPLICIT_OPERATION MESSAGES L1_OPERATIONS L2_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS
	| L2_OPERATION L2_OPERATIONS
	| eps

I4_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES L2_OPERATIONS L3_OPERATIONS
	| ARRAY_OPERATION MESSAGES L2_OPERATIONS L3_OPERATIONS
	| IMPLICIT_OPERATION MESSAGES L2_OPERATIONS L3_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS
	| L3_OPERATION
	| eps

A_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L3_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L5_OPERATION L6_OPERATIONS
	| L6_OPERATION
	| ASSIGNMENT_OPERATION
	| ASSIGN_OPERATOR EXPRESSION
	| ARRAY_OPERATION A_OPERATIONS
	| eps

M_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L3_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L6_OPERATION
	| ASSIGN_OPERATOR EXPRESSION
	| => SWITCHING
	| eps

ROOT_IMPLICIT_OPERATIONS ->
	. DOT_EXPRESSION MESSAGES L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L2_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L3_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L5_OPERATION L6_OPERATIONS
	| L6_OPERATION
	| CODE_OPERATIONS

SUB_I_OPERATIONS ->
	CLOSING_BRACKET CLOSURE_OPERATIONS
	| , PARAMETER NEXT_CLOSURE_PARAMETER
	| TOKEN TOKENS SUB_T_OPERATIONS
	| => RET_EXPRESSION CLOSING_BRACKET
	| . DOT_EXPRESSION MESSAGES L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| ARRAY_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| L1_OPERATION L1_OPERATIONS L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| L2_OPERATION L2_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| L3_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| L4_OPERATION L5_OPERATIONS L6_OPERATIONS CLOSING_BRACKET
	| L6_OPERATION CLOSING_BRACKET
	| NIL_OPERATOR OPERAND_EXPRESSION CLOSING_BRACKET

SUB_T_OPERATIONS ->
	CLOSING_BRACKET CLOSURE_OPERATIONS
	| , PARAMETER NEXT_CLOSURE_PARAMETER
	| IMPLICIT_OPERATION CLOSING_BRACKET
	| { COLLECTION } CLOSING_BRACKET
	| => RET_EXPRESSION CLOSING_BRACKET

SUB_SINGLE_I_OPERATIONS ->
	CLOSING_BRACKET CLOSURE_EXPRESSION
	| , PARAMETER NEXT_CLOSURE_PARAMETER
	| TOKEN TOKENS SUB_SINGLE_T_OPERATIONS
	| => RET_EXPRESSION CLOSING_BRACKET

SUB_SINGLE_T_OPERATIONS ->
	CLOSING_BRACKET CLOSURE_EXPRESSION
	| , PARAMETER NEXT_CLOSURE_PARAMETER
	| => RET_EXPRESSION CLOSING_BRACKET	

L1_OPERATIONS ->
	L1_OPERATION L1_OPERATIONS
	| eps

ARRAY_OPERATIONS ->
	ARRAY_OPERATION
	| eps

ARRAY_OPERATION ->
	ARRAY_OPERATOR EXPRESSION CLOSING_SBRACKET

ARRAY_OPERATOR ->
	[

NIL_OPERATIONS ->
	NIL_OPERATOR OPERAND_EXPRESSION
	| eps

L1_OPERATION ->
	L1_OPERATOR L1_EXPRESSION

L1_OPERATOR ->
	*
	| /
	| $shr
	| $shl

L2_OPERATIONS ->
	L2_OPERATION L2_OPERATIONS
	| eps

L2_OPERATION ->
	L2_OPERATOR L2_EXPRESSION
	
L2_OPERATOR ->
	+
	| -

L3_OPERATIONS ->
	L3_OPERATION
	| eps

L3_OPERATION ->
	L3_OPERATOR L3_EXPRESSION

L3_OPERATOR ->
	<
	| >
	| ==
	| !=
	| >=
	| <=

L4_OPERATIONS ->
	L4_OPERATION L4_OPERATIONS
	| eps

L4_OPERATION ->
	L4_OPERATOR L4_EXPRESSION

L4_OPERATOR ->
	&&
	| &|
	| ^^

L5_OPERATIONS ->
	L5_OPERATION
	| eps

L5_OPERATION ->
	L5_OPERATOR L5_OPERAND ELSE_OPERATIONS

L5_OPERAND ->
	BLOCK
	| OPERAND_EXPRESSION	

L5_OPERATOR ->
	?
	| !

ASSIGNMENT_OPERATION ->
	ASSIGNMENT_OPERATOR EXPRESSION

ASSIGNMENT_OPERATOR ->
	+=
	| *=
	| -=
	| /=

ELSE_OPERATIONS ->
	: L5_OPERAND
	| eps	

L6_OPERATIONS ->
	L6_OPERATION
	| eps

L6_OPERATION ->
	L6_OPERATOR L6_OPERAND
	| L6b_OPERATOR OPERAND_EXPRESSION || L6_OPERAND

L6_OPERATOR ->
	||
	| \

L6b_OPERATOR ->
	$fnl

L6_OPERAND ->
	MESSAGE MESSAGE_BODY

TEMPLATE_OPERATOR ->
	?
	| \

CLOSURE_OPERATIONS ->
	CLOSURE_EXPRESSION
	| eps
	
CODE_OPERATIONS ->
	CLOSURE CLOSURES
	| eps

CLOSURES ->
	TOKEN NEXT_CLOSURE
	| eps

CLOSURE ->
	BLOCK

NEXT_CLOSURE ->
	BLOCK CLOSURES
	| ( SUB_SINGLE_EXPRESSION CLOSURES
	| SUB_BLOCK

SUB_BLOCK ->
	SUB_ROOT_EXPRESSION

CLOSURE_EXPRESSION ->
	CLOSURE

INLINE_CLOSURE ->
	RET_SIGN RET_EXPRESSION

NEXT_CLOSURE_PARAMETER ->
	CLOSING_BRACKET CLOSURE_EXPRESSION
	| , PARAMETER NEXT_CLOSURE_PARAMETER
	| => RET_EXPRESSION CLOSING_BRACKET

TOKENS ->
	TOKEN TOKENS
	| eps

TOKEN ->
	identifier TOKEN_BODY
	| reference TOKEN_BODY

TOKEN_BODY ->
	< TOKEN NEXT_TOKEN_PARAM
	| DYNAMIC_SIZE DYNAMIC_SIZE_OPTION
	| eps

NEXT_TOKEN_PARAM ->
	, TOKEN NEXT_TOKEN_PARAM
	| > DYNAMIC_SIZE_OPTION

DYNAMIC_SIZE_OPTION ->
	DYNAMIC_SIZE DYNAMIC_SIZE_OPTION
	| eps

FIELD_ASSIGNER ->
	EXPRESSION

RET_EXPRESSION ->
	EXPRESSION

DISPATCH ->
	EXPRESSION

RESEND ->
	MESSAGE MESSAGE_BODY
	| IMPLICIT_OPERATION MESSAGE_BODY

RESEND_BODY ->
	DECLARATION_END
	| BLOCK
	
IMPLICIT_OPERATION ->
	IMPLICIT_MESSAGE MESSAGE_PARAMETERS )

MESSAGES ->
	. DOT_EXPRESSION MESSAGES
	| eps

IMPLICIT_OPERATIONS ->
	IMPLICIT_OPERATION
	| eps

MESSAGE ->
	identifier

SUBMESSAGE ->
	identifier

MESSAGE_BODY ->
	( MESSAGE_PARAMETERS )
	| : SINGLE_BODY SUB_MESSAGES
	| EMPTY_PARAMETER

SUB_MESSAGES ->
	SUBMESSAGE : SINGLE_BODY SUB_MESSAGES
	| eps

SINGLE_BODY ->
	SINGLE_EXPRESSION
	| ( SUB_SINGLE_EXPRESSION

MESSAGE_PARAMETERS ->
	EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps

NEXT_MESSAGE_PARAMETER ->
	, EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps	

BASE ->
	TOKEN

BASES ->
	, BASE BASES
	| eps	

SIZE ->
	integer

DYNAMIC_SIZE ->
	[]

NESTED_CLASS ->
	OPENING_CURLY_BRACKET DECLARATIONS CLOSING_CURLY_BRACKET

SWITCHING ->
	OPTION OPTIONS

OPTION ->
	integer OPTION_BODY
	| character OPTION_BODY
	| literal OPTION_BODY

OPTION_BODY ->
	BLOCK

LAST_OPTION ->
	COLON OPTION_BODY

OPTIONS ->
	NEXT_OPTION
	| eps

NEXT_OPTION ->
	OPTION OPTIONS
	| LAST_OPTION

COLLECTION ->
	EXPRESSION NEXT_COLLECTION_ITEM

NEXT_COLLECTION_ITEM ->
	, EXPRESSION NEXT_COLLECTION_ITEM
	| eps

OPENING_CURLY_BRACKET ->
	{

IMPLICIT_MESSAGE ->
	(

OPENING_BRACKET ->
	(

NIL_OPERATOR ->
	??

ASSIGN_OPERATOR ->
	:=

ASSIGN_SIGN ->
	:=

EMPTY_PARAMETER ->
	eps

DECLARATION_END ->
	;

COLON ->
	:

BLOCK_END ->
	}

CLOSING_BRACKET ->
	)

CLOSING_SBRACKET ->
	]

CLOSING_CURLY_BRACKET ->
	}

RET_SIGN ->
	^ 

__define START          	1
__define eps            	2

__define TOKEN			4112
__define ROOT_EXPRESSION        4113
__define EXPRESSION             4114
__define DECLARATION            4115
__define PARAMETER		4119
__define NESTED_CLASS		4120
__define BLOCK		        4122
__define MESSAGE		4123
__define BLOCK_END		4125
__define DISPATCH               4128
__define ASSIGN_OPERATOR	4129
__define BASE                   4131
__define RESEND                 4145
__define ATTRIBUTE_DECLARATION  4174
__define L2_OPERATOR            4194
__define L3_OPERATOR            4195
__define L4_OPERATOR            4196
__define RET_EXPRESSION         4198
__define IMPLICIT_MESSAGE       4199
__define SIZE			4200
__define DYNAMIC_SIZE		4201
__define OPERAND_EXPRESSION     4202
__define EMPTY_PARAMETER        4203
__define ARRAY_OPERATOR         4204
__define SUB_EXPRESSION         4205
__define CLOSURE_EXPRESSION     4206

__define eof            	12291
__define literal		12292
__define identifier		12293
__define reference		12295
__define integer		12296
__define hex			12297
__define wide                   12301
__define attribute		12303

START ->
	ATTRIBUTE_DECLARATION ATTRIBUTE_DECLARATIONS DECLARATIONS eof
	| TOKEN TOKENS DECLARATION DECLARATIONS eof
	| eof

ATTRIBUTE_DECLARATIONS ->
	ATTRIBUTE_DECLARATION ATTRIBUTE_DECLARATIONS
	| eps

DECLARATIONS ->
	TOKEN TOKENS DECLARATION DECLARATIONS
	| eps

DECLARATION ->
	SYMBOL_DECLARATION DECLARATION_END
	| CLASS_DECLARATION
	| COLON BASE BASE_DECLARATION
	| METHOD_DECLARATION
	| DECLARATION_END
	| SIZE_DECLARATION DECLARATION_END

BASE_DECLARATION ->
	CLASS_DECLARATION
	| METHOD_DECLARATION

CLASS_DECLARATION ->
	{ DECLARATIONS }

SYMBOL_DECLARATION ->
	= EXPRESSION

METHOD_DECLARATION ->
	( PARAMETERS ) METHOD_BODY

PARAMETERS ->
	PARAMETER NEXT_PARAMETER
	| eps

NEXT_PARAMETER ->
	, PARAMETER NEXT_PARAMETER
	| eps

PARAMETER ->
	TOKEN TOKENS

METHOD_BODY ->
	BLOCK
	| => DISPATCH DECLARATION_END
	| = RET_EXPRESSION DECLARATION_END
	| <= RESEND RESEND_BODY

RET_EXPRESSION ->
	EXPRESSION

RESEND ->
	MESSAGE MESSAGE_BODY 
	| IMPLICIT_OPERATION MESSAGE_BODY 

RESEND_BODY ->
	DECLARATION_END
	| BLOCK

BLOCK ->
	OPENING_CURLY_BRACKET STATEMENTS

STATEMENTS ->
	STATEMENT NEXT_STATEMENT
	| ^ RET_EXPRESSION RET_STATEMENT_END
	| BLOCK_END

RET_STATEMENT_END ->
	TERMINATOR BLOCK_END
	| BLOCK_END

NEXT_STATEMENT ->
        DECLARATION_END STATEMENTS
	| BLOCK_END

DISPATCH ->
	EXPRESSION

STATEMENT ->
	ROOT_EXPRESSION

ROOT_EXPRESSION ->        
        TOKEN TOKEN_ROOT_OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION
	| NESTED_CLASS

EXPRESSION ->
	identifier IDENTIFIER_OPERATIONS
	| reference
	| integer
	| hex
	| literal
	| wide
	| NESTED_CLASS OPERATIONS
	| OPENING_BRACKET SUB_EXPRESSION OPERATIONS

SUB_EXPRESSION ->
	identifier SUB_IDENTIFIER_OPERATIONS
	| reference SUB_REFERENCE_OPERATIONS

OPERAND_EXPRESSION ->
	identifier
	| integer

TOKEN_ROOT_OPERATIONS ->
        TOKEN TOKENS TOKEN_OPERATIONS
	| IMPLICIT_OPERATION CODE_OPERATIONS
	| OPERATION OPERATIONS
	| ASSIGN_OPERATOR EXPRESSION
	| eps

TOKEN_OPERATIONS ->
	ASSIGN_OPERATOR EXPRESSION
	| OPERATION OPERATIONS
	| IMPLICIT_OPERATION OPERATIONS
	| L4_OPERATION
	| ARRAY_OPERATION
	| eps

IDENTIFIER_OPERATIONS ->
	OPERATION OPERATIONS
	| TOKEN TOKENS TOKEN_OPERATIONS
	| IMPLICIT_OPERATION OPERATIONS
	| L3_OPERATION
	| eps

SUB_IDENTIFIER_OPERATIONS ->
	CLOSING_BRACKET CLOSURE_OPERATIONS
	| TOKEN TOKENS SUB_TOKEN_OPERATIONS
	| OPERATION OPERATIONS CLOSING_BRACKET
	| => RET_EXPRESSION CLOSING_BRACKET

SUB_REFERENCE_OPERATIONS ->
	CLOSING_BRACKET
	| TOKEN TOKENS SUB_TOKEN_OPERATIONS
	| OPERATION OPERATIONS CLOSING_BRACKET
	| => RET_EXPRESSION CLOSING_BRACKET

SUB_TOKEN_OPERATIONS ->
	CLOSING_BRACKET CLOSURE_OPERATIONS
	| , PARAMETER NEXT_CLOSURE_PARAMETER
	| => RET_EXPRESSION CLOSING_BRACKET

OPERATIONS ->
	OPERATION OPERATIONS
	| L3_OPERATION
	| L4_OPERATION
	| eps

CODE_OPERATIONS ->
	CLOSURE CLOSURES
	| eps

CLOSURE_OPERATIONS ->
	CLOSURE_EXPRESSION
	| eps

OPERATION ->
	. MESSAGE MESSAGE_BODY	
	| L2_OPERATION

IMPLICIT_OPERATION ->
	IMPLICIT_MESSAGE MESSAGE_PARAMETERS )

L2_OPERATION ->
	L2_OPERATOR OPERAND_EXPRESSION

L2_OPERATOR ->
	+
	| -

L3_OPERATION ->
	L3_OPERATOR OPERAND_EXPRESSION

L3_OPERATOR ->
	<
	| >
	| ==

L4_OPERATION ->
	L4_OPERATOR L4_OPERAND ELSE_OPERATIONS

L4_OPERATOR ->
	?

L4_OPERAND ->
	BLOCK
	| OPERAND_EXPRESSION

ELSE_OPERATIONS ->
	: L4_OPERAND
	| eps

ARRAY_OPERATION ->
	ARRAY_OPERATOR EXPRESSION CLOSING_SBRACKET

ARRAY_OPERATOR ->
	[

TOKENS ->
	TOKEN TOKENS
	| eps

NEXT_CLOSURE_PARAMETER ->
	CLOSING_BRACKET CLOSURE_EXPRESSION
	| , PARAMETER NEXT_CLOSURE_PARAMETER
	| => RET_EXPRESSION CLOSING_BRACKET

CLOSURE_EXPRESSION ->
	CLOSURE

CLOSURE ->
	BLOCK

CLOSURES ->
	TOKEN CLOSURE CLOSURES
	| eps

NESTED_CLASS ->
	OPENING_CURLY_BRACKET DECLARATIONS CLOSING_CURLY_BRACKET

MESSAGE ->
	identifier

MESSAGE_BODY ->
	( MESSAGE_PARAMETERS )
	| EMPTY_PARAMETER

EMPTY_PARAMETER ->
	eps

MESSAGE_PARAMETERS ->
	EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps

NEXT_MESSAGE_PARAMETER ->
	, EXPRESSION NEXT_MESSAGE_PARAMETER
	| eps

BASE ->
	TOKEN

TOKEN_BODY ->
	< TOKEN NEXT_TOKEN_PARAM
	| DYNAMIC_SIZE
	| eps

NEXT_TOKEN_PARAM ->
	, TOKEN NEXT_TOKEN_PARAM
	| > DYNAMIC_SIZE_OPTION

DYNAMIC_SIZE_OPTION ->
	DYNAMIC_SIZE
	| eps

TOKEN ->
	identifier TOKEN_BODY
	| reference TOKEN_BODY

ATTRIBUTE_DECLARATION ->
	attribute ATTRIBUTE_BODY

ATTRIBUTE_BODY ->
	= TOKEN DECLARATION_END

DYNAMIC_SIZE ->
	[]

SIZE_DECLARATION ->
	[ SIZE ]

SIZE ->
	integer

DECLARATION_END ->
	;

OPENING_BRACKET ->
	(

OPENING_CURLY_BRACKET ->
	{

BLOCK_END ->
	}

CLOSING_CURLY_BRACKET ->
	}

IMPLICIT_MESSAGE ->
	(

ASSIGN_OPERATOR ->
	:=

COLON ->
	:

CLOSING_SBRACKET ->
	]

CLOSING_BRACKET ->
	)


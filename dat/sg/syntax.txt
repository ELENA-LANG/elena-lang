__define START          	1
__define eps            	2

__define SUBJECT_ARG		4112
__define EXPRESSION		4114
__define TOKEN_PARAM		4117
__define PARAMETER		4119
__define NESTED_CLASS		4120
__define OBJECT			4121
__define BLOCK		        4122
__define MESSAGE		4123
__define MESSAGE_PARAMETER	4124
__define BLOCK_END		4125
__define L4_OPERATION           4127
__define DISPATCH               4128
__define ASSIGNING		4129
__define BASE_CLASS             4131
__define L3_OPERATION           4133
__define L7_OPERATION           4134
__define RET_STATEMENT		4135
__define L5_OPERATION           4136
__define EXTENSION		4139
__define ALT_MESSAGE		4140
__define CATCH_MESSAGE          4143
__define RESEND                 4145
__define MESSAGE_REFERENCE	4147
__define SWITCHING		4155
__define OPTION			4156
__define LAST_OPTION		4157
__define L6_OPERATION           4161
__define SIZE_PARAM             4162
__define TOKEN   		4172
__define DECLARATION   		4173
__define ATTRIBUTE   		4174
__define LAZY_EXPRESSION	4176
__define ANGLE_OPERATOR         4177
__define ARRAY_OPERATION        4179
__define XCLOSURE               4183
__define NESTED_CODE_BLOCK      4186
__define NESTED_EXPRESSION      4187
__define L8_OPERATION           4188
__define IDLE_MESSAGE_PARAMETER 4189
__define SUB_MESSAGE_PARAMETER  4190
__define DYNAMIC_SIZE_PARAM	4191

__define DECLARATION_END_EXPECTED	16384
__define STATEMENT_END_EXPECTED         16385
__define BLOCK_CLOSING_EXPECTED         16386

__define eof            	12291
__define literal		12292
__define identifier		12293
__define private	        12294
__define reference		12295
__define integer		12296
__define hex			12297
__define real			12298
__define character		12299
__define long                   12300
__define wide                   12301
__define constant               12302
__define attribute		12303
__define member			12304

START ->
	TOKEN TOKENS DECLARATION DECLARATIONS eof
	| eof
	      
DECLARATIONS ->
	TOKEN TOKENS DECLARATION DECLARATIONS
	| eps

DECLARATION ->
	EXPRESSION_DECLARATION DECLARATION_END
	| DECLARATION_END
	| OPENING_CURLY_BRACKET DECLARATIONS CLOSING_CURLY_BRACKET
	| BLOCK
	| COLON PARAMETER PARAMETER_BODY METHOD_BODY
	| OPENING_BRACKET SIGNATURE_BODY METHOD_BODY
	| DOUBLE_COLON BASE_CLASS NEXT_BASE_CLASS CLASS_SCOPE
	| DISPATCH_DECLARATION DECLARATION_END
	| RESEND_OPERATOR RESEND
	| ASSIGN_OPERATOR ASSIGNING DECLARATION_END

CLASS_SCOPE ->
	OPENING_CURLY_BRACKET DECLARATIONS CLOSING_CURLY_BRACKET
	| BLOCK
	| DECLARATION_END

NEXT_BASE_CLASS ->
	, BASE_CLASS NEXT_BASE_CLASS
	| eps
	        
BASE_CLASS ->
	identifier TOKEN_BODY
	| reference 
	| private

SIGNATURE_BODY ->
	TOKEN_PARAM PARAMETER NEXT_SIGNATURE

CLOSURE_SIGNATURE_BODY ->
	< TOKEN_PARAM TOKEN_PARAMS
	| eps	

CLOSURE_ARGS_BODY ->
	BLOCK
	| ( RET_STATEMENT )

NEXT_SIGNATURE_BODY ->
	SUBJECT_ARG ( TOKEN_PARAM PARAMETER NEXT_SIGNATURE
	| eps

NEXT_SIGNATURE ->
	, TOKEN_PARAM PARAMETER NEXT_SIGNATURE
	| CLOSING_BRACKET NEXT_SIGNATURE_BODY	

PARAMETER_BODY ->
	: PARAMETER NEXT_PARAMETER
	| SUBJECT_ARG : PARAMETER NEXT_SUBJECT_PARAMETER
	| eps	
	        
NEXT_SUBJECT_PARAMETER ->
	SUBJECT_ARG : PARAMETER NEXT_SUBJECT_PARAMETER
	| eps

METHOD_BODY ->
	BLOCK	
	| = EXPRESSION DECLARATION_END
	| => DISPATCH DECLARATION_END
	| <= RESEND

DISPATCH_DECLARATION ->
	=> DISPATCH 
	
EXPRESSION_DECLARATION ->
	= EXPRESSION_BODY

EXPRESSION_BODY ->
	EXPRESSION
	| ATTRIBUTE

STATEMENTS ->
	EXPRESSION NEXT_STATEMENT
	| ^ RET_STATEMENT RET_STATEMENT_END
	| BLOCK_END

NEXT_STATEMENT ->
	STATEMENT_END STATEMENTS
	| BLOCK_END

RET_STATEMENT ->
	EXPRESSION

ASSIGNING ->
	EXPRESSION

SWITCHING ->
	OPTION OPTIONS

OPTION ->
	identifier OPTION_BODY
	| literal OPTION_BODY
	| reference OPTION_BODY
	| integer OPTION_BODY
	| hex OPTION_BODY
	| real OPTION_BODY
	| character OPTION_BODY
	| long OPTION_BODY
	| wide OPTION_BODY
	| constant OPTION_BODY

OPTIONS ->
	; NEXT_OPTION
	| eps

NEXT_OPTION ->
	OPTION OPTIONS
	| LAST_OPTION

LAST_OPTION ->
	EXCALMATION BLOCK

OPTION_BODY ->
	BLOCK

EXPRESSION ->
	OBJECT OPERATIONS

SUB_EXPRESSION ->
	EXPRESSION CLOSING_BRACKET
	| : PARAMETER CLOSURE_ARGS
	| IDLE_MESSAGE_PARAMETER

CLOSURE_ARGS ->
	: PARAMETER CLOSURE_ARGS
	| ) CLOSURE_SIGNATURE_BODY CLOSURE_ARGS_BODY

SUB_MESSAGE_PARAMETERS ->
	, SUB_MESSAGE_PARAMETER SUB_MESSAGE_PARAMETERS
	| CLOSING_BRACKET

SUB_MESSAGE_PARAMETER ->
        OBJECT SUB_OPERATIONS

INLINE_OPERATIONS ->
	BLOCK NEXT_INLINE_OPERATIONS
	| NESTED_CLASS
	| MESSAGE NEXT_MESSAGE L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L5_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L6_OPERATION L6_OPERATIONS
	| eps

SUB_OPERATIONS ->
	MESSAGE NEXT_MESSAGE L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| ~ EXTENSION MESSAGE NEXT_MESSAGE L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| ARRAY_OPERATION ARRAY_OPERATIONS MESSAGE_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS
	| L5_OPERATION L5_OPERATIONS L6_OPERATIONS
	| L6_OPERATION L6_OPERATIONS
	| ( INLINE_MESSAGE INLINE_OPERATIONS
	| eps

ALT_OPERATIONS ->
        || CATCH_MESSAGE
        | \ ALT_MESSAGE
	| eps

LAST_OPERATIONS ->
	:= ASSIGNING
	| L7_OPERATION
	| eps

OPERATIONS ->
	MESSAGE NEXT_MESSAGE L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| ~ EXTENSION MESSAGE NEXT_MESSAGE L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| ARRAY_OPERATION ARRAY_OPERATIONS MESSAGE_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| L3_OPERATION L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| L4_OPERATION L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| L5_OPERATION L5_OPERATIONS L6_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| L6_OPERATION L6_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| L8_OPERATION L8_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
	| , OBJECT SUB_OPERATIONS NEXT_EXPRESSION ALT_OPERATIONS LAST_OPERATIONS
        | || CATCH_MESSAGE
        | \ ALT_MESSAGE
	| := ASSIGNING
	| => SWITCHING
	| L7_OPERATION
	| ( INLINE_MESSAGE INLINE_OPERATIONS
	| eps

NEXT_EXPRESSION ->
	, OBJECT SUB_OPERATIONS NEXT_EXPRESSION
	| eps	

INLINE_MESSAGE ->
	SUB_MESSAGE_PARAMETER SUB_MESSAGE_PARAMETERS
	| IDLE_MESSAGE_PARAMETER	

NEXT_MESSAGE ->
	; MESSAGE NEXT_MESSAGE
	| eps	

LAZY_EXPRESSION ->
	OPENING_BRACKET EXPRESSION CLOSING_BRACKET

DISPATCH ->
	OBJECT

EXTENSION ->
	OBJECT

RESEND ->
	MESSAGE RESEND_BODY

RESEND_BODY ->
	; BLOCK
	| DECLARATION_END

NESTED_CLASS ->
	OPENING_CURLY_BRACKET DECLARATIONS CLOSING_CURLY_BRACKET

OBJECT_EXT ->
	NESTED_CLASS
	| ( EXPRESSION )

OBJECT_BODY ->
	:: OBJECT_EXT
	| eps	

OBJECT ->
	identifier OBJECT_BODY
	| private
	| reference OBJECT_BODY
	| integer
	| hex
	| long
	| real
	| literal
	| wide
	| character
	| member
	| BLOCK
	| NESTED_CLASS
	| OPENING_BRACKET SUB_EXPRESSION
	| PERCENT_SIGN MESSAGE_REFERENCE
	| DOLLAR_SIGN LAZY_EXPRESSION

CATCH_MESSAGE ->
	identifier MESSAGE_BODY
	| reference MESSAGE_BODY

ALT_MESSAGE ->
	identifier MESSAGE_BODY

MESSAGE ->
	identifier MESSAGE_BODY
	| private MESSAGE_BODY

MESSAGE_BODY ->
	: MESSAGE_PARAMETER NEXT_SUBJECT_ARG
	| ( MESSAGE_SUB_EXPR
	| SUBJECT_ARG SUBJECT_ARG_R
	| eps

MESSAGE_SUB_EXPR ->
	EXPRESSION CLOSING_BRACKET NEXT_SUBJECT_ARG
	| XCLOSURE

SUBJECT_ARG_R ->
	: MESSAGE_PARAMETER NEXT_SUBJECT_ARG
	| ( MESSAGE_SUB_EXPR
	      
NEXT_SUBJECT_ARG ->
	SUBJECT_ARG SUBJECT_ARG_R
	| eps

XCLOSURE ->
	COLON PARAMETER CLOSURE_ARGS NEXT_SUBJECT_ARG

MESSAGE_REFERENCE ->
	identifier
	| literal

MESSAGE_PARAMETER ->
	OBJECT

MESSAGE_OPERATIONS ->
	MESSAGE NEXT_MESSAGE
	| ~ EXTENSION MESSAGE NEXT_MESSAGE
	| ( INLINE_MESSAGE
	| eps

ARRAY_OPERATION ->
	[ EXPRESSION CLOSING_SBRACKET

ARRAY_OPERATIONS ->
	ARRAY_OPERATION ARRAY_OPERATIONS
	| eps

L3_OPERATIONS ->
	L3_OPERATION L3_OPERATIONS
	| eps

L3_OPERATION ->
	* L3_OPERAND
	| / L3_OPERAND
	| && L3_OPERAND
	| ^^ L3_OPERAND

L3_OPERAND ->
	OBJECT ARRAY_OPERATIONS MESSAGE_OPERATIONS

L4_OPERATIONS ->
	L4_OPERATION L4_OPERATIONS
	| eps
	
L4_OPERATION ->
	+ L4_OPERAND
	| - L4_OPERAND
	| &| L4_OPERAND

L4_OPERAND ->
	OBJECT ARRAY_OPERATIONS MESSAGE_OPERATIONS L3_OPERATIONS

L5_OPERATIONS ->
	L5_OPERATION L5_OPERATIONS
	| eps	

L5_OPERATION ->
	<< L5_OPERAND
	| >> L5_OPERAND

L5_OPERAND ->
	OBJECT ARRAY_OPERATIONS MESSAGE_OPERATIONS L3_OPERATIONS L4_OPERATIONS

L6_OPERATIONS ->
	L6_OPERATION L6_OPERATIONS
	| eps

L6_OPERATION ->
	< L6_OPERAND
	| ANGLE_OPERATOR ANGLE_OPERAND
	| DYNAMIC_SIZE_PARAM ANGLE_OPERAND
	| == L6_OPERAND
	| != L6_OPERAND
	| <= L6_OPERAND
	| >= L6_OPERAND

ANGLE_OPERAND ->
	L6_OPERAND
	| eps

L6_OPERAND ->
	OBJECT ARRAY_OPERATIONS MESSAGE_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS

L7_OPERATION ->
	? L7_OPERAND ELSE_BODY
	| ! L7_OPERAND

ELSE_BODY ->
	ELSE_OPERATION
	| eps	

ELSE_OPERATION ->
	! L7_OPERAND

L7_OPERAND ->
	BLOCK

L8_OPERATIONS ->
	L8_OPERATION L8_OPERATIONS
	| eps	

L8_OPERATION ->
	+= L8_OPERAND	
	| -= L8_OPERAND
	| *= L8_OPERAND
	| /= L8_OPERAND

L8_OPERAND ->
	OBJECT MESSAGE_OPERATIONS L3_OPERATIONS L4_OPERATIONS L5_OPERATIONS L6_OPERATIONS

INLINE_OPERATION2 ->
	BLOCK
	| NESTED_CODE_BLOCK

NESTED_CODE_BLOCK ->
        NESTED_EXPRESSION

NESTED_EXPRESSION ->
	identifier OPENING_BRACKET INLINE_MESSAGE INLINE_OPERATIONS

NEXT_INLINE_OPERATIONS ->
	; INLINE_OPERATION2
	| eps

IDLE_MESSAGE_PARAMETER ->
	CLOSING_BRACKET

BLOCK ->
	OPEN_SBRACKET STATEMENTS

TOKENS ->
	TOKEN TOKENS
	| eps

TOKEN ->
	identifier TOKEN_BODY
	| private 
	| member
	| reference

TOKEN_PARAM ->
	identifier TOKEN_BODY
	| reference
	| private

TOKEN_BODY ->
	< FIRST_TOKEN_PARAM
	| DYNAMIC_SIZE_PARAM
	| eps

FIRST_TOKEN_PARAM ->
	TOKEN_PARAM TOKEN_PARAMS
	| SIZE_PARAM CLOSING_ANGLE_BRACKET

TOKEN_PARAMS ->
	, NEXT_TOKEN_PARAM
	| CLOSING_ANGLE_BRACKET

NEXT_TOKEN_PARAM ->
	TOKEN_PARAM TOKEN_PARAMS
	| SIZE_PARAM CLOSING_ANGLE_BRACKET

NEXT_PARAMETER ->
	: PARAMETER NEXT_PARAMETER
	| eps
	
PARAMETER ->
	identifier

SUBJECT_ARG ->
	identifier  SUBJECT_BODY

SUBJECT_BODY ->
	< TOKEN_PARAM >
	| DYNAMIC_SIZE_PARAM
	| eps
	      
ATTRIBUTE ->
	attribute

SIZE_PARAM ->
	integer
	
OPENING_CURLY_BRACKET ->
	{

OPEN_SBRACKET ->
	[

OPENING_BRACKET ->
	(

TERMINATOR ->
	.

COLON ->
	:

DOUBLE_COLON ->
	::

RESEND_OPERATOR ->
	<=

ASSIGN_OPERATOR ->
	:=

PERCENT_SIGN ->
	%

DOLLAR_SIGN ->
	$

EXCALMATION ->
	!

ANGLE_OPERATOR ->
	>

CLOSING_BRACKET ->
	)

CLOSING_CURLY_BRACKET ->
	}

DYNAMIC_SIZE_PARAM ->
	<>

CLOSING_ANGLE_BRACKET ->
	>

CLOSING_SBRACKET ->
	]

RET_STATEMENT_END ->
	TERMINATOR BLOCK_END
	| BLOCK_END

STATEMENT_END ->
	TERMINATOR
	| STATEMENT_END_EXPECTED

BLOCK_END ->
	]
	| BLOCK_CLOSING_EXPECTED

DECLARATION_END ->
	TERMINATOR
	| DECLARATION_END_EXPECTED

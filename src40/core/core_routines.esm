//        ELENA Language 4.0
//      inline system library

procedure __object."#dispatch[1]"

  bsredirect  

  open    4
  reserve 2
  esavesi 3
  bcopys  -3
  pushb
  pusha
  acopyr class : system'Message
  pushr class : system'MethodNotFoundException
  asavesi 5
  aloadsi 0
  pushr const : %"new[2]"

  throw

end

procedure __object.equal[2]

  aloadsi 1
  bloadsi 2
  ifb     labTrue
  acopyr  const : system'false
  quitn   2
  
labTrue:
  acopyr const : system'true
  quitn 2
  
end

procedure __object."throw[1]"

  pop
  aloadsi 0
  throw
  
end

procedure __object."__getClass[1]"

  bloadsi 1
  class
  quitn 1

end

procedure __literal."read:Length$@system@ref#1&IntNumber[2]"

  aloadsi 1
  blen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __literal."copy$system@String$system@IntNumber$system@IntNumber$@system@Array#1&ByteNumber[4]"

  bloadsi 1
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callextr api : subcopyz
  
  acopyb
  quitn 4

end

procedure __wide."read:Length$@system@ref#1&IntNumber[2]"

  aloadsi 1
  wlen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __wide."copy$system@WideString$system@IntNumber$system@IntNumber$@system@Array#1&ShortNumber[4]"

  bloadsi 1
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callextr api : wsubcopyz
  
  acopyb
  quitn 4

end

procedure __wideconvertor."convert$system@String$@system@Array#1&ShortNumber$@system@ref#1&IntNumber[4]"

  aloadsi 2
  bloadsi 3
  callextr api : strtowstr
  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __args."read:Length$@system@ref#1&IntNumber[2]"

  aloadsi 1
  bcopya
  dcopy 0
labSearch:
  get
  inc
  elser labSearch 0
  dec
  ecopyd
  bloadsi 2
  nsave
  quitn 2

end

procedure __array."read:Length$@system@ref#1&IntNumber[2]"

  len
  bloadsi 2
  nsave
  quitn 2

end

procedure __array."at$system@IntNumber[2]"

  bcopya
  len
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  get
  quitn 2

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __array."setAt$system@IntNumber$system@Object[3]"

  bcopya
  len
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  aloadsi 3
  set
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __dptr."system$setReference[2]"

  bcopya
  dloadsi 2
  nsave
  acopyb
  quitn 2

end

symbol sta_start

  pushr entry : "$forwards'$program"
  pushr api : seh_handler
  pushr api : default_handler
  system
  pushe
  callextr extern : InitializeSTA
  popi 4
  quit

end

//        ELENA Language 4.0
//      inline system library

define elStructure          000000008h
define elSubject            000002000h
define elMessage            000008000h

procedure __object."#dispatch[1]"

  bsredirect  

  open    4
  reserve 2
  esavesi 3
  bcopys  -3
  pushb
  pusha
  acopyr class : system'Message
  pushr class : system'MethodNotFoundException
  asavesi 5
  aloadsi 0
  pushr const : %"new[2]"

  throw

end

procedure __object.equal[2]

  aloadsi 1
  bloadsi 2
  ifb     labTrue
  acopyr  const : system'false
  quitn   2
  
labTrue:
  acopyr const : system'true
  quitn 2
  
end

procedure __object."throw[1]"

  pop
  aloadsi 0
  throw
  
end

procedure __object."__getClass[1]"

  bloadsi 1
  class
  quitn 1

end

procedure __object."setField$system@IntNumber$system@Object[3]"

  aloadsi 1
  flag
  andn elStructure
  elsen labErr 0
  len
  bcopya
  ecopyd
  aloadsi 2
  nload
  notless labErr
  lessn labErr 0
  aloadsi 3
  set
  bcopya
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure __object.equalReference[2]

  aloadsi 1
  bloadsi 2
  ifb     labTrue
  acopyr  const : system'false
  quitn   2
  
labTrue:
  acopyr const : system'true
  quitn 2
  
end

procedure __object.instanceOf[2]

  bloadsi 2
  aloadsi 1
  check
  selectr const : system'false const : system'true
  quitn 2

end

procedure __exception."on[2]"

  bcopya
  aloadsi 2
  open 1

  hook labNotFound

  pushb
  copym message : "#invoke[1]"
  acallvi 0

labReturn:

  unhook

  close
  quitn 2

labNotFound:

  dloadsi 9
  address labReturn
  else labContinueError

  restore 1

  close
  aloadsi 4
  pusha

labContinueError:

  popa
  unhook
  pusha
  throw

end

procedure __exception."on[3]"

  open 1
  pusha
  aloadfi -3
  pusha
  aloadfi -4
  pusha

  hook labNotFound

  aloadsi 6
  pusha
  aloadsi 6
labCall:  
  copym message : "#invoke[1]"
  acallvi 0
  
labReturn:

  unhook

  close
  quitn 3

labNotFound:

  dloadsi 9
  address labReturn
  else labContinueError

  restore 1
  close
  close
  popi 1

  aloadsi 5
  ifr labContinueError 0 
  bcopya
  acopyr 0 
  asavesi 5
  acopyb
  jump    labCall

  unhook

  close
  quitn 3

labContinueError:
  popa
  unhook
  pusha
  throw

end

procedure __exception.register[0]

  acopyr intern : system'core_routines'critical_exception_handler
  callextr api : register_critical_exception_handler

  quit

end

procedure __int."readHashCodeTo$system@IntNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2
  ncopy
  quitn 2

end

procedure __int."readHashCodeTo$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2
  ncopy
  quitn 2

end

procedure __int."readHashCodeTo$system@RealNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2
  ncopy
  quitn 2

end

procedure __int."readHashCodeTo$system@CharValue$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2
  ncopy
  quitn 2

end

procedure __int."readHashCodeTo$system@ByteNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2
  ncopy
  quitn 2

end

procedure __int."readHashCodeTo$system@ShortNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2
  ncopy
  quitn 2

end

procedure __char."readLengthTo$system@CharValue$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2
  nload
  // ; < 80 - 1
  ecopy 1
  lessn labEnd 80h
  eaddn 1
  // ; <= 800 - 2
  lessn labEnd 800h 
  eaddn 1
  lessn labEnd 10000h 
  // ; <= 10000 - 3
  eaddn 1
  // ; - 4
labEnd:
  dcopye
  nsave  
  quitn 2

end

procedure __literal."readLengthTo$system@String$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  blen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __literal."copy$system@String$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber[4]"

  bloadsi 1
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callextr api : subcopyz
  
  acopyb
  quitn 4

end

procedure __literal."add$system@String[2]"

  blen
  dec
  ecopyd
  bcopya
  aloadsi 2
  blen
  add
  acopyr class : system'String
  bcreate
  bswap
  blen
  dec
  ecopyd
  dcopy 0
  callextr api : insert
  ecopyd
  aloadsi 2
  blen
  eswap
  callextr api : insert
  acopyb

  quitn 2

end                                                

procedure __literal."read$system@IntNumber$@system@ref#1&system@CharValue[3]"

  blen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  acopyb  
  callextr api : strtochar
  ifr labErr 0
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __literal."new$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue[4]"

  aloadsi 3
  nload
  ifn labEmpty 0
    
  aloadsi 4
  ecopyd
  callextr api : slen_ch
            
  acopyr class : system'String
  inc
  bcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4

  callextr api : s_copychars
  
  acopyb
  blen
  ecopy 0
  dec
  bwriteb
  quitn 4
  
labEmpty:
  dcopy 1
  acopyr class : system'String
  bcreate
  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 4

end

procedure __literal."equal$system@String[2]"

  bloadsi 2
  callextr api : sequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __literal."less$system@String[2]"

  bloadsi 2
  callextr api : sless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __literal."save$system@IntNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[4]"

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0
  callextr api : strtochararray
  bloadsi 5
  dcopye
  nsave
  popa

  quitn 4

end

procedure __literal."indexOf$system@IntNumber$system@String$@system@ref#1&system@IntNumber[4]"

  bcopya
  aloadsi 2                 // ; load index
  nload
  aloadsi 3                 // ; load searching str
  callextr api : sseek
  acopyb
  bloadsi 4                 // ; load target
  nsave                    // ; save index
  quitn 4

end

procedure __literal."indexOf$system@IntNumber$system@CharValue$@system@ref#1&system@IntNumber[4]"

  pusha
  aloadsi 4
  pushn 0
  pushn 0
  bcopys 0
  pushn 0
  callextr api : chartostr
  eaddn 1
  pushe

  aloadsi 7                 // ; load index
  nload
  acopys 2
  bloadsi 4
  callextr api : sseek
  bloadsi 9                // ; load target
  nsave                    // ; save index
  popi 4
  popa
  quitn 4

end

procedure __literal."Substring$system@IntNumber$system@IntNumber[3]"

  // ; calculate length
  aloadsi 3
  nload
  inc

  // ; create a new string  
  acopyr class : system'String
  bcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  
  aloadsi 2
  nload

  aloadsi 1
  callextr api : subcopyz
  acopyb

  quitn 3

end

procedure __literal."copy$system@String$system@String[2]"

  aloadsi 2
  bcopya
  aloadsi 1
  copy
  acopyb
  quitn 2

end

procedure __literal."insert$system@String$system@IntNumber$system@CharValue[3]"
  
  pusha

  aloadsi 4
  nload
  pushd
  acopys 0
  pushn 0
  pushn 0
  bcopys 0
  
  callextr api : chartostr

  aloadsi 6
  nload
  bloadsi 5
  acopys 0

  callextr api : insert

  acopyb
  popi 4
  quitn 3
  
end

procedure __literal."delete$system@IntNumber$system@IntNumber[3]"

  bcopya

  // ; calculate length
  aloadsi 3
  nload
  ecopyd

  acopyb
  blen
  sub

  acopyr class : system'String
  bcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : insert

  // ; copy right side 
  ecopyd          
  aloadsi 3
  nload
  add
  eswap
  aloadsi 1
  callextr api : sadd

  acopyb
  quitn 3
  
end

procedure __literal."system$$saveToByteArray$system@IntNumber$@system@Array#1&system@ByteNumber$system@IntNumber[4]"

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0

  pushe                                               
  pushd
  dcopy 0

labNext:
  esavesi 1
  breadb
  inc
  dswapsi 0
  bwriteb
  inc
  eloadsi 1
  dswapsi 0
  less labNext

  popi 2
  popa

  quitn 4

end

procedure __literal."fill$system@IntNumber$system@CharValue[3]"
  
  pusha

  aloadsi 4
  nload
  pushd
  acopys 0
  pushn 0
  pushn 0
  bcopys 0
  
  callextr api : chartostr
  dcopye

  ifn lab1 1 
  ifn lab2 2
  ifn lab3 3

  aloadsi 6
  nload
  shiftln 2
  pushd
  inc
  aloadsi 4
  acallvi 1

  bcopya
  popd
  ecopyd
  dcopy 0

labNext4:
  eswapsi 0
  bwrite
  eswapsi 0
  addn 3
  next labNext4
  jump labEnd  
  
lab1:  
  aloadsi 6
  nload
  pushd
  inc
  acopyr class : system'String
  bcreate
  bcopya

  popd
  ecopyd
  dcopy 0

labNext1:
  eswapsi 0
  bwriteb
  eswapsi 0
  next labNext1
  jump labEnd  
    
lab2:
  aloadsi 6
  nload
  shiftln 1
  pushd
  inc
  acopyr class : system'String
  bcreate
  bcopya

  popd
  ecopyd
  dcopy 0
  
labNext2:
  eswapsi 0
  bwritew
  eswapsi 0
  addn 1
  next labNext2
  jump labEnd  

lab3:
  aloadsi 6
  nload
  muln 3
  pushd
  inc
  acopyr class : system'String
  bcreate

  bcopya
  popd
  ecopyd
  dcopy 0

labNext3:
  eswapsi 0
  bwrite
  eswapsi 0
  addn 2
  next labNext3

labEnd:
  popi 4
  ecopy 0
  bwriteb

  acopyb
  quitn 3
  
end

procedure __literal."insert$system@IntNumber$system@String[3]"

  // ; calculate length
  blen
  dec
  ecopyd
  
  aloadsi 3
  blen
  add

  acopyr class : system'String
  bcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : insert

  // ; insert
  aloadsi 3
  ecopyd
  blen
  dec
  eswap
  callextr api : insert
  
  // ; copy right side 
  ecopyd
  aloadsi 2
  nload  
  eswap
  aloadsi 1
  callextr api : sadd

  acopyb
  quitn 3
  
end

procedure __literal."read$system@IntNumber$@system@ref#1&system@ByteNumber[3]"

  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  breadb
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __wide."readLengthTo$system@WideString$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  wlen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __wide."copy$system@WideString$system@IntNumber$system@IntNumber$@system@Array#1&system@ShortNumber[4]"

  bloadsi 1
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callextr api : wsubcopyz
  
  acopyb
  quitn 4

end

procedure __wide."add$system@WideString[2]"

  wlen
  dec
  ecopyd
  bcopya
  aloadsi 2
  wlen
  add
  acopyr class : system'WideString
  wcreate
  bswap
  wlen
  dec
  ecopyd
  dcopy 0
  callextr api : winsert
  ecopyd
  aloadsi 2
  wlen
  eswap
  callextr api : winsert
  acopyb

  quitn 2

end                                                

procedure __wide."read$system@IntNumber$@system@ref#1&system@CharValue[3]"

  wlen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  acopyb  
  callextr api : wstrtochar
  ifr labErr 0
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __wide."Substring$system@IntNumber$system@IntNumber[3]"

  // ; calculate length
  aloadsi 3
  nload
  inc

  // ; create a new string  
  acopyr class : system'WideString
  wcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  
  aloadsi 2
  nload

  aloadsi 1
  callextr api : wsubcopyz
  acopyb

  quitn 3

end

procedure __wide."delete$system@IntNumber$system@IntNumber[3]"

  bcopya

  // ; calculate length
  aloadsi 3
  nload
  ecopyd

  acopyb
  wlen
  sub

  acopyr class : system'WideString
  wcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : winsert                  

  // ; copy right side 
  ecopyd          
  aloadsi 3
  nload
  add
  eswap
  aloadsi 1
  callextr api : wadd

  acopyb
  quitn 3
  
end

procedure __wide."copy$system@WideString$system@WideString[2]"

  aloadsi 2
  bcopya
  aloadsi 1
  copy
  acopyb
  quitn 2

end

procedure __wide."equal$system@WideString[2]"

  bloadsi 2
  callextr api : wequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __wide."less$system@WideString[2]"

  bloadsi 2
  callextr api : wless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __wide."save$system@IntNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[4]"

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0
  callextr api : wstrtochararray
  bloadsi 5
  dcopye
  nsave
  popa
  
  quitn 4

end

procedure __wide."system$$saveToShortArray$system@IntNumber$@system@Array#1&system@ShortNumber$system@IntNumber[4]"

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0

  pushe                                               
  pushd
  dcopy 0

labNext:
  esavesi 1
  wread
  inc
  dswapsi 0
  wwrite
  inc
  eloadsi 1
  dswapsi 0
  less labNext

  popi 2
  popa

  quitn 4

end

procedure __wide."indexOf$system@IntNumber$system@CharValue$@system@ref#1&system@IntNumber[4]"

  pusha
  aloadsi 4
  pushn 0
  bcopys 0
  pushn 0
  callextr api : chartowstr
  eaddn 1
  pushe

  aloadsi 7                 // ; load index
  nload
  acopys 2
  bloadsi 4
  callextr api : wseek
  bloadsi 9                // ; load target
  nsave                    // ; save index
  popi 4
  popa
  quitn 4
  
end

procedure __wide."read$system@IntNumber$@system@ref#1&system@ShortNumber[3]"

  wlen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  eaddn -1
  notless labErr
  lessn   labErr 0

  acopyb
  shiftln 1
  breadw
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure __wide."indexOf$system@IntNumber$system@WideString$@system@ref#1&system@IntNumber[4]"

  bcopya
  aloadsi 2                 // ; load index
  nload
  aloadsi 3                 // ; load searching str
  callextr api : wseek
  acopyb
  bloadsi 4                 // ; load target
  nsave                    // ; save index
  quitn 4

end

procedure __wide."insert$system@IntNumber$system@WideString[3]"

  // ; calculate length
  wlen
  dec
  ecopyd
  
  aloadsi 3
  wlen
  add

  acopyr class : system'WideString
  wcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : winsert

  // ; insert
  aloadsi 3
  ecopyd
  wlen
  dec
  eswap
  callextr api : winsert
  
  // ; copy right side 
  ecopyd
  aloadsi 2
  nload  
  eswap
  aloadsi 1
  callextr api : wadd

  acopyb
  quitn 3
  
end

procedure __wide."fill$system@IntNumber$system@CharValue[3]"
  
  pusha

  aloadsi 4
  nload
  pushd
  acopys 0
  pushn 0
  pushn 0
  bcopys 0

  callextr api : chartowstr
  dcopye

  ifn labFill 1 

  aloadsi 6
  nload
  shiftln 1
  pushd
  inc
  aloadsi 4
  acallvi 1

  bcopya
  popd
  shiftln 1
  ecopyd
  dcopy 0

labNext2:
  eswapsi 0
  bwrite
  eswapsi 0
  addn 3
  next labNext2
  jump labEnd  
  
labFill:
  aloadsi 6
  nload
  pushd
  inc
  aloadsi 4
  acallvi 1

  bcopya
  popd
  shiftln 1
  ecopyd
  dcopy 0

labNext:
  eswapsi 0
  bwritew
  eswapsi 0
  inc
  next labNext

labEnd:
  popi 4
  ecopy 0
  bwritew

  acopyb
  quitn 3
  
end

procedure __wide."new$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue[4]"
  
  aloadsi 3
  nload
  ifn labEmpty 0
    
  aloadsi 4
  ecopyd
  callextr api : wslen_ch

  acopyr class : system'WideString
  inc
  wcreate
  bcopya
  
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4

  callextr api : ws_copychars
  
  acopyb
  wlen
  ecopy 0
  dec
  shiftln 1
  bwritew
  quitn 4
  
labEmpty:
  dcopy 1
  acopyr class : system'WideString
  wcreate
  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 4  

end

procedure __literalconvertor."convert$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : inttostr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __literalconvertor."convert$system@UIntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : uinttostr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __literalconvertor."convert$system@ShortNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : inttostr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __literalconvertor."convert$system@ByteNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : inttostr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __literalconvertor."convert$system@LongNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : longtostr

  bloadsi 3
  nwritei 0

  quitn 3


end

procedure __literalconvertor."convert$system@WideString$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  aloadsi 1
  bloadsi 2
  callextr api : wstrtostr
  bloadsi 3
  nwritei 0
  quitn 3
  
end

procedure __literalconvertor."convert$system@CharValue$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  aloadsi 1
  nload
  ifn labEmpty 0

  bloadsi 2

  callextr api : chartostr
  bloadsi 3
  nwritei 0
  quitn 3
  
labEmpty:
  ecopy 0
  bloadsi 4
  nwritei 0
  quitn 4

end
                                                                                                                         
procedure __literalconvertor."convert$system@RealNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 24
  
  callextr api : realtostr

  bloadsi 3
  nwritei 0

  quitn 3
end

procedure __literalconvertor."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : inttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor."convert$system@UIntNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : uinttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor."convert$system@ShortNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : inttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor."convert$system@ByteNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : inttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor."convert$system@LongNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : longtostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor."convert$system@ShortNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : inttowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor."convert$system@ByteNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : inttowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor."convert$system@LongNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : longtowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : inttowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor."convert$system@UIntNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  bloadsi 3
  aloadsi 2
  nload
  aloadsi 1
  
  callextr api : uinttowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor."convert$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : inttowstr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __wideconvertor."convert$system@UIntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : uinttowstr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __wideconvertor."convert$system@ShortNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : inttowstr

  bloadsi 3
  nwritei 0

  quitn 3
  
end

procedure __wideconvertor."convert$system@ByteNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : inttowstr

  bloadsi 3
  nwritei 0

  quitn 3
  
end

procedure __wideconvertor."convert$system@LongNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 10
  
  callextr api : longtowstr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __wideconvertor."convert$system@RealNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  bloadsi 2
  aloadsi 1
  dcopy 24
  
  callextr api : realtowstr

  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __wideconvertor."convert$system@CharValue$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  aloadsi 1
  nload
  ifn labEmpty 0

  bloadsi 2
  aloadsi 1
  callextr api : chartowstr
  bloadsi 3
  nwritei 0
  quitn 3

labEmpty:
  ecopy 0
  bloadsi 3
  nwritei 0
  quitn 3

end

procedure __wideconvertor."convert$system@String$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  aloadsi 1
  bloadsi 2
  callextr api : strtowstr
  bloadsi 3
  nwritei 0

  quitn 3

end

procedure __charconvertor."save$system@CharValue$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  aloadsi 1
  nload
  ecopyd
  aloadsi 2
  nload
  bloadsi 3
  callextr api : chartoshorts
  dcopye
  bloadsi 4
  nsave
  
  quitn 4

end

procedure __charconvertor."save$system@CharValue$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  aloadsi 1
  nload
  ecopyd
  aloadsi 2
  nload
  bloadsi 3
  callextr api : chartobytes
  dcopye
  bloadsi 4
  nsave
  
  quitn 4

end

procedure __charconvertor."convert$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@CharValue[3]"
  
  aloadsi 1
  nload
  aloadsi 2

  callextr api : wstrtochar
  ifr   labErr 0

  dcopye
  bloadsi 3
  nsave
  acopyb
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __charconvertor."convert$system@IntNumber$@system@ref#1&system@CharValue[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  
  lessn labErr 0
  lessn labCopy 110000h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 2

end

procedure __charconvertor."convert$system@ByteNumber$@system@ref#1&system@CharValue[2]"
  
  bloadsi 2
  aloadsi 1
  nload

  lessn labErr 0
  lessn labCopy 080h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 2

end

procedure __charconvertor."convert$system@ShortNumber$@system@ref#1&system@CharValue[2]"
  
  bloadsi 2
  aloadsi 1
  nload

  lessn labErr 0
  lessn labCopy 010000h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 2

end

procedure __charconvertor."convert$system@IntNumber$system@String$@system@ref#1&system@CharValue[3]"
  
  aloadsi 1
  nload
  aloadsi 2

  callextr api : strtochar
  ifr   labErr 0

  dcopye
  bloadsi 3
  nsave
  acopyb
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __charconvertor."convert$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@CharValue[3]"
  
  aloadsi 1
  nload
  aloadsi 2

  callextr api : strtochar
  ifr   labErr 0

  dcopye
  bloadsi 3
  nsave
  acopyb
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __charconvertor."convert$system@IntNumber$system@WideString$@system@ref#1&system@CharValue[3]"
  
  aloadsi 1
  nload
  aloadsi 2

  callextr api : wstrtochar
  ifr   labErr 0

  dcopye
  bloadsi 3
  nsave
  acopyb
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __args."readLengthTo$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bcopya
  dcopy 0
labSearch:
  get
  inc
  elser labSearch 0
  dec
  ecopyd
  bloadsi 2
  nsave
  quitn 2

end

procedure __array."readLengthTo$system@Array$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  len
  bloadsi 2
  nsave
  quitn 2

end

procedure __array."at$system@IntNumber[2]"

  bcopya
  len
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  get
  quitn 2

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __array."setAt$system@IntNumber$system@Object[3]"

  bcopya
  len
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  aloadsi 3
  set
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __array."copy$system@Array$system@IntNumber$system@IntNumber$system@Array[4]"

  aloadsi 1
  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  callextr api : nsubcopy
  
  acopyb
  quitn 4
  
end

procedure __array."reallocate$system@IntNumber[2]"

  aloadsi 1
  flag
  andn elStructure
  elsen labErr 0
  bcopya
  aloadsi 2
  nload
  class
  create
  bloadsi 1
  count
  dcopye        // ; index - old length
  bcopya
  count         // ; ext - new length
  less labExpand

  aloadsi 1

  pusha
  count
  dcopy 0
labCopy:
  get
  bswapsi 0
  xset
  bswapsi 0
  next labCopy
  pop

  acopyb
  quitn 2

labExpand:
  ecopyd
  dcopy 0
  pushb
labNext:
  bloadsi 2
  get
  bloadsi 0
  xset
  inc
  less labNext

  count
  acopyr 0
labNext2:
  xset
  inc
  less labNext2
  popa
  quitn 2

end

procedure __dptr."system$setReference[2]"

  bcopya
  dloadsi 2
  nsave
  acopyb
  quitn 2

end

procedure __dptr."read$system@UnsafePointer$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  nload
  bloadsi 2
  nsave
  aloadsi 1
  quitn 2

end

procedure __dptr."readVal$system@UnsafePointer$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  aloadai 0
  nload
  bloadsi 2
  nsave
  aloadsi 1
  quitn 2

end

procedure __bytearray."read$system@IntNumber$system@IntNumber$system@ByteArray[4]"

  aloadsi 1
  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  acopyb

  bloadsi 4
  callextr api : subcopy
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."read$system@IntNumber$@system@ref#1&system@ByteNumber[3]"

  aloadsi 1
  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  breadb
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."read$system@IntNumber$@system@ref#1&system@ShortNumber[3]"

  aloadsi 1
  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  breadw
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."read$system@IntNumber$@system@ref#1&system@CharValue[3]"

  aloadsi 1
  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  bread
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."read$system@IntNumber$@system@ref#1&system@IntNumber[3]"

  aloadsi 1
  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  bread
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."read$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber[4]"

  aloadsi 1
  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  acopyb

  bloadsi 4
  callextr api : subcopy
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."write$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber[4]"

  aloadsi 1
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  pushd
  add
  ecopyd
  acopyb
  blen
  less labErr
  pope
  aloadsi 2
  nload
  aloadsi 4
  callextr api : insert
  quitn 4

labErr:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."write$system@IntNumber$system@ByteNumber[3]"

  aloadsi 1
  blen
  ecopyd
  bcopya
  aloadsi 2
  nload
  notless labErr
  nload
  ecopyd
  aloadsi 3
  nload
  eswap
  bwriteb
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."write$system@IntNumber$system@ShortNumber[3]"

  aloadsi 1
  blen
  ecopyd
  bcopya
  aloadsi 2
  nload
  addn 3
  notless labErr
  nload
  ecopyd
  aloadsi 3
  nload
  eswap
  bwritew
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."write$system@IntNumber$system@CharValue[3]"

  aloadsi 1
  blen
  ecopyd
  bcopya
  aloadsi 2
  nload
  addn 3
  notless labErr
  nload
  ecopyd
  aloadsi 3
  nload
  eswap
  bwrite
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."write$system@IntNumber$system@IntNumber[3]"

  aloadsi 1
  blen
  ecopyd
  bcopya
  aloadsi 2
  nload
  addn 3
  notless labErr
  nload
  ecopyd
  aloadsi 3
  nload
  eswap
  bwrite
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."write$system@IntNumber$system@LongNumber[3]"

  aloadsi 1
  blen
  bcopya
  ecopyd
  aloadsi 2
  nload
  addn 7
  notless labErr

  nload
  aloadsi 3
  ecopy 8
  callextr api : insert
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."write$system@IntNumber$system@RealNumber[3]"

  aloadsi 1
  blen
  bcopya
  ecopyd
  aloadsi 2
  nload
  addn 7
  notless labErr

  nload
  aloadsi 3
  ecopy 8
  callextr api : insert
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __bytearray."move$system@IntNumber$system@IntNumber$system@IntNumber[4]"

  aloadsi 1
  pusha 

  // ; insert
  aloadsi 4
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi  0
  aloadsi 5
  pushai 0

  callextr api : move

  pop  
  popa
  quitn 4
  
end

procedure __chararray."write$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue[4]"

  aloadsi 1
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  pushd
  add
  ecopyd
  acopyb
  nlen
  less labErr
  pope
  aloadsi 2
  nload
  aloadsi 4
  callextr api : ninsert
  quitn 4

labErr:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __chararray."move$system@IntNumber$system@IntNumber$system@IntNumber[4]"

  pusha 

  // ; insert
  aloadsi 4
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi  2
  aloadsi 5
  pushai 0

  callextr api : nmove

  pop  
  popa
  quitn 4
  
end

procedure __intarray."write$system@IntNumber$system@IntNumber$@system@Array#1&system@IntNumber[4]"

  bloadsi 1
  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  pushd
  add
  ecopyd
  acopyb
  nlen
  less labErr
  pope
  aloadsi 2
  nload
  aloadsi 4
  callextr api : ninsert
  quitn 4

labErr:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __struct."#dispatch[1]"

  bsredirect

  pushe
  dcopycount
  elsen labEnd 0
  dcopyverb
  pushd
  bcopya
  pushn 0

labNext:
  count
  dloadsi 0
  if labEnd
  get
  inc
  dsavesi 0

  flag
  andn elSubject
  ifn  labNext 0

  nload
  ecopyd
  dloadsi 1
  else labNext

labCall:
  dloadsi 0
  get
  popi 3
  quitn 1
  
labEnd:
  popi 2
  pope
  open    4
  reserve 2
  esavesi 3
  bcopys  -3
  pushb
  pusha
  acopyr class : system'Message
  pushr class : system'MethodNotFoundException
  asavesi 5
  aloadsi 0
  pushr const : %"new[2]"
  throw

end

procedure __realconvertor."convert$system@String$@system@ref#1&system@RealNumber[2]"
  
  bloadsi  2
  ecopy    19
  aloadsi  1
  callextr api : strtoreal
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __realconvertor."convert$system@IntNumber$@system@ref#1&system@RealNumber[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  rcopy
  rsave
  acopyb
  quitn 2

end

procedure __realconvertor."convert$system@ByteNumber$@system@ref#1&system@RealNumber[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  rcopy
  rsave
  acopyb
  quitn 2

end

procedure __realconvertor."convert$system@ShortNumber$@system@ref#1&system@RealNumber[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  rcopy
  rsave
  acopyb
  quitn 2

end

procedure __realconvertor."convert$system@LongNumber$@system@ref#1&system@RealNumber[2]"
  
  bloadsi  2
  aloadsi 1
  callextr api : longtoreal
  acopyb
  quitn 2

end

procedure __realconvertor."convert$system@WideString$@system@ref#1&system@RealNumber[2]"
  
  bloadsi  2
  dcopy    10
  aloadsi  1
  callextr api : wstrtoreal
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor."convert$system@String$@system@ref#1&system@IntNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : strtoint
  nsave
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor."convertUnsigned$system@String$@system@ref#1&system@IntNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : strtouint
  nsave
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@IntNumber[3]"
  
  bloadsi  3
  aloadsi  2
  nload
  ecopyd   
  aloadsi  1
  callextr api : strtoint
  nsave
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor."convert$system@WideString$@system@ref#1&system@IntNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : wstrtoint
  nsave
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@IntNumber[3]"
  
  bloadsi  3
  aloadsi  2
  nload
  ecopyd   
  aloadsi  1
  callextr api : wstrtoint
  nsave
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor."convert$system@CharValue$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  nload
  bloadsi 2
  nsave
  quitn 2

end

procedure __intconvertor."convert$system@ShortNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  nload
  bloadsi 2
  nsave
  quitn 2

end

procedure __intconvertor."convert$system@ByteNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  nload
  bloadsi 2
  nsave
  quitn 2

end

procedure __intconvertor."convert$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  dcopy 4
  bread
  dcopye
  lessn labNegative 0  
  elsen labErr 0  

  nload
  bloadsi 2
  nsave
  quitn 2  

labNegative:
  elsen labErr 0FFFFFFFFh

  nload
  bloadsi 2
  nsave
  quitn 2  

labErr:
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

end

procedure __intconvertor."convert$system@RealNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  bloadsi 2  
  rload
  dcopyr
  nsave
  aloadsi 1
  quitn 2

end

procedure __byteconvertor."convert$system@ShortNumber$@system@ref#1&system@ByteNumber[2]"

  aloadsi 1
  nload

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 2
  nsave
  quitn 2  

end

procedure __byteconvertor."convert$system@CharValue$@system@ref#1&system@ByteNumber[2]"

  aloadsi 1
  nload
  
  lessn labErr 0  
  lessn labCopy 080h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 2
  nsave
  quitn 2  

end

procedure __byteconvertor."convert$system@IntNumber$@system@ref#1&system@ByteNumber[2]"

  aloadsi 1
  nload
  
  lessn labErr 0  
  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 2
  nsave
  quitn 2  

end

procedure __byteconvertor."convert$system@UIntNumber$@system@ref#1&system@ByteNumber[2]"

  aloadsi 1
  nload  

  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 2
  nsave
  quitn 2  

end

procedure __byteconvertor."convert$system@LongNumber$@system@ref#1&system@ByteNumber[2]"

  aloadsi 1
  dcopy 4
  bread
  dcopye
  elsen labErr 0  

  nload

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 2
  nsave
  quitn 2  

end

procedure __byteconvertor."convert$system@RealNumber$@system@ref#1&system@ByteNumber[2]"

  pushn 0
  pushn 0
  acopys 0
  bcopya

  aloadsi 3
  rint

  acopyb
  rload
  dcopyr

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  popi 2
  bloadsi 2
  nsave
  quitn 2  

end

procedure __byteconvertor."convert$system@String$@system@ref#1&system@ByteNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : strtoint
  nsave
  ifr      labErr 0

  aloadsi 2
  nload
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __byteconvertor."convert$system@WideString$@system@ref#1&system@ByteNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : wstrtoint
  nsave
  ifr      labErr 0

  aloadsi 2
  nload
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __message."#dispatch[1]"

  bloadsi 1
  ifb labDefault

  nload
  eswap
  setverb messagename : "eval"
  else labEnd
  nload
  ecopyd
  aloadsi 1
  ajumpvi 0

labEnd:
  open    4
  reserve 1
  dsavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new[1]
  throw

labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new[1]
  throw
  
end

procedure __message."load$system@Message$system@String[2]"

  aloadsi 2   // ; read aName parameter
  pusha
  callextr extern : LoadMessage
  pop
  ifn labError 0
  bloadsi 1
  nsave
  acopyb
  quitn 2

labError:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

end

procedure __message."copy$system@Message$system@IntNumber[2]"

  aloadsi 2  
  bloadsi 1
  nload
  nsave
  quitn 2

end

procedure __message."getMessageName$system@Message$@system@ref#1&system@MessageName[2]"

  aloadsi 1
  bloadsi 2
  nload
  ecopyd
  dcopyverb
  nsave
  acopyb

  quitn 2

end

procedure __message."getWeakMessage$system@Message$@system@ref#1&system@Message[2]"

  aloadsi 1
  bloadsi 2
  nload
  ecopyd
  dcopyverb
  dsetverb
  dcopye
  nsave
  acopyb

  quitn 2

end

procedure __extmessage."#dispatch[1]"

  bloadsi 1
  ifb labDefault

  nload
  eswap
  setverb messagename : "eval"
  else labEnd
  nload
  ecopyd
  ajumpi 1

labEnd:
  open    4
  reserve 1
  dsavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new[1]
  throw

labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new[1]
  throw
  
end


procedure __utf16encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@ByteNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callextr api : ws_encode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    

  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __utf16encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@CharValue$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[6]"

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callextr api : ws_decode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    

  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end


procedure __utf16encoder."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[6]"

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callextr api : ws_decode
  ifr labErr 0

  dcopye  
  bloadsi 6
  nsave
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure __utf16encoder."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  aloadsi 3
  nload
  shiftln 1
  ecopyd
  aloadsi 2
  nload
  shiftln 1
  aloadsi 4
  bloadsi 5
  
  callextr api : ws_encode
  ifr labErr 0

  dcopye  
  bloadsi 6
  nsave
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __shortconvertor."convert$system@ByteNumber$@system@ref#1&system@ShortNumber[2]"

  aloadsi 1
  nload
  bloadsi 2
  nsave
  quitn 2  

end

procedure __shortconvertor."convert$system@CharValue$@system@ref#1&system@ShortNumber[2]"

  aloadsi 1
  nload
  
  lessn labErr 0  
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 2
  nsave
  quitn 2  

end

procedure __shortconvertor."convert$system@IntNumber$@system@ref#1&system@ShortNumber[2]"

  bloadsi 2
  aloadsi 1

  nload
  lessn labNegative 0

  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  nsave
  quitn 2
  
labNegative:
  not

  lessn labCopyNeg 8000h

  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    
  
labCopyNeg:
  not
  nsave
  quitn 2  

end

procedure __shortconvertor."convert$system@UIntNumber$@system@ref#1&system@ShortNumber[2]"

  bloadsi 2
  aloadsi 1

  nload

  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  nsave
  quitn 2

end

procedure __shortconvertor."convert$system@LongNumber$@system@ref#1&system@ShortNumber[2]"

  aloadsi 1
  dcopy 4
  bread
  dcopye
  lessn labNegative 0  
  elsen labErr 0  

  nload
  lessn labCopy 8000h  
  jump  labErr

labCopy:
  bloadsi 2
  nsave
  quitn 2  

labNegative:
  elsen labErr 0FFFFFFFFh
  nload
  not
  lessn labCopyNegative 8000h  

labErr:
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopyNegative:
  nload
  bloadsi 2
  nsave
  quitn 2  

end

procedure __shortconvertor."convert$system@RealNumber$@system@ref#1&system@ShortNumber[2]"

  pushn 0
  pushn 0
  acopys 0
  bcopya

  aloadsi 3
  rint

  acopyb
  rload
  dcopyr
  
  lessn labErr 0FFFF8000h
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  popi 2
  bloadsi 2
  nsave
  quitn 2  

end

procedure __shortconvertor."convert$system@String$@system@ref#1&system@ShortNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : strtoint
  nsave
  ifr      labErr 0
  
  aloadsi 2
  nload
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __shortconvertor."convert$system@WideString$@system@ref#1&system@ShortNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : wstrtoint
  nsave
  ifr      labErr 0

  aloadsi 2
  nload
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __uintconvertor."convert$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  dcopy 4
  bread
  dcopye

  elsen labErr 0  

  nload
  bloadsi 2
  nsave
  quitn 2  

labErr:
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

end

procedure __longconvertor."convert$system@IntNumber$@system@ref#1&system@LongNumber[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  nsave
  lessn labNegative 0
  dcopy 0
  nsavei 1
  acopyb
  quitn 2

labNegative:
  dcopy 0FFFFFFFFh
  nsavei 1
  acopyb
  quitn 2

end

procedure __longconvertor."convert$system@String$@system@ref#1&system@LongNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : strtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@LongNumber[3]"
  
  bloadsi  3
  aloadsi  2
  nload
  ecopyd   
  aloadsi  1
  callextr api : strtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor."convert$system@WideString$@system@ref#1&system@LongNumber[2]"
  
  bloadsi  2
  ecopy    10
  aloadsi  1
  callextr api : wstrtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@LongNumber[3]"
  
  bloadsi  3
  aloadsi  2
  nload
  ecopyd   
  aloadsi  1
  callextr api : wstrtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor."convert$system@UIntNumber$@system@ref#1&system@LongNumber[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 2

end

procedure __longconvertor."convert$system@ShortNumber$@system@ref#1&system@LongNumber[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 2

end

procedure __longconvertor."convert$system@ByteNumber$@system@ref#1&system@LongNumber[2]"
  
  bloadsi 2
  aloadsi 1
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 2

end

procedure __longconvertor."convert$system@RealNumber$@system@ref#1&system@LongNumber[2]"

  aloadsi 1
  bloadsi 2
  rload
  nsave
  dcopy 0
  nsavei 1
  aloadsi 1
  quitn 2

end

procedure __real."ln$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1
  bloadsi 2
  rln

  quitn 2

end

procedure __real."exp$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1
  bloadsi 2
  rexp

  quitn 2

end

procedure __real."sqrt$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1  
  bloadsi 2
  callextr api : rsqrt

  quitn 2

end

procedure __real."sin$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1
  bloadsi 2
  rsin
  
  quitn 2

end

procedure __real."cos$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1
  bloadsi 2
  rcos
  
  quitn 2

end

procedure __real."arctan$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1
  bloadsi 2
  rarctan
  
  quitn 2
  
end

procedure __real."pi$@system@ref#1&system@RealNumber[1]"

  bloadsi 1
  callextr api : rpi
  
  quitn 1
  
end

procedure __real."abs$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1
  bloadsi 2
  rabs

  quitn 2

end

procedure __real."round$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1  
  bloadsi 2
  rround
  
  quitn 2

end

procedure __real."truncate$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  aloadsi 1  
  bloadsi 2
  rint
  
  quitn 2

end

procedure __signature."#dispatch[1]"

  bloadsi 1
  ifb labDefault

  nload
  dsetverb
  aloadsi 1
  ajumpvi 0
  
labDefault:
  bsredirect  
  open    4
  reserve 2
  esavesi 3
  bcopys  -3
  pushb
  pusha
  acopyr class : system'Message
  pushr class : system'MethodNotFoundException
  asavesi 5
  aloadsi 0
  pushr const : %"new[2]"
  throw
  
end

procedure __signature."load$system@MessageName$system@String[2]"

  aloadsi 2
  pusha
  callextr extern : LoadSubject
  pop
  ifn labErr 0
  bloadsi 1
  nsave
  acopyb

  quitn 2
 
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

  quitn 2

end

procedure __group."#dispatch[1]"

  open 5
  reserve 2

  dcopye
  dsavefi -3
  dcopy 0  
  dsavefi -2

  pusha

  hook labNotFound

// ; define the message length
  dloadfi -3
  ecopyd
  dcopycount
  inc
  
// ; copy message
  bcopyf -5
labNextParam:
  get
  pusha
  dec
  elsen labNextParam 0

  bloadfi 1

labNext:
  count
  dloadfi -2
  if labEnd
  get
  inc
  dsavefi -2

  dloadfi -3
  ecopyd
  acallvi 0

labReturn:
  unhook
  dloadfi -3
  ecopyd
  restore 4
  close

  equit
  
labNotFound:  
  dloadsi 9
  address labReturn
  else labContinueError

  restore 1
  close
  close
  popi 1
  bloadfi 1
  jump labNext

labContinueError:
  unhook
  dloadfi -3
  throw
                         
labEnd:
  unhook

  open    4
  reserve 2
  esavesi 3
  bcopys  -3
  pushb
  pusha
  acopyr class : system'Message
  pushr class : system'MethodNotFoundException
  asavesi 5
  aloadsi 0
  pushr const : %"new[2]"
  throw
        
end

procedure __closuretape."#dispatch[1]"

  //;dcopyverb
  //;elsem labDefault message : "#invoke[1]"

  dcopycount
  ecopyd  

  open 5
  reserve 2
  pusha
  
  dsavefi -3
  dcopy 0  
  dsavefi -2
  
  pushn 0
  
  bcopyf -6
  
// ; copy message parameters
  dcopye
  ifn  labSkipCopy 0
labNextParam:
  dec
  get
  pusha
  elsen labNextParam 0

labSkipCopy:
  bloadfi 1

labNext:
  breakpoint

  count
  dloadfi -2
  if labEnd
  get
  inc
  dsavefi -2

  xindexrm system'dynamic'DynamicClosure message : "params##invoke[1]"
  acallvd
  pusha
  bloadfi 1
  jump labNext

labEnd:
  popa

  dloadfi -3
  dec
  ecopyd
  restore 4
  close

  equit

labDefault:
  ecopyd
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new[1]
  throw

end

procedure __mssg_closure."params##invoke$system@Object[2]"

  nloade
  aloadsi 1
  ajumpvi 0

end

procedure __byte."readInvertedTo$system@ByteNumber$@system@ref#1&system@ByteNumber[2]"

  aloadsi 1
  nload
  not
  bloadsi 2
  nsave
  quitn 2
  
end

procedure __short."readInvertedTo$system@ShortNumber$@system@ref#1&system@ShortNumber[2]"

  aloadsi 1
  nload
  not
  bloadsi 2
  nsave
  quitn 2
  
end

procedure __int."readInvertedTo$system@IntNumber$@system@ref#1&system@IntNumber[2]"

  aloadsi 1
  nload
  not
  bloadsi 2
  nsave
  quitn 2

end

procedure __utf8encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@ByteNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callextr api : s_encode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    

  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure __utf8encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@CharValue$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[6]"

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callextr api : s_decode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    
  
  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure __utf8encoder."charCount$system@String$@system@ref#1&system@IntNumber[3]"

  bcopya
  aloadsi 2
  blen
  dec
  ecopyd
  callextr api : strcharlen
  bloadsi 3
  nsave
  quitn 3

end

procedure __utf8encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$system@String$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callextr api : s_encode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    

  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure __symbol."#dispatch[1]"

  pushe
  acalli 0
  pope
  ajumpvi 0

end

procedure __symbol."load$system@Symbol$system@String[2]"

  aloadsi 2   // ; read aName parameter
  pusha
  system
  pushe
  callextr extern : LoadSymbol
  popi 2
  ifn labError 0
  bloadsi 1
  nsave
  acopyb
  quitn 2

labError:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

end

procedure __closureclass."#dispatch[1]"

  bsredirect

  pushe
  bcopya
  pushn 0

labNext:
  count
  dloadsi 0
  if labEnd
  get
  inc
  dsavesi 0

  flag
  andn elMessage
  ifn  labNext 0

  nload
  ecopyd
  dloadsi 1
  else labNext

labCall:
  dloadsi 0
  get
  pop
  pope
  setverb messagename : "#invoke"
  eaddn 1
  ajumpvi 0

labQuit:
  quitn 1
  
labEnd:
  popi 2
  pope
  open    4
  reserve 2
  esavesi 3
  bcopys  -3
  pushb
  pusha
  acopyr class : system'Message
  pushr class : system'MethodNotFoundException
  asavesi 5
  aloadsi 0
  pushr const : %"new[2]"
  throw

end
                                         
procedure __exit_closure."params##invoke$system@Object[2]"

  bloadfi 1
  count
  dcopye
  dsavefi -2  
  aloadsi 1
  quit

end

procedure __jumpif_closure."params##invoke$system@Object[2]"

  bcopya
  aloadsi 1
  elser labSkip const : system'true
  acopyb
  nloade
  dloadfi -2
  add
  dsavefi -2  

labSkip:
  aloadsi 2
  quitn 2

end

procedure __jumpifnot_closure."params##invoke$system@Object[2]"

  bcopya
  aloadsi 1
  elser labSkip const : system'false
  acopyb
  nloade
  dloadfi -2
  add
  dsavefi -2  

labSkip:
  aloadsi 2
  quitn 2

end

procedure __jump_closure."params##invoke$system@Object[2]"

  nloade
  dloadfi -2
  add
  dsavefi -2
  aloadsi 1
  quitn 1

end

procedure __vmtape."evaluateTape$system@UnsafePointer[2]"

  aloadsi 2
  nload
  exclude
  pushd
  callextr api : get_seh_handler
  pushe
  system
  pushe
  callextr extern : EvaluateTape
  popi 3
  include
  pushd
  popa
  quitn 2

end

procedure __thread.enterCriticalSection[1]

  aloadsi 1
  pusha
labWait:
  snop
  trylock
  elsen labWait 0

  pop
  quitn 1
  
end

procedure __thread.leaveCriticalSection[1]

  aloadsi 1
  freelock

  quitn 1
  
end

procedure __rtptr."new$system@RTPointer$system@Object[2]"

  callr system'rt_sync
  pusha
labWait:
  snop
  trylock
  elsen labWait 0 

  callextr api : alloc_index
  bcopya
  aloadsi 3
  set  

  popa
  freelock

  bloadsi 1
  nsave
  acopyb

  quitn 2

end

procedure __rtptr."free[1]"
                      
  callr system'rt_sync
  pusha
labWait:
  snop
  trylock
  elsen labWait 0 

  aloadsi 2
  nload
  callextr api : free_index

  popa
  freelock

  quitn 1
  
end

procedure __rtptr.get[1]

  pusha
  callextr api : resolve_index

  quitn 1

end

procedure __thread."readThreadProc$@system@ref#1&system@IntNumber[1]"

  acopyr intern : system'core_routines'thread_start
  bloadsi 1
  axsavebi 0
  quitn 1

end

procedure __hwnd."system@winforms$$fillWndClass$@system@Array#1&system@ByteNumber$system@WideString$system@IntNumber$system@winforms@HInstance$system@IntNumber[6]"

  bloadsi 2
  aloadsi 4
  nload
  nsavei 0
  aloadsi 5
  nload
  nsavei 4
  aloadsi 6
  nload
  nsavei 7
  aloadsi 3
  axsavebi 9    
  acopyr intern : system'core_routines'win_WndProc
  axsavebi 1
  dcopy 0
  nsavei 2
  nsavei 3
  nsavei 5
  nsavei 6
  nsavei 8
  quitn 6

end

procedure __event."#dispatch[1]"

  bsredirect  

  open 5
  reserve 2

  dcopye
  dsavefi -3
  dcopy 0  
  dsavefi -2

  aloadai 0 // ; get the first field !! better to define a special array (like castover group object)
  pusha
  bcopya

labNext:
  count
  dloadfi -2
  if labEnd

// ; define the message length
  dloadfi -3
  ecopyd
  dcopycount
  inc
  
// ; copy message
  bcopyf -5
labNextParam:
  get
  pusha
  dec
  elsen labNextParam 0

  bloadfi 1
  dloadfi -2
  get
  inc
  dsavefi -2

  dloadfi -3
  ecopyd
  acallvi 0
  
  bloadfi 1
  jump labNext

labEnd:
  dloadfi -3
  ecopyd
  restore 4
  close

  equit

end

procedure __lazyexpression."#dispatch[1]"

  pushe
  pusha
  copym message : "#invoke[0]"

  xindexrm system'BaseLazyExpression message : "#invoke[0]"
  acallvd

  pope
  asavesi 1
  ajumpvi 0

end

procedure __wrap."#dispatch[1]"

  bcopya
  aloadbi 0
  asavesi 1
  aloadbi 1
  bsredirect

  open    4
  reserve 2
  esavesi 3
  bcopys  -3
  pushb
  pusha
  acopyr class : system'Message
  pushr class : system'MethodNotFoundException
  asavesi 5
  aloadsi 0
  pushr const : %"new[2]"

  throw

end

procedure __extension."#dispatch[1]"

  asavesi 1
  pushe
  bcopya
  dcopy 1

labNext:
  pope
  get
  bsredirect
  pushe
  bloadsi 2
  inc
  count
  less labNext
  
  pope
  aloadbi 0
  ajumpvi 0

end

procedure __timest."empty$system@calendar@TimeStruct[1]"

  bloadsi 1
  ecopy 0
  dcopy 0
  nwrite
  dcopy 1
  nwrite
  dcopy 2
  nwrite
  dcopy 3
  nwrite
  quitn 1

end

procedure __long."readInvertedTo$system@LongNumber$@system@ref#1&system@LongNumber[2]"

  aloadsi 1
  bloadsi 2
  lnot
  quitn 2

end

procedure __tape."run$system@io@BinaryReader[2]"

    open     47h
    reserve  44h
    pushn    0
    aloadfi  -73  
    acopyf   -2
    bcopya   
    dcopy    8000FFh
    nsave    
    savefi   -68 0
    savefi   -69 0

    pushn    0h
    aloadfi  -73
    pusha    
    acopyf   -68
    asavesi  1

    aloadsi  0
    copym    message : "read<'$auto'system@ref#1&system@IntNumber>[1]"
    xindexrm system'io'BinaryReader message : "read<'$auto'system@ref#1&system@IntNumber>[1]"
    acallvd  
    Lab00:   nop
    snop     
    bcopyf   -68
    acopyr   const : 0
    nequal   
    elsen    Lab01 0h
    pushn    0h
    aloadfi  -73
    pusha    
    acopyf   -69
    asavesi  1
    aloadsi  0
    copym    message : "read<'$auto'system@ref#1&system@IntNumber>[1]"
    xindexrm system'io'BinaryReader message : "read<'$auto'system@ref#1&system@IntNumber>[1]"
    acallvd  
    pushn    0h
    pushn    0h
    aloadfi  -73
    pusha    
    acopyf   -4
    asavesi  1
    acopyf   -69
    asavesi  2
    aloadsi  0
    copym    message : "read<'$auto'system@Array#1&system@ByteNumber,'$auto'system@ref#1&system@IntNumber>[2]"
    xindexrm system'io'BinaryReader message : "read<'$auto'system@Array#1&system@ByteNumber,'$auto'system@ref#1&system@IntNumber>[2]"
    acallvd  
    bcopyf   -68
    acopyr   const : 1
    nequal   
    ifn      Lab02 0h
    acopyf   -4
    pusha    
    callextr extern : LoadMessage
    scopyf   1
    jump     Lab03
    Lab02:   nop
    bcopyf   -68
    acopyr   const : 2
    nequal   
    ifn      Lab04 0h
    pushn    0h
    pushn    0h
    pushn    0h
    pushr    const : system'text'UTF8Encoding
    acopyr   const : 0
    asavesi  1
    acopyf   -69
    asavesi  2
    acopyf   -4
    asavesi  3
    aloadsi  0
    copym    message : "toString<system'IntNumber,system'IntNumber,'$auto'system@Array#1&system@ByteNumber>[3]"
    validate 
    xcallrm  system'text'UTF8Encoding message : "toString<system'IntNumber,system'IntNumber,'$auto'system@Array#1&system@ByteNumber>[3]"
    pusha 
    jump     Lab05
    Lab04:   nop
    acopyf   -4
    pusha    
    acopyf   -68
    pushai   0
    callextr extern : LoadSymbol
    popi 2
    pushd 
    Lab05:   nop
    Lab03:   nop
    pushn    0h
    aloadfi  -73
    pusha    
    acopyf   -68
    asavesi  1
    aloadsi  0
    copym    message : "read<'$auto'system@ref#1&system@IntNumber>[1]"
    xindexrm system'io'BinaryReader message : "read<'$auto'system@ref#1&system@IntNumber>[1]"
    acallvd  
    jump     Lab00
    Lab01:   nop
    aloadsi  0
    restore  46h
    close    
    quitn    2h

end

// ; win32 constants
define WM_CREATE            1
define WM_DESTROY           2
define WM_SIZE              5
define WM_PAINT             000Fh
define WM_CLOSE             0010h
define WM_SETCURSOR         0020h
define WM_KEYDOWN           0100h
define WM_KEYUP             0101h
define WM_COMMAND           0111h
define GWL_USERDATA         0FFFFFFEBh

procedure win_WndProc

  dloadsi 2
  ifn labPaint WM_PAINT
  ifn labCreate WM_CREATE
  ifn labCursor  WM_SETCURSOR
  ifn labSize  WM_SIZE
  ifn labCommand WM_COMMAND
  ifn labDestroy WM_DESTROY
  ifn labDestroy WM_CLOSE

labEnd:
  eloadsi 4
  pushe
  eloadsi 4
  pushe
  pushd
  eloadsi 4
  pushe
  callextr extern : 'dlls'USER32.DefWindowProcW
  quitn 4
  
labCreate:
  open 1
  reserve 0  // ; open new frame
  acopys 0
  pusha
  system
  pushe
  callextr extern : OpenFrame
  popi 2

  pushn 0
  bcopys 0
  
  pushb
  aloadfi -7
  pusha
  acopyf -6
  pusha
  acopyf -5
  pusha
  acopyf -4
  pusha

  aloadfi -7
  pusha
  callextr api : resolve_index  

  pusha  
  xindexrm system'winforms'WindowCallback message : "wm_create<system'winforms'WindowHandle,system'IntNumber,system'IntNumber,system'winforms'CREATESTRUCT,'$auto'system@ref#1&system@IntNumber>[5]"

  acallvd
  popa

  acopys 0
  pusha
  system
  pushe
  callextr extern : CloseFrame
  restore 2
  close

  quitn 4
  
labDestroy:
  open 1
  reserve 0  // ; open new frame
  acopys 0
  pusha
  system
  pushe
  callextr extern : OpenFrame
  popi 2

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callextr api : resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback message : "eval<system'winforms'WindowHandle,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[3]"
  acallvd
  popa

  acopys 0
  pusha
  system
  pushe
  callextr extern : CloseFrame
  restore 2
  close

  quitn 4
  
labCommand:
  open 1
  reserve 0  // ; open new frame
  acopys 0
  pusha
  system
  pushe
  callextr extern : OpenFrame
  popi 2

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callextr api : resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -7
  pushb
  bcopyf -6
  pushb
  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback message : "wm_command<system'winforms'WindowHandle,system'IntNumber,system'IntNumber,system'winforms'WindowHandle,'$auto'system@ref#1&system@IntNumber>[5]"
  acallvd
  popa

  acopys 0
  pusha
  system
  pushe
  callextr extern : CloseFrame
  restore 2
  close

  quitn 4
  
labCursor:
  open 1
  reserve 0  // ; open new frame
  acopys 0
  pusha
  system
  pushe
  callextr extern : OpenFrame
  popi 2

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callextr api : resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -7
  pushb
  bcopyf -6
  pushb
  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback message : "eval<system'winforms'WindowHandle,system'IntNumber,system'winforms'WindowHandle,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[5]"
  acallvd
  popa

  acopys 0
  pusha
  system
  pushe
  callextr extern : CloseFrame
  restore 2
  close

  quitn 4
  
labPaint:
  open 1
  reserve 0  // ; open new frame
  acopys 0
  pusha
  system
  pushe
  callextr extern : OpenFrame
  popi 2

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callextr api : resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback message : "wm_paint<system'winforms'WindowHandle,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[3]"

  acallvd
  popa

  acopys 0
  pusha
  system
  pushe
  callextr extern : CloseFrame
  restore 2
  close

  quitn 4
  
labSize:
  open 1
  reserve 0  // ; open new frame
  acopys 0
  pusha
  system
  pushe
  callextr extern : OpenFrame
  popi 2

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callextr api : resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -7
  pushb
  bcopyf -6
  pushb
  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback message : "eval<system'winforms'WindowHandle,system'IntNumber,system'IntNumber,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[5]"
  acallvd
  popa

  acopys 0
  pusha
  system
  pushe
  callextr extern : CloseFrame
  restore 2
  close

  quitn 4

labEnd2:
  acopys 0
  pusha
  system
  pushe
  callextr extern : CloseFrame
  popi 4
  jump  labEnd
  
end

procedure thread_start

  eloadsi 1
  pushe
  pushr intern : system'core_routines'invoker
  pushr api : thread_default_handler
  system
  pushe
  callextr extern : StartThread
  popi 4
  quitn 1

end

symbol sta_start

  pushr entry : "$forwards'$program"
  pushr api : seh_handler
  pushr api : default_handler
  system
  pushe
  callextr extern : InitializeSTA
  popi 4
  quit

end

symbol mta_start

  pushr entry : "$forwards'$program"
  pushr api : seh_handler
  pushr api : default_handler
  system
  pushe
  callextr extern : InitializeMTA
  popi 4
  quit

end

symbol vm_sta_start

  pushr rdata : "$elena'@tapekey"
  pushr api : seh_handler
  pushr api : default_handler
  system
  pushe
  callextr api : get_seh_handler
  pushe
  callextr extern : InitializeVMSTA
  popi 4
  quit

end

procedure critical_exception_handler

  open 1
  pushr class : system'CriticalException
  pushr const : %"new[0]"
  throw

end
	
procedure invoker

  acopys 1  
  pusha
  callextr api : resolve_index
  pusha
  copym message : "#invoke[0]"
  acallvi 0
  ifr labError 0
  pop
  quitn 1

labError:
  open 1
  pushr class : system'NotSupportedException
  pushr const : %new[0]
  throw

end

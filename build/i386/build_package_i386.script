#!/bin/bash
RELEASE=elena-6.0.10.i386-linux

mkdir -p /usr/share/elena
mkdir -p /etc/elena/
mkdir -p /etc/elena/templates/
mkdir -p /usr/lib/elena/core/x32/
mkdir -p /usr/lib/elena/core/amd64/
mkdir -p /usr/lib/elena/lib60

cp ../../bin/libelenart60.so /usr/lib/elena/
cp ../../bin/libelenasm60.so /usr/lib/elena/
# cp ../bin/libelenavm.so /usr/lib/elena/
cp ../../bin/elena-cli /usr/bin/

cp ../../bin/elc60.config /etc/elena/
cp ../../bin/elenart60.config /etc/elena/
# cp ../bin/elenavm.config /etc/elena/
cp ../../bin/templates/*.config /etc/elena/templates/

echo compiling data files

../../bin/sg-cli ../../dat/sg/syntax60.txt
ret=$?
if [ $ret -eq 0 ]
then
  echo .
else
  echo "Failure" >&2
  exit 1
fi

# ../bin/elena-og ../dat/og/rules.txt
# ret=$?
# if [ $ret -eq 0 ]
# then
#   echo .
# else
#   echo "Failure" >&2
#   exit 1
# fi

../../bin/og-cli ../../dat/og/bc_rules60.txt
ret=$?
if [ $ret -eq 0 ]
then
  echo .
else
  echo "Failure" >&2
  exit 1
fi

../../bin/og-cli -s ../../dat/og/bt_rules60.txt
ret=$?
if [ $ret -eq 0 ]
then
  echo .
else
  echo "Failure" >&2
  exit 1
fi

cp ../../dat/og/*.dat /usr/share/elena/
cp ../../dat/sg/syntax60.dat /usr/share/elena

echo compiling assembly files

../../bin/asm-cli -x86 ../../asm/x32/core60.asm /usr/lib/elena/core/x32
ret=$?
if [ $ret -eq 0 ]
then
  echo .
else
  echo "Failure" >&2
  exit 1
fi

../../bin/asm-cli -x86 ../../asm/x32/core60_lnx.asm /usr/lib/elena/core/x32
ret=$?
if [ $ret -eq 0 ]
then
  echo .
else
  echo "Failure" >&2
  exit 1
fi

# ../bin/elena-asm2binx ../asm/x32/coreapi.asm /usr/lib/elena/core/x32
# ret=$?
# if [ $ret -eq 0 ]
# then
#   echo .
# else
#   echo "Failure" >&2
#   exit 1
# fi

echo compiling lib60 files

 ../../bin/asm-cli -bc32 ../../src60/core/system.core_routines.esm /usr/lib/elena/lib60
 ret=$?
 if [ $ret -eq 0 ]
 then
   echo .
 else
   echo "Failure" >&2
   exit 1
 fi

 ../../bin/elena-cli ../../src60/system/system.project
 ret=$?
 if [ $ret -eq 2 ]
 then
   echo "Failure" >&2
   exit 1
 else
   echo .
 fi

 ../../bin/elena-cli ../../src60/extensions/extensions.project
 ret=$?
 if [ $ret -eq 2 ]
 then
   echo "Failure" >&2
   exit 1
 else
   echo .
 fi

 ../../bin/elena-cli ../../src60/ltests/ltests.project
 ret=$?
 if [ $ret -eq 2 ]
 then
   echo "Failure" >&2
   exit 1
 else
   echo .
 fi

 ../../bin/elena-cli ../../tests60/system_tests/system_tests.project
 ret=$?
 if [ $ret -eq 2 ]
 then
   echo "Failure" >&2
   exit 1
 else
   echo .
 fi

 ../../tests60/system_tests/system_tests
 ret=$?
 if [ $ret -eq 2 ]
 then
   echo "Failure" >&2
   exit 1
 else
   echo .
 fi

 echo "Do you wish to create a package?"
 select yn in "Yes" "No"; do
    case $yn in
        Yes ) break;;
        No ) exit;;
    esac
 done

 mkdir -p ./$RELEASE/etc/elena/
 mkdir -p ./$RELEASE/etc/elena/templates/
 mkdir -p ./$RELEASE/usr/share/elena/
 mkdir -p ./$RELEASE/usr/lib/elena/core/x32/
 mkdir -p ./$RELEASE/usr/lib/elena/lib60/
 mkdir -p ./$RELEASE/usr/bin/
 mkdir -p ./$RELEASE/usr/elena-lang

 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/accumulator/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/ackermann/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/addfield/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/anonymrec/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/aplusb/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/applycallback/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/arithmeticint/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/arithmeval/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/arithmmean/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/arrayconcat/
 mkdir -p ./$RELEASE/usr/elena-lang/examples60/rosetta/arraymode/

 echo copying configuration

 cp ../../bin/*.config ./$RELEASE/etc/elena/
 cp ../../bin/templates/*.config ./$RELEASE/etc/elena/templates

 echo compiling shared files

 cp ../../dat/og/bt_rules60.dat ./$RELEASE/usr/share/elena
 cp ../../dat/og/bc_rules60.dat ./$RELEASE/usr/share/elena
 cp ../../dat/sg/syntax60.dat ./$RELEASE/usr/share/elena

 echo copying binaries

 cp ../../bin/elena-cli ./$RELEASE/usr/bin/
 cp ../../bin/libelenart60.so ./$RELEASE/usr/lib/elena/

 echo compiling core

 cp /usr/lib/elena/core/x32/*.bin ./$RELEASE/usr/lib/elena/core/x32/

 echo compiling lib60

 cp /usr/lib/elena/lib60/*.* ./$RELEASE/usr/lib/elena/lib60/

 cp -r ../../examples60 $RELEASE/usr/elena-lang
 cp -r ../../src60 $RELEASE/usr/elena-lang

 mkdir ./$RELEASE/DEBIAN
 cp ./control ./$RELEASE/DEBIAN

 dpkg-deb --build $RELEASE

 alien -r -c -v *.deb

exit 0
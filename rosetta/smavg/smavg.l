#define std'dictionary'*.
#define std'basic'*.
#define std'collections'*.
#define std'patterns'*.

#class ESMARole
{
    #field thePeriod.
    
    #initializer : aPeriod
    [
        thePeriod := aPeriod.
    ]
    
    #method + aNumber
    [
        self += NewInt32Value::aNumber.

        #if (self count > thePeriod)?
        [
            self first_item'reduce.
        ].
        
        #var aCount := self count.
        #if (aCount == 0)?
            [ ^ 0. ].
            
        #var aSum := Summing::Real::0 start:Scan::self.
        
        ^ aSum / aCount.
    ]
}

#symbol SMA : aPeriod = __wrap(ESMARole::aPeriod, List).

// --- Program ---

#symbol Program =
[
    #var SMA3 := SMA::3.
    #var SMA5 := SMA::5.

    loop &&from:1 &to:5 run: i =
    [
        'program'output << "sma3 + " << i << " = " << SMA3 + i.
        'program'output << ",sma5 + " << i << " = " << SMA5 + i << "%n".
    ].

    loop &&from:5 &to:1 &step:-1 run: i =
    [
        'program'output << "sma3 + " << i << " = " << SMA3 + i.
        'program'output << ",sma5 + " << i << " = " << SMA5 + i << "%n".
    ].
].

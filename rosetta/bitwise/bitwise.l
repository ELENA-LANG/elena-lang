#define std'dictionary'*.
#define std'basic'*.

#symbol BitwiseTest &former:anA &later:aB =
[
    'program'output << anA << " and " << aB << " = " << anA and:aB << "%n".
    'program'output << anA << " or " << aB << " = " << anA or:aB << "%n".
    'program'output << anA << " xor " << aB << " = " << anA xor:aB << "%n".
    'program'output << "not " << anA << " = " << anA inverted << "%n".
    'program'output << anA << " shr " << aB << " = " << anA __shift'add:aB << "%n".
    'program'output << anA << " shl " << aB << " = " << anA __shift'subtract:aB << "%n".
].

#symbol Program =
[
    #var a := 'program'input >> Integer.
    #var b := 'program'input >> Integer.
    
    BitwiseTest &&former:a &later:b.
].
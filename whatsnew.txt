
                                ELENA Language 

                                Version 3.1.1
 
******************************************************************************
                             What's New in 3.1.1
******************************************************************************

[ELC]
[-] #308 : Invalid lshift opcode when arg >= 32

[LIB]
[+] migrating remaining classes from LIB30

******************************************************************************
                             What's New in 3.1.0
******************************************************************************

[ELENA]              
[!] Major syntax refactoring
[+] #298 : Try / catch / finally code template
[+] #297 : if-else code template
[+] finally code template
[+] #286 : using  code template
[+] #301 : generic handler with open argument list
[+] the nested class implicit constructor
[+] #307 : Explicit literal constants

[ELC]
[-] fixing scores of bugs

[LIB]
[+] new system'matrixof template
[+] extensions'routines'MatrixSpace
[!] iterators are renamed into indexers

******************************************************************************
                             What's New in 3.0.1
******************************************************************************

[ELENA]              
[+] (re)introducing field templates
[+] (re)introducing auto-generated local / field attributes
[*] #294 : built-in variable refactoring (this and owner are no longer in use)

[LIB]
[+] new system'intarrayOp extension
[+] new system'intmnatrixOp extension
[+] new extensions'convertorOp.toIntArray, extensions'convertorOp.toIntMatrix  
    operations

[Samples]
[+] conway's game of life 

******************************************************************************
                             What's New in 3.0.0
******************************************************************************

[ELENA]              
[!] Introducing simplified (derectiveless) syntax
[+] code templates

******************************************************************************
                             What's New in 2.2.0
******************************************************************************

[ELENA]              
[!] Switched to MIT license

[ELC]
[-] #277 : loop statement without branching operator
[-] several critical bug fixes in structure routines
[+] #190 : Closure : auto boxing / unboxing local variables
[-] option "-c" can be skipped, the project path may be given directly
[*] #247 : operator with known operands 

[LIB]
[+] #62 : branching / jumping in system'dynamic'Tape
[+] #234 : Generic list
[-] fixed bug in UTF8Encoding / UTF16Encoding

[IDE]
[+] #58 : it is possible to interact with the symbols from the current project

******************************************************************************
                             What's New in 2.1.0
******************************************************************************

[ELENA]
[!] binary incompatible due to implementing issues #267
[+] #264 : Assigning an outer variable 
[+] #267 : Module initializers (preloaded attribute)
[+] #266 : Static fields 
[+] template syntax modified, suppress hint is obsolete (w2 and w3 can be
    used directly)
[+] #265 : enumeration lists

[ELC]
[+] #271 : constant array
[+] #238 : Library / Program Manifest (win32)

******************************************************************************
                             What's New in 2.0.3
******************************************************************************

[ELENA]
[!] binary incompatible due to implementing issues #259
[!] GC optimized / refactored
[-] critical bug fix of class'RTPointer
[-] critical bug fix in field template routine

[ELC]
[-] critical bug fix : unboxing open argument list
[-] #257 : Raising an exception in static symbol
[+] #259 : memory auto reservation
[-] #262 : system'Symbol - loading class in stand-alone application
[*] #246 : output code optimization

[LIB]
[-] #255 : Exception call stack 
[-] #220 : optimizing literalConvertor / wideConvertor

[Samples]
[+] script sample : calc

[IDE]
[-] #83: Debugger with vm client & script engine
[-] #219 : IDE - Callstack for vm console application 

******************************************************************************
                             What's New in 2.0.2
******************************************************************************

[ELENA]
[*] #172 : private / internal methods
[+] #250 : Implicit constructors

[IDE]
[-] #185 : Stack allocated structures are not correctly displayed
[-] #233 : IDE Debugger : next statement menu deprecated

[Samples]
[+] net sample : chat

******************************************************************************
                             What's New in 2.0.1
******************************************************************************

[ELENA]
[+] new statement #extern - exclude the code from GC
[+] new simplified syntax to declare typified variable / field
[+] new simplified syntax to declare subject
[+] typecasting message is auto generated
[+] #201 : shorthand property settings
[+] #54 : templates
[+] #231 - new syntax : Signature / Message constants
[+] #128 : constructors may now return constant value
[*] #136 : refactoring access to primitive managed code (core_routines)
[*] #40 : self is typified for type extensions

[ELC]
[!] binary incompatible due to implementing issues #217 and #54
[!] #217 : output code optimization
[-] critical bug fixes in COREX
[-] critical bug fixes in GCX
[+] #228 : safe region

[LIB]
[+] system : BitArray, BitArray32
[+] system'routines : PatternFilter2,PatternFilter3,PatternFilter4,
                      PatternFilter5, PatternFilter6
[+] system'routines : enumerable.filter&pattern[1]
[+] system'routines : enumerable.group&by[1]
[+] system'routines : enumerable.order&by[1]
[+] system'routines : enumerable.get&count
[+] system'io : stream.set&length[1]
[*] system : Char#class.new[1] supports now an integer parameter
[*] system'text : TextBuffer => TextBuilder
[*] system'io : Console output operation can be redirected now
[+] system'collections : #234 issue - listof:subject

[IDE]
[-] issue #4 : IDE and Chinese characters
[+] Menu - View - ELENA Interactive (#58: vm console)

[Samples]
[+] rosetta sample : Top rank per group
[+] rosetta sample : Truncatable primes
[+] rosetta sample : Visualize a tree

[ElenaScript]
[!] #65 issue : script engine is optimized

******************************************************************************
                             What's New in 1.9.25
******************************************************************************

[ELC]
[!] binary incompatible due to implementing issues #134 and #136
[!] issue #132 : GC hotfix
[!] issue #216 : operation with structure fields in stacksafe method
[!] issue #211 : Message call sequence with open arguments
[!] critical bug fix in lock statement

[LIB]
[+] system'routines : enumerable.sequenceEqual[1], indexable.reverse&at[2]
[+] system'routines : enumerable.accumulate&with[2]
[+] extensions : textwriter.write&args[1,], textwriter.writeLine&args[1,]
[+] extensions'text : (literal/wide).toByteArray
[+] system : Message.get&literal$
[+] system'io : MemoryBuffer
[*] #213 : system'MethodNotFoundException provides the message name now

[Samples]
[+] linux : anonymrec sample migrated
[+] linux : aplusb sample migrated
[+] linux : arraycallback sample migrated
[+] linux : arithmeticint sample migrated
[+] linux : arithmmean sample migrated
[+] linux : arrayconcat sample migrated
[+] linux : arraymode sample migrated
[+] linux : arrays sample migrated
[+] linux : associativearrays sample migrated
[+] linux : amb sample migrated
[+] linux : anagram sample migrated
[+] linux : arithmeval sample migrated

******************************************************************************
                             What's New in 1.9.24
******************************************************************************

[ELENA]
[!] binary incompatible due to new opcodes
[+] new simplified closure declaration syntax : ()[ i ]
[+] issue #125 : new UTF-16 literal constant
[!] implementing #198

[ELC]
[+] new project section "references" : adding a path to a library

[LIB]
[+] system : ExtensionMessage
[+] new extension : file.literalContent, file.wideContent
[+] new extension : char.is &whitespace
[+] new extension : object.toHexInt, object.toHexLong
[+] new extension : enumerable.zip&into[2], numeric.repeat&each[1]
[+] new system'dynamic extension :  object.mix&into[1]
[+] new extensions'dynamic extension : object.fromJson / object.toJson
[*] extensions'text: WordEnumerator => TokenEnumerator
[!] critical bug fix : "AA" < "AA" = true
[-] fixing arcsin, arccos

[IDE]
[*] icons in project tree added
[*] issue #130 : namespace is included into the tab name

[Samples]
[+] console sample : random
[+] rosetta sample : evolutionary algorithm

******************************************************************************
                             What's New in 1.9.23
******************************************************************************

[ELENA]
[!] binary incompatible due to major change in the heap structure
[+] new project template : guix

[ELC]
[-] issue #150 fixed
[*] issue #42 implemented
[*] issue #145 implemented : source level call optimization
[+] new option "xo1-" : turning off compiler source level optimization
[+] new method hint "suppress" : turning off compiler warnings for the method

[LIB]
[-] issue #174 fixed: bizarre return value in toLiteral&base:16
[-] issue #169 fixed: An error in literalOp.trimRight[1]
[+] new extension : object.toChar

[IDE]
[-] issue #75 fixed : call stack window is not properly refreshed
[-] issue #185 fixed : stack allocated structures are not correctly displayed

[Samples]
[+] rosetta code sample : simple windowed app
[+] rosetta code sample : gui component interaction

[Misc]
[+] linux : Debian package

******************************************************************************
                             What's New in 1.9.22
******************************************************************************

[ELENA]
[+] new statement: #try (<expr>) [<final-block>] | <optional-catch-expression>
[+] new statement: #lock (<expr>) [<critical-section-code>]
[+] new hint : arrayof
[+] issue #123 implemented : fixed size array field
[*] #143 issue : #import statement will be used for namespace importing
[+] issue #10 : initializing stack allocated object without creating a dynamic 
    one
[+] issue #48 : A proper method should have a precedence over an extension one
[!] static symbols are stack-safe

[ELC]
[*] output code optimization
[-] issue #8 fixed

[IDE]
[+] issue #13 implemented : Project View
[-] issue #142 fixed

[LIB]
[*] some house keeping
[+] culture'Locale
[+] new package net / system'net (issue #33)
[+] system'net :  Socket, AddrInfo, AddrInfoReader
[+] linux: support calendar routines

[Samples]
[+]linux : datetime sample migrated

[Misc]
[*]rearranging examples
                                                                                                  
******************************************************************************
                             What's New in 1.9.21
******************************************************************************

[ELENA]
[+] new "variable" hint
[+] "ByRef" parameters are supported
[+] project template console_mt (corex) is operational once again

[ELC]
[-] issue #47 fixed
[-] issue #22 fixed
[-] issue #68 fixed
[-] issue #67 fixed

[LIB]
[+] system'collections: Stack, Queue
[+] system'dynamic: CastOver
[+] bool inline if : iif[2]
[+] forms : Combobox
[*] system'dynamic'DynamicStruct is renamed into system'dynamic'Dynamic

[Samples]
[+] rosetta code sample : 100 doors
[+] rosetta code sample : 24 game
[*] calc is using script engine now

[IDE]
[-] issue #7 fixed
[-] issue #74 fixed

******************************************************************************
                             What's New in 1.9.20
******************************************************************************

[ELC]
[-] issue #15

[LIB]
[+] sqlite: supports float and blob fields
[+] extensions'dynamic : scriptEngine
[*] system'text'UT8Encoding : toLiteral&int&int&bytearray

[ElenaScript]
[!] script engine is again operational
[*] refactored / syntax modified
[+] local variables are supported
[+] structures are supported
[+] functions are supported
[*] EvaluateFile / InterpretFile: "~" indicates relative to elena bin folder

[Samples]
[+] calc
[+] sqlite_test - a first ELENA database example
[*] rosetta samples ackermann, addfield, accumulator are migrated to Linux

******************************************************************************
                    What's New in 1.9.19 (pre release)
******************************************************************************

[ELENA]
[!] binary incompatible due to changes in the compiler code
[!] a strong type cannot be used as a custom verb 
[!] ~ operator is no longer supported
[!] is 100% UTF-8 internally
[*] operator redesign : \ - alternative message call, || - or operator
[*] stripping CORE from OS dependant code and moving it into CORE_LNX and CORE_WIN
[-] out prefix is no longer supported, variable should be used instead
[*] gui platform is reintroduced
[+] built-in $nil symbol
[+] a class hint "stringof" supports type argument as well (e.g. stringof:int)
[+] coreapi : loading subject by name, returning the subject name
[+] new method hint : stacksafe

[ELC]
[*] two passes compiling: at first declare, at second - implement
[+] -wX / -wX- options turning on / off warnings
[*] optimization : a simple resend operation
[+] linux ELF linker
[*] both external call modes supported: winapi / c
[-] bug with outer field type fixed
[-] bug with redirect to an outer field fixed
[-] issue #45
[+] compiler option: ds - enabling subject serialization in stand-alone program
[!] by default c call convention (cdecl) is used

[LIB]
[!] literal type, LiteralValue, String are UTF-8, CharValue is Unicode (UTF-32)
[+] WideLiteralValue and WideString
[+] linux: support basic i/o operations (console, files)
[+] system'winforms module implementing basic WIN32 GUI functionality
[+] forms: SDIForm, SDIDialog, ChildForm, Edit, Label, Button, ImageBox, ImageList
[+] forms: Menu, DockingBox
[+] system'dynamic'classOp : read&mssg_mask&index&mssgarray&vint[4]
[+] system: MessageArray, IntMatrix, ReadArray, RealMatrix
[+] system'Signature: constructor new&literal$[1], new&wide$[1]
[+] system'dynamic: subjectROp
[*] system'dynamic: classOp -> classROp
[*] reflection routines work for stand-alone version as well
[+] extensions'text: encoderOp
[+] system'io: File
[+] new package: sqlite
[+] new modules: system'drawing
[*] system'io: Stream, BinaryReader, BinaryWriter, FileStream
[*] system'console: clear
[+] system'collections: ArrayList
[*] refactored to simplify the code
                                                                                                
Samples:
[+] agenda, graphs, c_a_g
[+] notepad

[IDE]
[*] binaray arrays are displayed in the debug watch correctly
[*] debugger behaviour reimplemented to improve UX

******************************************************************************
                    What's New in 1.9.18 (pre release)
******************************************************************************

[ELENA]
[!] binary incompatible due to changes in debugger / exception support / typecasting
[-] dn files are no longer produced, debug info is inside an executable
[+] new shared library : elenart - run-time helper for stand-alone applications
[+] constructor may have redirecting and initializing parts
[+] vmpath is no longer used, shared path used instead (for both elenavm and elenart)
[*] type routine overhaul
[*] syntax : extending operator renamed - "::" should be used
[*] syntax : class syntax changed - "::" should be used to provide the class parent
[+] new hint : type can be provided for the method result
[-] direct dispatching no longer supported
[-] statement terminator can be omitted only in lazy expression
[+] character constant (e.g. "a" is CharValue rather than LiteralValue)
[-] escape sequence is no longer supported (e.g. "Hello%n" => "Hello"#10 )
[*] 0r, 1.0e2r constants are correctly recognized
[*] ? and ! operators require an object now (e.g. a == b ? [ .. ]  is no longer possible, correct syntax is (a==b) ? [ ... ])

[ELC]
[*] codebase refactored
[*] output code optimized
[-] compiler option is no longer supported : -xembed-

[IDE]
[+] Project - View - Call stack
[-] Project - Options - Debug Mode : Enabled for VM Client is no longer supported
[-] Project - Options - VM Path is no longer supported / required (SHARED path is used)

[LIB]
[*] system : ByteNumber, ShortNumber, IntNumber, LongNumber, RealNumber, Integer, Long, Real, CharValue
[*] system : intConvertor, literalConvertor, longConvertor, realConvertor, FunctionX, IndexFunctionX
[*] system : Object#class.new, Exception::theCallStack, Exception.get&literal$
[*] system : ByteArray, ShortArray, LiteralValue, Array
[*] system'control => extensions'control
[*] system'collections : List, Dictionary
[*] system'routines : literalOp
[*] system'math : intOp, realOp
[*] system'calendar : Date, TimeSpan
[*] system'text : TextBuffer, Encoder, ansiEncoder
[*] system'io : BinaryReader, StreamReader, BinaryWriter, StreamWriter, FileStream, TextReader, TextWriter
[*] extensions: inputOp, outputOp, convetor
[+] system : CallStack, IntArray, byteConvertor, shortConvertor, CharArray
[+] extensions'dynamic: scriptEngine, ScriptEngineException
[+] system'math : byteOp, shortOp, longOp, Matrix

[ElenaScript]
[*] refactored / syntax modified
    
[Misc]
[+] installation package is introduced
[*] ELENA API documentation (see doc\api) is up to date now
[*] Visual Studio Projects are migrated to Visual Studio Community 2013

******************************************************************************
                    What's New in 1.9.17 (pre release)
******************************************************************************

ELENA:
[*] some bug fixes
[+] generic methods
                                                  
[LIB]
[*] some bug fixes
[+] system'dynamic: Group, Extension, classOp, DynamicStruct
[+] system'io: TextReader, StreamReader, StreamWriter, BinaryReader, BinaryWriter
[-] system'text: TextReader (refactored to be a base class and moved to system'io, system'io'StreamReader should be used instead)
[+] extensions'calendar: dateOp
[+] extensions'dynamic: scriptEngine
[+] extensions'text: StringReader

ElenaScript:
[*] script engine redesigned

******************************************************************************
                    What's New in 1.9.16 (pre release)
******************************************************************************
ELENA:
[!] compiler code overhaul & optimized (vm command set, typecasting, method code), 
[!] binary incompatible due to changes in the compiler
[*] changes in exception handling routines
[+] new operator setAt (e.g. a@2 := b <=> a setAt:2:b)
[+] new ecodes: bloadfi, mresetsubj

ELC:
[-] fixed: #var(type:long)n := 2
[*] output code : some refactoring, binary incompatible due to changes in method
    calling code / stack frame structure
[!] project configuration modified to support multiply platforms
[+] new platform: console_mt (early alpha)
[-] private message implementation fixed
[*] ecode optimization: idle labels are removed
                                                  
[LIB]
[*] some code refactoring
[+] system'threading: Thread, threadControl
[*] new functionality: system'intOp, system'mathOp
[*] new functionality: system'dynamic'Tape (supports methods)

Tools:
[*] asm2binx: fixed ecode compiler

******************************************************************************
                    What's New in 1.9.14 (pre release)
******************************************************************************

ELENA:
[*] operator implemenation refactored
[+] new statement : #use
[+] new method hint : extension
[+] new ecodes: loadclass, indexofmsg, wseval

ELC:
[*] codebase refactored
[*] some native-code optimization   
[-] fixed ecode: lrndnext

IDE:
[*] "step over line"/"step over" implementations are improved

[LIB]
[+] system'dynamic: Symbol
[+] new functionality:system'dynamic'classOp
[-] fixed bug:system'primitive.toLiteral&int&index (e.g. binary sample with 1234567)
[-] fixed bug:system'text'TextBuffer.write&literal (e.g. matrix sample, identity matrix with size >= 18)

******************************************************************************
                    What's New in 1.9.12 (pre release)
******************************************************************************
                                   
ELENA:
[+] new ecodes: sqrt, cos, sin, pi, arctan, iaxloadfi, iaxloadsi, iaxloadbi

ELC:
[*] heap size is tuned
[-] bug fix: length boxing, long static array implementation, break statement, wscopyreal,
             object constructor implementation
[-] byte code optimization routine fixed

IDE:
[+] debugger watch: open argument list

[LIB]
[+] new package: forms
[+] system: intOp

******************************************************************************
                    What's New in 1.9.11 (pre release)
******************************************************************************

ELENA:
[+] new ecodes: unbox, mreset
[+] it is possible to use generic arguments with an open argument list
[*] operations with stack allocated objects refactored

ELC:
[!] fixed critical bug in external call routine
[*] configuration / project  files are UTF8 now
[*] some native-code optimization   
[*] some byte-code optimization
[-] fixed bug with external operation error handling
[-] fixed bug with exception handling sub code
[-] fixed bug with control&do&until virtual implementation

[LIB]
[!] ELENA API refactored and simplified

ELENAVM:
[-] fixed bug with stack allocated object boxing

Samples:
[+] rosseta code: bullscows, calendar

Tools:
[*] asm2binx: fixed ModR/M and SIB encoding bug

******************************************************************************
                    What's New in 1.9.10 (pre release)
******************************************************************************

ELENA:
[!] binary incompatible due to changes in ecodes
[!] ecodes overhaul
[!] indexer operator syntax modified
[-] multi-select operator implementation fixed

ELC:
[+] new compiler options: optimization on/off

[LIB]
[-] CRITICAL BUG: fixed bug in GC algorithm
[!] primitive operation overhaul
[+] system'dynamic: Class, Struct, tapeControl
[*] new modules: system'calendar, system'routines

Samples:
[+] rosseta code: median, smavg, caesar, charmatch, arithmeval, combinator

Misc:
[+] Hyperactive ELENA API documentation (see doc\api) is up to date now

******************************************************************************
                    What's New in 1.9.9.11 (pre release)
******************************************************************************

ELENA:
[!] Exception handling syntax modified
[*] long, real and bytearray variable can be declared as a stack allocated one
[*] get / set opcodes: index range verification added

[LIB]
[!] ELENA API refactored
[*] index operations raise an exception if out of range
[+] extensions'patterns: CombinatorWithRepetition

Samples:
[*] matrix: determinant code fixed

IDE:
[-] debugger watch: fixed bug with unrefreshed stack allocated variables
[-] menu option shortcut fixed:upper / lower case
[-] menu option fixed:project clean up
[*] settings: font size can be changed

******************************************************************************
                    What's New in 1.9.9.10 (beta)
******************************************************************************

ELENA:
[!] binary incompatible due to critical bug fixes / new ecodes
[+] open argument list
[+] stack allocated local variable
[+] multy-select branching

ELC:
[*] some output code optimization
[*] CRITICAL BUG: dynamic array initializing                                               

[LIB]
[-] CRITICAL BUG: fixed bug in GC algorithm
[+] extensions'math
[+] system'dynamic: SelectorTape
[*] fixed bug: LiteralValue.equal&type'widestr[1]

Samples:
[+] console: datetime, matrix, textdb, translit
[+] rosseta code: ackermann, anagram, arithmeticint, arithmmean, arrayconcat,
    arraymode, associatearrays, bestshuffle, binary, brackets

ElenaScript:
[*] script modified to support basic operations
[*] opencalc: inline / default scripts

******************************************************************************
                    What's New in 1.9.9.9 (beta)
******************************************************************************

ELENA:
[+] new short form: %prop ( 2 ) == { prop'get = 2)
[!] the method parameter order is reversed
[+] new ecodes: mccelseacci, mccthenacci

ELC:
[!] binary incompatible due to changes in the implementation / opcodes
[-] CRITICAL BUG: fixed bug in jump opcode implementation
[-] CRITICAL BUG: fixed bug in mccquit opcode implementation

[LIB]
[+] system'dynamic:GetProperty
[+] system'text:ELiteralOp

Samples:
[+] rosseta code: arrays, applycallback, aplusb, anonymrec, addfield

******************************************************************************
                    What's New in 1.9.9.8 (beta)
******************************************************************************

ELENA:
[+] new ecode: acccopyfpi
[+] new class hint: sealed

ELC:
[!] binary incompatible due to changes in ecodes / critical bug fix
[-] CRITICAL BUG: fixed bug in GC algorithm
[*] more user friendly syntax errors
[*] optimization:idle frames
[-] fixed bug with default vm client exception handler
[-] fixed bug with direct method call implementation
[-] method has duplicate parameter names
[+] clean up code reimplemented
[-] bug in branching implementation (^ operator works incorrectly)

[LIB]
[*] some code refactoring
[*] exception handler interface modified: the reference to exception is passed

******************************************************************************
                    What's New in 1.9.9.7 (beta)
******************************************************************************

ELC:
[!] binary incompatible due to changes in ecodes/API
[-] exception handling routine is modified to fix the bug with stack allocated objects
[-] fixed critical error in code generation (jump ecodes)
[*] more user friendly syntax errors
[*] optimization:virtual branching
[*] resend expression syntax modified

[LIB]
[+] system'dynamic:Wrap,Pair,EReflector
[+] system'collections'Dictionary
[+] extensions'dynamic:ETextSerializer, Globals
[+] extensions'text:presenter
[*] system: Date, TimeSpan, Variable
[*] system'text: Bookmark
[-] fixed critical error in LiteralValue.equal implementation

IDE:
[-] debugger watch: fixed bug with stack allocated objects

Samples:
[+] console: replace, goods
[+] rosseta code: accumulator

******************************************************************************
                    What's New in 1.9.9.5 (beta)
******************************************************************************

ELENA:
[!] external code call routine is modified

ELC:
[!] binary incompatible due to changes in ecodes/procedure enter/leave 
    implementation
[-] fixed boxing routine

IDE:
[*] debugger watch supports stack allocated variables

[LIB]
[+] extensions'text:EIntPresenter, EIntFormatter, IntPresenter, IntFormatter, EListPresenter
[+] extensions'io:consoleHelper

Samples:
[*] binary sample is migrated

******************************************************************************
                    What's New in 1.9.9.4 (first beta)
******************************************************************************

ELENA:
[-] default subject param is no loger supported
[+] method / constructor dispatch body
[*] primitive operation overhaul, stack allocated primitives introduced

ELC:
[*] bsredirect is optimized
[*] some bytecode optimization
[*] some code refactoring
[-] fixed "duplicate constant" issue

[LIB]
[+] system'io'File, system'io'TextReader

IDE:
[*] "step over line" implementation is improved
[*] file's full path is displayed as a tab hint

Samples:
[*] textfile sample is migrated

******************************************************************************
                    What's New in 1.9.9.3 (late alpha)
******************************************************************************

ELENA:
[*] unnamed argument list

ELC: 
[-] fixed several critical bugs

LIB:
[*] properties start with a capital letter
[+] date / time basic support
[*] some bug fixes

Samples:
[*] pi sample is migrated
[*] bsort sample is migrated


******************************************************************************
                    What's New in 1.9.9.2 (second alpha)
******************************************************************************

ELENA:
[+] horizontal inheritance

ELC: 
[-] fixed several critical bugs

LIB:
[+] new package: extensions
[+] new modules: system'collections, system'text

Samples:
[*] words sample is migrated

******************************************************************************
                    What's New in 1.9.9.1 (alpha)
******************************************************************************

ELENA:
[!] deep language redesign [ELENA2]

ELC: 
[!] deep compiler redesign

LIB:
[!] deep API redesign

IDE:
[!] some modification to support ELENA2 changes

Samples:
[*] helloworld, u_helloworld, intsum and real sum are migrated

******************************************************************************
                    What's New in 1.7.17
******************************************************************************

ELC: 
[*] some code refactoring to be ready for Linux migration 
    (all _T macros are removed)
[*] new elena code optimization rules
[-] fixed several critical bugs (branching, jump optimization)

Samples:
[*] gui samples migrated to lib27

LIB:
[*] migration to lib27

******************************************************************************
                    What's New in 1.7.16
******************************************************************************

ELENA: 
[*] language deep overhaul
[*] message constants: %subject'verb
[*] subject constants: %subject
[-] no longer supported: __wrapbatch
[+] new: __wraps, __expr

IDE:
[-] fixed bug with indent / outdent operation on the last line

Samples:
[*] migration to lib27

LIB:
[*] migration to lib27

SCRIPT:
[*] migration to lib27

******************************************************************************
                    What's New in 1.7.15 [ELENA 2012 beta]
******************************************************************************

ELC:
[*] argument list routine redesigned, arg, sign hints are no longer supported
[*] dispatching mechanism is redesigned
[-] __prop is no longer supported, __args should be used instead
[+] new external role __args
[*] binary incompatible due to change in ecodes / argument list implementation
[-] #try, #role are no longer supported
[-] sign, subj, arg hints are no longer supported
[+] argument list extender
[+] argument list disptacher

Samples:
[*] some samples migrated to lib27

LIB:
[+] part of the codebase migrated to lib27

******************************************************************************
                    What's New in 1.7.14
******************************************************************************
ELC:
[*] optimization: unreachable code, idle jumps
[-] fixed bug with #sync

Tools:
[*] ecv: literal constant value is displayed
[*] asm2binx: fixed bug with compiling cmpxchg opcode

Samples:
[*] fixed matrix sample

******************************************************************************
                    What's New in 1.7.13
******************************************************************************

ELENA:
[*] code base refactored to support UTF16 & UTF8
[*] __classreference and __symbolreference should be used instead of
    $classreference and $symbolreference
[*] __symbolreference can be now used to dynamically load a symbol (in VM mode)
[+] new dynamic group object: __succ

ELENAVM:
[*] VM API is refactored

Samples:
[*] upndown migrated to LIB26
[*] most of samples are migrated to LIB26 (except notepad)

LIB:
[*] fixed a critical error with int64 arithmetic operations (multiplication)
[+] ext'serialization'TextSerialized
[*] ext'routines'CombinatorWithRepetition and ext'routines'Combinator refactored

******************************************************************************
                    What's New in 1.7.12
******************************************************************************

ELENA:
[+] new keyword: #sync (to acquire an object exclusive access)
[+] new group objects: __symbol
[-] obsolete group object: __action (__symbol should be used instead)
[*] batch group handler is redesigned

ELC:
[*] some code refactoring (get rid of TCHAR)

IDE:
[*] some code refactoring (get rid of TCHAR)
[*] fixed bug with step over parametrized symbol

Tools:
[*] some code refactoring (get rid of TCHAR)
[*] elt is refactored

Samples:
[*] some rosetta samples migrated to LIB26

SCRIPT:
[*] elenasm is refactored to support several layer grammar rules
[!] script syntax modified
[*] action dynamic group is renamed into symbol

******************************************************************************
                    What's New in 1.7.11
******************************************************************************

LIB:
[+] std'routines'arrays'reverted

IDE:
[-] debug watch:the content is refreshed automatically when the item is expanded

Samples:
[*] some rosetta samples migrated to LIB26
[*] upndown: score table displayed

******************************************************************************
                    What's New in 1.7.10
******************************************************************************

ELENA:
[*] #loop is obsolete, #while should be used instead
[*] fixed wrapgroup: group of group

ELC:
[*] code base: some refactoring (bcwriter)
[+] new byte code optimization rules
[+] new ecodes: sptrylock and accfreelock

LIB:
[*] lib26: ELENA API is refactored
[+] new module: ext'serialization

Samples:
[*] samples migrated to LIB26
[!] rosetta samples are not migrated to LIB26

******************************************************************************
                    What's New in 1.7.8
******************************************************************************

ELC:
[*] optimization: a back:b => b

LIB:
[+] ext'routines: Combinator, CombinatorWithRepetition

******************************************************************************
                    What's New in 1.7.7
******************************************************************************

ELC:
[*] coret: synchronization routine is overhauled
[*] project templates reorganized

******************************************************************************
                    What's New in 1.7.6
******************************************************************************

ELC:
[*] jit compiler & linker refactored to get rid of explicit use of 
    object & vmt offsets
[*] core & coret have different object offset constants

LIB:
[+] sys'dynamics: castvariable

SCRIPT:
[*] default: new rules to describe group objects

******************************************************************************
                    What's New in 1.7.5
******************************************************************************

ELC:
[+] new compiler option: lstdx
[-] fixed bug with invokevmt and "any" handler

ELENAVM:
[+] new function: LoadClassName

LIB:
[+] sys'vm'engine: Controller::class_name'refer
[+] sys'vm'routines'classname
[*] std'memory'bytearrayreader refactored

IDE:
[-] debug autowatch:self and $self variables are now displayed correctly

Samples:
[+] new rosetta sample: combinations

Tools:
[-] elt: cannot display VM error

******************************************************************************
                    What's New in 1.7.4
******************************************************************************

ELENA:
[+] new initializing argument list syntax:Loop &&from:1 &to:5
[*] it is now possible to debug built-in group types

ELC:
[*] optimization: numeric and literal constant methods are called directly
[-] fixed: negative floating number constant

LIB:
[+] win32'localization'strings
[-] fixed: minus is lost when converting a real64 to a string

IDE:
[-] fixed: go to source
[-] fixed: symbol parameter is not shown in auto watch
[-] fixed: cannot find lib25 source files (wrong libpath & srcpath)

Tools:
[*] ecv: it is possible to provide path to the viewing module

Samples:
[+] new rosetta sample: charmatch

******************************************************************************
                    What's New in 1.7.3
******************************************************************************

ELC:
[*] optimization: a role method is invoked directly
[-] fixed generic handler

IDE:
[-] fixed bugs with auto compilation mode
[-] fixed: if the breakpoint is at the first visible line, it is not shown

LIB:
[+] win32'threading'api'threadhandle.wait
[+] std'basic'widechar: + / -
[+] sys'dynamics: batch
[-] gui controls events: onenter / onleave
[-] fixed: timespan::milliseconds'get

Samples:
[+] new rosetta sample: caesar
[*] calc: some rules are migrated to the script

******************************************************************************
                    What's New in 1.7.2
******************************************************************************

ELENA:
[-] #type is no longer supported, use $classreference instead
[+] new meta symbols : $symbolreference and $classreference

SCRIPT:
[+] new inline command: $symbolreference - to create a type symbol

LIB:
[*] std'routines'arrays:fixed bug
[+] win32'io: directoryfactory

ELC:
[+] simple byte command type optimization (popn pop => popn)

Tools:
[*] ecv: displays command references

Samples:
[+] new rosetta sample: binary

******************************************************************************
                    What's New in 1.7.1
******************************************************************************

ELENA:
[*] external roles can inherit another roles now

ELC:
[*] warns if included module doesn't exist
[+] new method hint: sync
[+] new ecodes to support critical sections: trylock / freelock
[*] bytecode optimization overhaul [in development]

LIB:
[*] sys'dates:fixed several bugs
[+] std'routines: elist (should be used instead of eitem), earray

Samples:
[+]new rosetta sample: bullscows

Tools:
[*] elt: fixed bug with minus parsing
[*] ecv: displays labels properly
[*] ecv: new command: -o (to save the code listing into the file)
[+] og: new tool to generate optimization rules [in development]

******************************************************************************
                    What's New in 1.7.0
******************************************************************************

ELC:
[*] binary incompatible due to change in ecodes / primitives

LIB:
[+] new module: ext'utils
[+] std'basic'factory: newwideliteral

Samples:
[+] new rosetta stone sample:brackets, bestshufffle

IDE:
[+] tools - debugger options: lib path, src path
[+] project - options: vm path

******************************************************************************
                    What's New in 1.6.18
******************************************************************************

ELENA:
[+] new verb: invoke (used only for dynamic programming)

LIB:
[+] new group object: __action, __bcast
[*] verb role implementation changed
[*] __cast routine was modified (the old functionality is implemented in __bcast)
[*] fixed bug in the property group handler: $self should be used instead of self
    to deal with the case when the property is a part of the group
[*] fixed bugs in std'routines'strings'eops role

SCRIPT:
[+] new inline command ^^ verb: use external role object
[+] new supported group type: cast
[*] interpreter script migrated to LIB25 / OA paradigm

IDE:
[+] new setting - debugtape - to debug vm tape
[*] fixed bug with the debugger:stayed twice on the same step

Tools:
[*] ecv: could view symbol code as well

******************************************************************************
                    What's New in 1.6.16
******************************************************************************

ELC:
[*] some code refactoring / cleaning

LIB:
[*] ext'gui migrated to lib25

SCRIPT:
[!] VM Tape command overhaul; it supports stack variables now
[*] fixed bug with the role implementation

IDE:
[*] VM Client debugger overhauled
[+] it is now possible to debug vm script
[-] fixed #00063: step over / into does not work when starting vm client

Tools:
[+] ECV (ELENA Code viewer): ELENA byte code decoder

******************************************************************************
                    What's New in 1.6.13
******************************************************************************

ELENA:
[+] new built-in verb roles
[*] built-in group class aliases can be used in #type expression

ELC:
[-] fixed #00062: cannot parse 2-3 expression
[-] fixed bug with external role $self variable
[-] fixed critical error in arithmetic routines
[!] parsing order changed: tilde expression is now part of the operation
    rather than the object

LIB:
[*] "then" subject is moved to external role std'patterns'econtrol
[+] std'patterns: etryget<prop> template
[+] ext'patterns: meanaction

SCRIPT:
[-] embedded action is no longer supported

******************************************************************************
                    What's New in 1.6.12
******************************************************************************

ELENA:
[-] #wrap, #group, #cast and #union are no longer used, built-in classes should be
    used instead
[-] subject adapter hint is no longer supported
[+] new method handler - #generic
[+] new verb: replace

LIB:
[+] LIB25: the language API was overhauled
[+] LIB25: new built-in group classes: __prop, __wrap, __group, __cast, __union, 
   __wrapgroup

SCRIPT:
[+] supports new group objects: &prop and &wrap

******************************************************************************
                    What's New in 1.6.11
******************************************************************************

ELENA:
[!] core / command primitives refactored
[+] ecodes set extended
[+] new built-in variable $next
[+] new group type: switch
[-] role enext is no longer supported, use $next instead
[+] new group type: wrap

LIB:
[+] sys'assembly'egetprop

SCRIPT:
[*] disptaching implementation refactored
[+] it is possible to use external roles
[+] new script engine keyword: $role

******************************************************************************
                    What's New in 1.6.10
******************************************************************************

ELENA:
[!] syntax overhaul
[!] compiler class refactored

Samples:
[*] samples changed to follow new syntax

******************************************************************************
                    What's New in 1.6.9
******************************************************************************

ELENA:
[-] fixied critical errors in GCX/GCXT
[+] new ecode: shiftacc
[*] it is possible to switch roles inside the inline sub class
[*] gui vm client displays errors on start now

LIB:
[+] std'routines'summing, std'routines'counting, std'patterns'it

Samples:
[+] rosettacode: bitwise

IDE:
[-] several small bugs  

******************************************************************************
                    What's New in 1.6.8
******************************************************************************

ELENA:
[*] gcxt: pre-alpha

LIB:
[*] sys'entries redesigned
[+] sys'vm'scriptengine
[+] new module: std'math'vectors, sys'threading, win32'api'threading

Samples:
[*] vmconsole, notepad, timer
[+] rosettacode:smavg, arrayconcat, arraymode

IDE:
[*] migrated to elenasrc2 branch
[+] search history in search / replace dialogs

******************************************************************************
                    What's New in 1.6.7
******************************************************************************

ELENA:
[+] project config forwards section: supports wildcards
[-] fixed critical error in GC_REALLOC
[-] fixed critical error in merger ecode
[-] fixed critical error in elenavm with forward symbols

LIB:
[+] new gui dialogs: opendialog and savedialog
[+] new control: gui'controls'Timer
[+] sys'dates'Date: it is possible to set / add / subtract date members
[+] new symbol sts'dates'NewDate
[+] new role std'routines'EArrayOp: array concatenation
[-] fixed error in win32'dates'DateConvertor

SCRIPT:
[*] script engine redesigned: simplify inline command syntax, there may
    be several grammar rule sets
[+] bf interpreter script

Samples:
[+] new sample:timer

IDE:
[-] fixed bug with 'step over' the symbol with a parameter

******************************************************************************
                    What's New in 1.6.6
******************************************************************************

ELENA:
[*] it is possible now to provide a full subject reference

LIB:
[*] migration to LIB2 completed
[+] new std classes:listindexer
[+] new std roles:esort, estrop

SCRIPT:
[*] multi-dispatching is supported
[-] role support is dropped

Samples:
[*] upndown migrated to LIB2
[*] vmconsole sample: first working prototype of using script engine in ELENA
    program

******************************************************************************
                    What's New in 1.6.5
******************************************************************************

ELENA:
[-] GC retired
[*] ELENAVM client support redesigned
[!] critical bug fixed: local variables with the same name

LIB:
[*] lib2 redesigned
[+] new module: sys'vm

SCRIPT:
[!] script engine refactored: inline script can be used to configurate and start VM

Tools:
[*] elt: several critical bugs fixed
[!] elt refactored: vl3 script type is no longer supported

******************************************************************************
                    What's New in 1.6.4
******************************************************************************

ELENA:
[*] GCX: stable beta

LIB:
[*] console2 & gui2 templates are switched to X platform
[-] fixed bug in win32'io'console implementation

IDE:
[*] IDE code is migrated to elenasrc2 branch

******************************************************************************
                    What's New in 1.6.3
******************************************************************************

ELENA:
[!] @ operator parsing order is changed
[+] #define import subjects as well
[+] argument list is now possible to use with symbol parameter as well
[+] new opcode: break2else, savesacc
[-] nil subject is no longer supported, use nillable

SCRIPT:
[!] script engine refactored

ELC:
[!] binary incompatible with the previous versions
[!] subject implementation overhaul
[!] elenavm InterpretLVMEx is redesigned
[*] gcx: beta
[-] -ffriend-injection mingw compiler option was removed
[-] fixed bug with using #try and assigning expression
[-] fixed bug in group_next primitive function
[-] fixed bug in nullable option implementation

Samples:
[*] bf interpreter: script version
[*] gui samples migrated to lib2

Tools:
[!] elt refactored
[-] fixed bug in asm2binx: __arg1 is not recognized as a reference for SUB

******************************************************************************
                    What's New in 1.6.2
******************************************************************************

ELENA:
[+] it is possible now to switch to another role inside another one
[+] new ecode: snop
[+] run-time multi-dispatching
[+] new argument option: nullable
[!] obsolete argument option: norecc
[+] ecodes are simplified, several big commands are split
[!] #continue is no longer supported
[+] new statement: #try

SCRIPT:
[+] it is possible to map forward references (#map 'forward reference;)
[+] it is possible to set package path (#package [<ns>] "path";)

ELC:
[+] new compiler option - g0
[*] some basic byte code optimization rules
[+] new option to turn on / off optimization
[+] optimization: direct method call for constants and external roles
[-] fixed bug with inline class argument hint
[*] elenavm is refactored to be ready for script engine

LIB:
[*] code refactoring

Samples:
[*] console samples are migrated to lib2
[*] rosetta stone samples are migrated to lib2

Tools:
[+] vm terminal
[+] script engine

******************************************************************************
                    What's New in 1.6.1
******************************************************************************

ELENA:
[+] alpha multi-threading support: GC is now thread-safe
[+] new simplified syntax to create a group
[+] it is possible to include the other module references without aliases
[*] several big commands are split, highly specialized commands - dispatch,
[*] new simplify syntax to specify compiler options
[!] #hint keyword is no longer supported
[+] new ecode - popn
[*] expression syntax simplified

ELC:
[-] fixed critical bug in memory management
[-] fixed #group statement bug for x platform
[-] fixed critical error - cannot compile class with roles in the release mode
[-] fixed #00058: duplicate subjects
[-] fixed #00059: win32_gui_vm_client and win32_console_vm_client applications do not work
[-] fixed #00060: #var a := a verb:b should not be possible

LIB:
[+] new classes: ext'patterns'MultiEnumerator, std'patterns'args

Samples:
[*] hellowworld_u migrated to lib2
[-] upndown bug fixed:player plays with a joker as a biggest one

IDE:
[+] IDE debugger supports multy-threading applications
[-] 64bit integer numbers are displayed correctly in the debugger watch window

******************************************************************************
                    What's New in 1.6.0
******************************************************************************

ELENA:
[-] $next is no longer supported, use #continue
[-] the following verbs are no longer supported:shift, of, create, enum
[+] new simplified method argument syntax
[!] api code is significantly refactored
[+] dynamic symbol loading
[!] operators now have a verb synonyms
[+] add possibility to import subjects on the level of the module
[!] changed inline class implementation

ELC
[-] critical bug with nested conditional statements
[-] critical bug with GC
[+] new project template - guivm
[-] critical bug with GC (full collect is not invoked if there is no enough memory after 
    partial collection)
[-] critical bug in bcFillR implementation code
[-] fixed critical bug with long number constant
[-] fixed: disabled debug mode crashes executable file

LIB:
[!] source code is completely rewritten
[-] bool protocol is dropped
[-] fixed int64 operations
[-] critical bug with the win32 control reference pool
[+] new symbol sys'vm'loader

Samples:
[-] fixed the issue with the focus in upndown sample
[-] fixed matrix sample
[+] basic up'n'down game version

******************************************************************************
                    What's New in 1.5.6
******************************************************************************

ELENA:
[*] x86 JIT Compiler was optimized
[*] native code support overhaul
[*] method call overhaul
[*] ecodes: exitannex renamed to breakannex
[*] new verb: takeout
[*] 64bit integer constants

LIB:
[+] std'math'MatrixEnumerator, std'math'MatrixEnum, std'math'MatrixType
[+] std'math'dictionary module
[+] gui'dialogs'errorbox
[+] gui'controls'Menu
[*] compile libary overhaul to adapt new method calling syntax
[*] several small enhancements
[+] new control: gui'controls'Checkbox
[-] fixed a bug in 'program'output char'get
[+] sys'io: BinaryFile, NewBinaryFile
[+] ext'text: HexAdapter, EIntFormatter, ELiteralFormatter
[*] nil'ifnot is no longer supported - nil'is should be used

ELC:
[+] new project sections: sforwards
[+] miltidispatching mechanism: some optimizations
[-] drop support of sdef hint
[*] migrated to gcc4

IDE:
[-] fixed #00054: after changing encoding to unicode project template list is empty 

Samples:
[+] new sample: Matrix
[+] new sample: Dices
[+] new sample: eldoc
[+] upndown: it is now possible to play with a chaotic (random) compiler player
[-] fixed #00053: elenavm: helloworld doesn't work

Misc:

******************************************************************************
                    What's New in 1.5.5
******************************************************************************

ELENA:
[!] 'evaluate' message name should be used instead of 'proceed' one
[!] 'do' message name should be used instead of 'continue' one
[!] 'nil'ifnot' should be used instead of ifnotnil
[!] new #hint keyword to introduce new style class attributes / shortcuts
[!] old style hints are no longer support, #hint should be used
[!] elena byte codes (ecodes) are redesigned
[!] elena syntax:argument list introduced
[+] new keyword: #union

LIB:
[+] new package: ext'gui
[+] new class: ext'text'LineInput
[-] fixed #00051: printing long string
[*] ELENA library is refactored to support new language features
[-] context'get is no more supported, use instead enum'content'get or 
    indexer'content'get

ELC:
[-] fixed #00050: empty role
[-] fixed #00052: The compiler has a problem with paths where the NAME of a folder has space
[-] fixed compilation of the following code: #if Test::2 ...
[-] fixed #00045: now the number of warning is limited to 100
[-] fixed #00046: too long quote
[-] references implemented in the next module are no longer considered as 
    unresolved
[-] action expression bug is fixed
[-] fixed loop implementation bug

IDE:

Samples:
[*] Samples are refactored to support new language features

Misc:

******************************************************************************
                    What's New in 1.5.4
******************************************************************************

ELENA:
[+] new built-in variable $next to work with group objects
[+] multiple dispatching implementation for several messages
[!] Message namespace implementation overhauled
[!] keyword #subject should be used instead of #scope
[*] project system/type option is not supported anymore

LIB:
[*] ELENA library is refactored

ELC:
[+] a simple virtual machine support (elenavm)
[-] fixed a major bug with inline symbol
[-] fixed a critical bug with circular reference
[-] fixed #00048: sending new message to group raises the exception
[!] ELENA byte code refactored

IDE:
[*] Project option page is simplified

Samples:
[+] new sample: DateTime Calculator (examples\datetime)
[+] new sample: TextDB

Misc:
[*] project file format modified

******************************************************************************
                    What's New in 1.5.1
******************************************************************************

ELENA:
[!] Message namespace implementation overhauled
[-] $invoke special message is no more supported
[+] keyword #scope added

LIB:
[*] ELENA library is refactored
[+] new component: gui'controls'Memo

ELC:
[*] Compiler code is refactored to be ready for ElenaVM

IDE:
[*] debugger implementation impoved
[*] russian localization

Samples:
[+] new sample c_a_g (thanks to Alexandre Bencz)
[*] Samples are refactored to support latest language changes

******************************************************************************
                    What's New in 1.5.0
******************************************************************************

ELENA:
[!] ELENA Engine refactored

LIB:
[+] new class: ext'utilities'Date
[-] fixed bug: real to literal conversion routine

ELC:
[!] ELC generates byte code modules instead of native ones
[*] Linker speeded up
[-] fixed critical bug: resource leaking in debug mode

IDE:
[+] new setting : Project - Options - Additional options 
[+] simply plugin support
[+] new plugin: code auto formatter (autoform)
[+] debugger implementation refactored
[-] fixed bug:auto recompile functionality
[-] fixed bug:the row numbers starting with 2

Samples:
[+] new samples: Agenda, pi, binary (thanks to Alexandre Bencz)

******************************************************************************
                    What's New in 1.4.6
******************************************************************************

ELENA:
[!] SYNTAX CHANGED: operators have now 5 parsing levels (so no need in brackets
    in the following expression i + j * k)
[!] SYNTAX CHANGED:operator '->' is obsolete, use instead '::', the message call
    without parameters requires no special operators 
    (e.g. aCollection->prop'Enumerator => prop'Enumerator::aCollection 
     anEnumerator::next => anEnumerator next)
[!] SYNTAX CHANGED: #if statement now allows multiple cases
[-] fixed #00019: constructor should not be called then presing F8 on scan 
    declaration expression 

LIB:
[*] ELENA library is refactored and extended with the new classes and methods
[+] new sample: interpreter (thanks to flackpanzer)

ELC:
[!] $super is no more supported
[+] new control: ListBox
[+] new hint dbg:long
[*] Output code optimized
[*] several small enhancements / code refactored
[-] fixed the bug with invalid super usage in inline class

IDE:
[-] fixed several small bugs
[-] fixed #00038: breakpoint is still active after it was removed
[-] fixed #00036: debugger auto watch doesn't show self variable somtimes
[-] fixed #00035: wrong highlighting: if the parameter name after ":" or "=" is on the new line 
    it's highlighted as message
[+] highlighting the opening or closing brackets
[*] debugger routine optimized

Samples:
[*] added new code to upndown sample
[*] added new code to calgui sample

******************************************************************************
                    What's New in 1.4.5
******************************************************************************

ELENA:
[!] old style protected messages are no more supported
[!] hint ns no more supported
[*] for protected message it is possible to provide namespace directly in the 
    reference without any hint
[*] new floating-point number syntax:it should be ending with 'r' postfix
[-] $param is no longer supported

LIB:
[*] ELENA API refactored: number of changes including symbol / message renaming
[+] message private namespace could be shared between the modules belonging to
    the same subbranch
[!] critical bag fixed in std'math module: round operation
[+] new class: std'basic'LongNumber, std'basic'LongInteger

ELC:
[*] Coder refactored
[*] Output code optimized
[!] Critical bug fixed in GC (assigning local object fields)

IDE:
[-] fixed the bug with debugger auto watch

Samples:
[+] new sample: graphs
[*] code refactored, several small bugs fixed

Misc:

******************************************************************************
                    What's New in 1.4.4
******************************************************************************

ELENA:
[!] NEW SYNTAX: square brackets are used for hints instead of normal ones

LIB:
[+] new control: UpDown
[+] new module: std'math
[*] indexer / enumerator routines are refactored
[*] gui forms support now keyboaad and mouse events

ELC:
[!] fixed the bug: gui application is not released from the memory 
    after the program is closed on Windows Server 2003
[-] fixed the bug with invalid nil symbol offset
[-] fixed the bug with annex symbol debugging
[-] project namespaces section is no more supported
[-] fixed GC bug: external field assigning from different generations
[-] fixed #00033: the following code 453464646->memory'NewLiteral raise 
    'access vialation' exception instead of 'out of memory'
[-] fixed the bug with sequence of operation with super / self variables
[+] support of temporal objects
[+] new hint - dbg used by the debugger to define the object data type
[*] compiler warns now if the module has incompatible structure
[*] built-in variable - $vself is no more supported, use self instead
[*] more user-friend parser error messages for missing brackets

IDE:
[+] new option - autocomp: automatically recompile out of date projects
[+] new toolbox icon: Goto Source
[+] debugger auto watch shows $vself built-in variable if it's different
    from self
[+] new project option:command arguments
[*] several small enhancements
[-] fixed: 'Go To Line' dialog doesn't work
[-] fixed #00032: invalid syntax highlighting

Samples:
[*] Up'N'Down sample refactored and extended

Misc:
[*] STD package documentation is up to date

******************************************************************************
                    What's New in 1.4.3
******************************************************************************

ELENA:
[+] hint could be provided as postfix after an appropriate keyword
[+] new keyword #if for chain branching expressions
[+] new simplified syntax for initializing implicit symbols
[+] new built-in message $invoke
[*] symbol could have only one parameter now
[*] several minor syntax changes (brackets used instead of < > characters,
    '->' operator used for property-symbols instead of "::&")
[-] #case keyword is obsolete, use #if instead
[-] keyword #hint obsolete, use new syntax postfix syntax
[-] protectable hint is obsolete now
[-] obsolete built-in variables $this and this are no longer supported

LIB:
[*] refactored to support new language features
[*] several new controls: gcomp'Paintbox, ggraph'ListImage
[*] the library code is refactored and new functionality added

ELC:
[+] new hint - constant
[*] output code optimization: stateless objects treated as constants
[-] fixed: invalid error message if the base class is declared after the
    inheriting class
[-] config value flatmode is no longer supported, only flat mode is allowed
    now

IDE:
[+] new menu option: Go To Source Code
[+] new shortcut: ALT+0 - open Window List
[+] new shortcut: ALT+N - switch to the tab (from 1 to 9)
[+] new option: it's now possible to close the window from window list dialog
[+] new option: remember last folder / last project checkboxes in Editor 
    Options dialog
[+] new project option: project template
[+] new short-cut: CTRL+E to swap two symbols on either side of the cursor
[+] new file option: close all but active
[+] new edit options: to upper / to lower case
[*] project option dialog redesigned
[*] Recent projects / files lists are numerated now
[-] fixed #00025: the debugger stops on the place where F4 was pressed 
    last time even if the program was restarted
[-] fixed #00026: operators are not highlighted correctly after digit
[-] fixed #00015: debugger watch does not show symbol parameters

Misc:
[!] ELENA API and documentation are out of date

******************************************************************************
                    What's New in 1.4.2
******************************************************************************

LIB:
[*] ELENA library is updated with the new classes and methods
[*] std / gui / win32 v-property classes are redesigned
[*] removed a number of redundant forward declarations and extensions
[*] ELENA library is refactored to get rid of redundant private methods

ELC:
[*] VMT routine improved optimized
[*] Any handler / mutation routine redesigned, syntax simplified
[*] v-property routine redesigned.
[*] output code optimization: stateless objects treated as constants

IDE:
[*] more user friendly error message if the dot is missing
[-] fixed #00021: the debugger doesn't go to the alternative chain 
    if the v-property expression fails
[-] fixed #00014: match the whole word option in find dialog doesn't work     
[-] fixed: message is not highlighted correctly after digits followed by CR

Samples:
[*] new code added for up'n'down sample

******************************************************************************
                    What's New in 1.4.1
******************************************************************************

ELENA:
[+] new built-in variable $vself introduced to be used in horizontal
    inheritance (extension) cases
[+] new keyword #hint allows to specify the compiler hint.
[+] new #cast statement which allow to broadcast message in a collection
[+] improved syntax for v-property expression
[+] protected methods (starting with $$)
[*] #switch statement may work now with dynamic arrays as well
[!] this and $this built-in variable are obsolete now. 

LIB:
[*] Removed a lot of redundant forwards
[*] Removed a lot of redundant factory classes

ELC:
[+] new project file section - namespaces - allow to declare forward namespaces
[-] fixed bug with $vself in #annex / #switch expressions
[-] fixed the critical bug in the garbage collection routine
[-] fixes several minor bugs
[-] fixed #00020: non-existing v-property generates confusing error (error 121, 
    with invalid line and column info)
[-] fixed #00009: redirect / any handler routine works incorrectly if it's 
    declared in the base class

IDE:
[-] fixed #00005: code stops at the breakpoint even after it was removed sometimes
[-] fixed #00018: bug in window list sub menu (several windows with the 
    same number 9.)
[-] fixed #00012: saving the last opened folder works incorrectly
[-] fixed the bug with hanging on uncomment operation
[-] fixed #00016: when you press ctrl+shift+k at the last document line IDE hangs on.
[-] fixed #00011: line 'program'input writeTo:a writeTo:b is not highlighted correctly

Samples:
[*] the sample code is refactored
[*] new code added for upndown sample
[-] fixed several minor bugs in words sample
[-] fixed several minor bugs in textview sample

Misc:
[!] ELENA API and documentation are out of date

******************************************************************************
                    What's New in 1.4.0
******************************************************************************

ELENA:
[+] new keyword #annex and #switch which are used for 'horizontal' inheritance
[+] new keyword #case to be used in code branch expresions
[+] it is possible to specify the inline class / collection base class
    with keyword #class<base-class> { ... } or #class<base-class> (...)
[+] symbol templates introduced 
    (e.g. #symbol<ext'io'Input>"Enter the number" >>'integer)
[+] '=> [...]' is shortcut for '= proceed [...]'
[*] a lot of language syntax improvements and refactoring
[*] expression syntax redesigned and made more consistent
[*] any handler / dynamic mutation routine implementation enhanced
[*] Role implementation routine is optimized
[*] simplified syntax for inline symbol is applied now only for '=>' method
[*] possible to provide reference shortcut instead of full names in base class
    declaration (e.g. #define basic'* = std'basic'*. #class MyInt<basic'intnumber>... )
[*] inline classes class variable are the following:$self, $this, $super to
    distinguish from the normal class variables (self, this, super)

LIB:
[*] complete refactored to implement the concepts of "open architecture"
    and "reduced class interface"

ELC:
[*] executable debug info restructured
[*] the compiler / linker source code is refactored

IDE:
[-] fixed 'the writer index out of range' issue for editor
[-] fixed the bug with highlighting lines containing tab characters

Samples:
[*] complete refactored to implement the concepts of "open architecture"
    and "reduced class interface"

Misc:
[!] ELENA API and documentation are out of date

******************************************************************************
                    What's New in 1.3.1
******************************************************************************

ELENA:
[*] syntax modified to be more laconic
[*] syntax for inline symbols containing only one method is simplified
[*] for an inline symbol a base class could be specified
[+] operator @ is now used for index access instead of 'at' message

LIB:
[+] std'memory: DumpReader and DumpWriter
[*] Ansi strings / controls are not supported
[*] StringBookmark should be used for the operations with string intead of 
    StringOperation
[*] win32 & gui packages are refactored

ELC:
[*] xwide parameter is not supported any more (ELENA supports now only UNICODE 
    strings)

IDE:
[*] several small bug-fixes

Samples:
[*] bsort refactored
[*] replace refactored

******************************************************************************
                    What's New in 1.3.0
******************************************************************************

ELENA:
[*] use $this rather then $self!

LIB:
[+] new package - gui!
[+] number of classes to support UNICODE
[*] ELENA standard library code improved and refactored; several minor 
    bugs fixed

ELC:
[+] ELC supports now UNICODE!
[+] project templates support added!
[*] message sending routine optimized (ca. 1.5 times)
[*] garbage collection critical bugs fixed!
[*] garbage collection refactored and optimized
[*] linkage routine optimized

IDE:
[+] IDE supports now UNICODE!
[+] Type of exception is shown now during the program debugging

UpNDown:
[-] part of functionality commented out because of introducing new
    system paradigm

Misc:
[-] #00001: sg warns on an ambiguous syntax
[-] The documentation and ELENA API help is out of date

******************************************************************************
                    What's New in 1.2.5
******************************************************************************

ELENA:
[+] Operators have a lower parsing order then normal messages;
[+] Concept of weak message introduced;
[+] Concept of default message handler introduced;
[+] new keywords #redirect added;
[*] ? and ! are weak messages now;
[*] #define keyword now used to shortcut long module names;

LIB:
[-] #00003: ClickEvent is not raised for buttons on a panel;
[+] winsock package supports TCP/IP stream sockets;
[+] Control supports Enable property now;
[+] win32'api'constants containing WinAPI constants added;
[+] std'collections'Circle class added
[+] ext'utilities module added
[*] number of small bug fixes
[*] event handling routines refactored;
[*] AnsiLiteral is compatible now with ASCIIZ string;
[*] win32'primitives module renamed to win32'api;

ELC:

IDE:
[-] #00002: IDE debugger not recognized class inherited roles
[+] new short-cut: Ctrl+K - block comment;
[+] new short-cut: Ctrl+Shift+K - block uncomment;
[*] Debug context window does not slow down IDE now;
[*] project config setting "watchdeeplevel" is obsolete;
[*] reaction to pressing tab modified;
[*] block comment / uncomment routine improved
[*] block indent / unindent routine improved

Samples:
[*] Calculator samples support brackets;

UpNDown:
[+] Connect dialog window added;

Misc:
[*] ELENA API modified and up to date

******************************************************************************
                    What's New in 1.2.0
******************************************************************************

ELENA:
[+] changeable object behavior routine implemented (SHIFT technology)
[+] new keywords #inline, #shift, #role added 
[+] new built-in variable $param
[*] lambda-expression syntax modified 
[*] class declaration syntax modified
[*] inline class declaration syntax modified
[*] external reference syntax modified

LIB:
[+] Combobox control added
[+] TextFileReader / TextFileWriter / TextFileFactory are added
[+] Win32 Controls handle Tab pressing
[*] standard library refactored and expanded

ELC:
[+] coder source code refactored
[+] creates sub folders during the project compilation
[*] GC code refactored and some improvements made
[*] external routines refactored

IDE:
[-] breakpoint is now visible right after pressing F5
[-] Context menu fixed
[+] Editor - Comment / Uncomment menu options
[+] Editor - Indent / Outdent menu options
[+] Syntax highlighting works correctly after large changes
[+] Empty line is selected visually
[*] some small improvements / bug fixes

Samples:
[+] TextFile sample added
[*] samples refactored

UpNDown:
[*] Connector form added

Misc:
[-] critical error in ASM2BINX!

******************************************************************************
                    What's New in 1.1.0
******************************************************************************

ELENA:
[*] external reference syntax modified
[+] $self keyword added

LIB:
[*] STD, SYS, EXT, WIN32 are refactored
[+] new controls added:RadioButton, RadioButtonGroup, StaticLabel, StaticFrame

ELC:
[*] external reference implementation modified
[*] some code refactored to simplified it
[*] 'warn on unresolved references' fixed

IDE:
[-] fixed the bug with 'Erase Line' functionality
[-] Find option Match word doesn't work
[-] fixed the bug with unclosed handles after the compilation / debugging
[-] fixed the bug with saving new file
[-] fixed the bug with Forward option
[-] fixed incorrectly working 'show as hexadecimal' context menu 
[+] CTRL+D - duplicate line short cut added
[-] fixed the bug during the scrolling the text starting with a tab character
[-] single file can be saved without asking to save the project at first
[-] debugger message "Operation failed" is now sent when the operation fails
[+] If the program is finished due to failed unhandled message the message 
    'Program broken' is used instead of standard one
[-] messages are highlighted correctly
[-] breakpoint mark on margin in now seen when the debugger highlights this line

Samples:
[*] Replace sample refactored

UpNDown:
[+] new sample:Card game - UpNDown is a sub project started to investigate
    the compiler / language behavior for the "large" projects

Misc:
[*] API is modified to reflect the protocol based approach

******************************************************************************
                    What's New in 1.0.8
******************************************************************************

ELENA:
[*] on an object creation the message new is sent with the object creator as 
    a parameter instead of nil    

LIB:
[*] win32 package refactored to satisfy ELENA Programming paradigm
[*] std package refactored to satisfy ELENA Programming paradigm
[+] std'prototypes module is added
[+] sys packages is added

ELC:

IDE:
[+] Tools - Editor Options - Tab size option
[+] Tools - Editor Options - Use Tab character
[-] after changing 'show line number' screen is refreshed now
[-] Dialogs are now shown in modal mode
[-] after 'show line number' mode is changed horizontal scrolling works
    now correctly    
[*] IDE source code refactored and added number of small enhancements

******************************************************************************
                    What's New in 1.0.5
******************************************************************************

ELENA:
[+] new keyword #external
[-] fixed the problem with alternative chains and sub blocks

LIB:
[+] new modules: std'matrix, std'arrays
[*] std package refactored
[*] ext package refactored
[+] new package sys is added implementing application architecture patterns

ELC:
[-] fixed the bug with duplicating reference warning

IDE:
[+] new short-cut: Ctrl+Shift+f5 - clear all breakpoints
[*] Save All now saves only modified files
[-] fixed the bug with clear history menu option

Samples:
[*] Calculator sample is rewritten

******************************************************************************
                    What's New in 1.0.1
******************************************************************************

ELENA:
[*] some minor optimization of output code
[-] bug with inheriting VMT flags (elStructureRole)

WIN32:
[-] some major bugs fixed
[+] bitmap loading /drawing routines
  
ELC:
[*] fixed the problem with dll name without extension
[*] fixed the problem with an array of inline objects

IDE:
[*] Trim whitespace routine is enhanced
[+] number of small enhancements
[-] fixed the problem with pressing ctrl+right arrow at the last text position
[-] fixed the problem with a horizontal scrolling
[-] the debuggee file is now started in the correct folder 
[-] fixed the bug:Help - API menu option doesn't work

Misc:
[*] API documentation rewritten

******************************************************************************
                     What's New in 1.0.0 (1st release candidate)
******************************************************************************

ELENA:
[!] nil symbol is obsolete. 'nil forward symbol should be used instead of it.
[+] An exception is raised if the program memory is out

STD:
[+] functionality of basic classes is extended
[+] std'basic'Array class
[+] std'patterns'Any symbol
  
IDE:
[*] a lot of small enhancements
[*] property message is highlighted now correctly
[*] Debugger auto watch functionality is enhanced
[*] "Clear all breakpoints" works now

Samples:
[+]  BSORT sample is added

Misc:
[+] ASM2BINX - simplified assembler compiler

******************************************************************************
                              What's New in 0.9.9 (beta)
******************************************************************************

ELENA:
[*] If assigning expression is broken the block code fails now

STD:
[*] language grammar is redesigned!
[*] Std and Win32 packages is refactored!
[!] #pattern statement is obsolete
[*] standard library refactored
[+] std'pattern module added
[+] std'collection module added
[+] ext package added
  
ELC:
[*] several major bug fixes and improvements
[+] if no parameters are specified shows the help
[+] new compiler option to warn about unresolved references during compilation
[*] the output code is optimized on size
[*] x86Coder is modified

IDE:
[*] fixed a lot of small bugs
[+] the program asked to include the newly created file into the project
[-] fixed the bug with copying the selected text into the clipboard
[-] duplicated links in the recent file history
[+] new project setting: "warn about unresolved references"
[+] save the current ide settings
[+] HELP - ELENA API menu option added
[+] New shortkey Ctrl+Shift+W to activate context browser added
[+] Splitters between frames are added
[+] Search - Replace menu option added
[+] fixed the bug with unclosed file handle
[+] HELP - About menu option added 
[+] Edit - Select All menu option added 
[+] Edit - Trim whitespace menu option added 
[+] Edit - Erase line menu option added 
[+] File - Close All menu option added
[+] View - Compiler output menu option added
[+] File - Recent Files - Clear history menu option added
[+] File - Recent Projects - Clear history menu option added
[+] Project - Clean up menu option added

Samples:
[*] CALC & CALGUI samples are redesigned!
[+] Word sample is added
[+] Sum sample is added
[+] Replace sample is added
[+] BSort sample is added

Misc:
[+] vc & codeblocks project are supported
[+] the project folder structure redesigned
[+] the documentation and tutorial is now up to date

******************************************************************************
                              What's New in 0.9.8 (beta)
******************************************************************************

STD:
[+] critical bug fixes (especially in GC implementation for Win32 applications)
[*] Std and Win32 packages refactored
[+] std'basic'Real
[+] #define statement
[+] #pattern statement
[+] floating-point numeric literal
[*] language grammar is redesigned
  
ELC:
[*] several major bug fixes and improvements

IDE:
[+] The debugger in a separate thread
[+] Command line option -sclassic to set classic color scheme
[+] Find / Find next menu options
[+] a lot of bug fixes
[*] Debugger Context Browser
[+] Recent file / projects menu option

Samples:
[+] ELCIV sample (Another clone of Civilization which will be written completely in ELENA)
[+] CALC & CALGUI samples is modified to deal with real numbers

******************************************************************************
                              What's New in 0.9.7 (beta)
******************************************************************************

STD:
[*] Std package refactored
  
ELC:
[+] ELENA programs support now both character-mode and graphical user interfaces!!
[*] Fixed several bugs in GC implementation.

IDE:
[+] Fix the bug when the program is hanging up after pressing Ctrl+Z
[+] Project - Forwards menu options is added
[+] Project - Include / Exclude menu options is added
[+] Source breakpoints
[+] Context menu
[+] Window - Windows menu option is added
[+] Support several color schemes: default and classic (Tools - Editor Options...)
[+] Line numbers could be displayed on the editor margin (Tools - Editor Options...)

Samples:
[*] Calculator sample refactored
[+] GUI Calculator sample demonstrating an ELENA program with GUI is added

******************************************************************************
                              What's New in 0.9.6 (beta)
******************************************************************************

STD:
[*] Source code completely refactored to promote none-branching code. 
[+] Hexadecimal constants is supported now
  
ELC:
[*] all the paths in the project configuration path are relative now
[+] some major bug fixes

IDE:
[+] A lot of minor enhancement
[+] "Go to line" menu option is added
[+] "Save as" menu option is added
[+] "Window" sub menu is added
[*] Mouse support enhanced
[+] A line where an error was found is highlighted now
[+] Debugger displays primitive type content
[+] Ctrl + Arrow Keys are supported
[+] 'Output Path' setting is added to Project Settings Dialog

Samples:
[*] Sample CALC is rewritten and extended
[*] Getting Started Manual is enhanced

Misc:
[!] The whole project structure is changed. All source codes are placed in "elenasrc" folder
    Examples (helloword and calculator) in "examples" and Standard library source code
    in "source"

******************************************************************************
                              What's New in 0.9.5 (beta)
******************************************************************************

ELENA:
[+] CALC sample modified
  
STD:
[+] some major bugs fixed
  
ELC:
[+] fixed a bug in $elena'@clone function implementation
[+] fixed a bug in assigning within sub expression
[+] literals now behave like ordinary objects

IDE:
[+] Undo / Redo functionality
[+] Mouse Wheel supported
[+] IDE look enhanced
[+] Syntax highlighting
[+] Program reset menu option
[+] Some minor bugs fixed

Misc:
[+] the second part of Getting Started manual is modified (see <app>\doc\manual.html)
[+] ELENA API hyperlinks now work in FireFox browser

******************************************************************************
                              What's New in 0.9.4 (pre beta)
******************************************************************************

STD:
[+] Completely refactored
[-] Problem with sending messages to Nil
  
ELC:
[+] Some major bugs fixed

IDE:
[!] the old console IDE is now obsolete
[+] the graphical IDE is introduced (see <app>\binn\elide.exe)

Misc:
[+] Hyperactive ELENA API documentation (see <app>\doc\api\*.html)
[+] the second part of Getting Started manual is added (see <app>\doc\manual.html)


******************************************************************************
                              What's New in 0.9.2 (late alpha)
******************************************************************************

ELENA:
[+] package entity is introduced
  
STD:
[+] sample1 example added
  
ELC:
[+] configuration file supported

IDE:
[+] configuration file supported
[*] code refactored

Misc:
[+] readme & whatsnew files introduced
[+] getting started manual introduced
[*] API help is up to date



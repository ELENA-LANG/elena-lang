------                                
In development:
------         

  [development]
    ### EPIC: elena 6.0 - redux ###
    === Iteration 18 ===
    [!] rest of files / console samples / rosetta code samples
    [!] api functionality for existing classes : rest of system

    * elt : execute an operation and print the result
    * elt : 2+3, "hello", "workd".insert(0, "hello ")
    * elt : print a number : printLine
    * elt : print a string : printLine
    * elt - exception handler
    * test elt : https://www.reddit.com/r/elena_lang/comments/hyst7t/elena_51_run_elena_code_without_build/
    * sm : generate some basic templates from vm console - hello world sample
    * elenavm : implementing loadDispatcherOverloadlist
    * elenavm : preloaded symbol, support preloaded symbols : dynamic
    * elenavm : loading preloaded symbols for newly loaded modules

    * examples : rosetta code sample : Interactive programming (repl)
    * #15 : return double / long from external function
    * repeate-until statements
    * examples : rosetta code sample : J
    * script and db samples

    * examples : rosetta code sample : K
    * examples : calc - doesn't work
    * examples : p2, random 
    * examples : datetime
    * examples : replace, trans 
    * examples : textdb, textfile 
    * examples : collatz, matrix
    * examples : test all samples for win x86
    * examples : rosetta code Anagrams, Hailstone sequence, Happy numbers
    * examples : migrate all rosetta examples from examples/rosetta to examples60 and remove them
    * #195 : implementing rosetta code samples
    * examples : tutorials
    * test : https://www.reddit.com/r/elena_lang/comments/7oa098/dynamic_programming_in_elena_call_your_code_from/
    * test : https://www.reddit.com/r/elena_lang/comments/7o3s8b/dynamic_programming_in_elena_evaluating_a_code_in/
    * test : https://www.reddit.com/r/elena_lang/comments/7o1zvq/dynamic_programming_in_elena_conditional/
    * test : https://www.reddit.com/r/elena_lang/comments/7nmib6/dynamic_programming_in_elena_bf_loop/

    * system'MessageName : port / test functionality
    * review system warnings
    * review extensions warnings
    * migrate the rest of system (win32_pointers.l)
    * api : uncomment ExtensionDispatcher and SymbolCollection

    * new unit test : dispatchmr (both function and normal one)
    * test binary file reader / writer
    + test finally block with locally allocated variables
    * test if with unknown object

    * ldoc : generates html files for non-existing namespace (system-routines-system-summary.html)
    * ldoc : provide field descriptions
    * ldoc : see #618

    * asmc : raise an error if the label was not resolved

    * byrefHandler : if it is not contain the explicit return, assign self to byref retVal
    * closure should be sealed
    * boolean operators : &&, ||, ^^ - weak implementation
    * nested class cannot have static methods
    * inside the method, "$name __decl" should return the method full name?
    * constructor - single dispatcher
    * ncopy / lcopy
    * static symbol should be thread-safe
    * module template - to include basic import statement
    * module template - probably should include meta dictionary for attributes / types / ...
    * generic extension - should the output type be set? 
    * do load self for expression with ret statement

    * inno setup : x86, x86-64

    * elenavm : implementing rest of dll api

    === Iteration 19 ===
    [!] x86 mta support
    [!] elt tutorial (stand-alone / in IDE)
    [!] https://github.com/ELENA-LANG/elena-lang/wiki/ELENA-in-a-nutshell
    [!] tutorial : Multiple inheritance in ELENA
    [!] pi sample optimization (under 9sec)
    [!] review #622, #620
    * corex : tests - lock test, GC test, printing in one thread / calling GC in another
    * amd64 : implement system 5
    * test all samples for win x86-64
    * optimize Amicable pairs
    * optimize: pi sample (<8 secs)
    * optimize: if (nil == name) {} else {}
    * optimize: if (a == b) {} else {}
    * retro : is CONVERSION_MESSAGE flag is really required?
    * for windows x86-64 allocate shadow memory
    * isCompatble - cache the results
    * for linux amd64 allocate shadow memory
    * mt : note on creating closure - lock GC

    === Iteration 20 ===
    [!] elenavm x64 dll
    [!] elenavm x64 : script executing
    [!] vm terminal x64
    [!] ide vm console x64
    [!] support mta_gui, vm_mta_console
    * review ppc64le - find a better solution to deal with n16_lo > 07FFFFh (see cmpn)

    === Iteration 21 ===

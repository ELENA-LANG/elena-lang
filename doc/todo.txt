------                                
In development:
------         

[development]
  ### EPIC: elena 6.8 ###

  === Iteration 41 (25.5) ===
  --------------------------------------
  dev: 
  - #743
  - MTA support for Linux : support MT routines in elenart
  - #708 : compile the project (elc, og, sg, asm, ecv), compile library, compile executable, test executable  
  - upndown (connector - cmdSearch)
  - #748 : i386
  - #620 : backlog
  api:
  - api refactoring : main program entry to be called - Program
  - #622 : api backlog
  - #34 : http client : support redirects, put, delete, support patch, head, options, web api  
  ide:  
  - compile in the separate thread  
  - debugger : watch list is not refreshed correctly  (see for example xml); sometimes not all old elements are removed
  - #184 : linux -  open project, new project, save project, save all, close project ...
  - async method - auto watch : self and some variables are not displayed
  maint:
  - test all x86-64 examples
  - review pi performance (must < 6) : realOp.power[3] byte code
  - nillable single dispatcher : use direct reference to nilValue symbol   
  - fix create release script - attach rpm file as well
  samples:
  - optimization : pi (used classes byte code)
  - rosetta code : Program termination, Parallel calculations
  - examples60.linux.prjcol  : find out why vm_helloworld64 is not generated for amd64  
  - rosetta code : moving to 6.7 : (Apply a callback to an array..)
  port:
  - chat sample
  tools:
  - #658 :  debug elena program in VSCode : new thread event, loading source info, step over source
  - vs #2 : elena.tmLanguage.json  
  prom:
  - post an article about records using meta programming
  - weekly posting
  - post what's new in ELENA 6.7
  - adding a text how uninstall ELENA
  - post how to implement comma quibling using elt-cli / textgen
  --------------------------------------
  - api : IntNumber
  - elt : port to linux
  - implement analog of record using meta programming (extensions'records)
  --------------------------------------
  - redesign enum
  --------------------------------------
  * support #for meta statement - must be handled by template 
  * implement the analog of enum
  * migrate ab enum to the new syntax
  * get rid of TemplateType::Enumeration
  --------------------------------------
  * support a template without arguments

  * design support for #for meta statement

  * support unboxing list (e.g. ..member) <- used in the template

  * list of properties / fields
  * equal method
  * MyRecord : record(FirstName,LastName,Age);
  * MyRecord : record(string FirstName = String.Default,string LastName = String.Default,int Age = 0);
  * implement sample
  * implement record
  --------------------------------------

  === Iteration 42 ===
  --------------------------------------
  dev: 
  gen:
  - script : support ++ operator
  - work on REPL (elt), generate project template
  api:
  ide:  
  maint:
  samples:
  port:
  tools:
  prom:
  --------------------------------------
  --------------------------------------
  --------------------------------------

  === Iteration 43 ===
  --------------------------------------
  dev: 
  gen:
  api:
  ide:  
  maint:
  samples:
  port:
  tools:
  prom:
  --------------------------------------
  --------------------------------------
  --------------------------------------

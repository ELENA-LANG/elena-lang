------                                
In development:
------         

[development]
  ### EPIC: elena 6.7 ###

  === Iteration 39 (18.4) ===
  --------------------------------------
  dev: 
      - support fladd, flsub, fldiv, flmul (throu special prefix??)
      - MTA support for Linux  
      - #496
      - #622
      - #708 : compile the project (elc, og, sg, asm, ecv), compile library, compile executable, test executable
      - unit tests for try-catch / try-catch-finally / try-finally      
      - upndown (connector - interaction)
      - support :sizeof
      - conditional compiling
  gen:
      - lpad / elt : declare an extension, parse it and apply to the input
  ide:
      - syntax highlighting : floating point numbers, auto indent
      - async method - auto watch : self and some variables are not displayed
  maint:
      - review simple sample : too many stack is allocated
      - optimization : pi - byte code
      - exception handling in rosetta code sample http (when it is compiled as STA - warn)
      - github actions : `set-output` command is deprecated 
      - test all x86-64 examples
      - unit tests : bt optimization 
      - arrange action for i386 / amd64 linux release  
      - refactoring : move amd64 / x86 specific code from general elf linker files
  api:
      - implement ExtensionMessage.equal
      - api refactoring : main program entry to be called - Program
  port:      
      - x86-64 : net, threading samples
      - rosetta code : moving to 6.6 (test, use Console)
  tools:
      - vs #2 : elena.tmLanguage.json  
      - #658 :  debug elena program in VSCode
  samples:
      - rosetta code : Comma quibbling, Program termination, Parallel calculations
  prom: bi-posting weekly
  --------------------------------------
  - #731
  - execute script : https://www.reddit.com/r/elena_lang/comments/ibblff/run_elena_code_without_build_work_in_progress/
  - API - review / description
  - #658 :  debug elena program in VSCode : launch
  - post how to build project / compile API / compile samples - Windows / Linux
  - optimization : pi - byte code
  --------------------------------------
  * support bt-rules similar to bc-rules
  * modify real_int_op -> the operation code inside - the output address next
  * support rule : 

local_address, saving_stack =0, local_address, saving_stack=1, real_int_op $1
=>
load_long_index, save_long_index $1, local_address, saving_stack, x_real_int_op;

  * review pi main program byte code
  --------------------------------------

  === Iteration 40 ===
  --------------------------------------
  dev: 
  - #620
  - #34 : http client : support redirects, post, put, patch, delete, head, options, trace), web api
  - MTA support for Linux (fix simple program - access to TLS)
  gen:
  ide:
  - #184 : linux -  open project, new project, save project, save all, close project ...
  maint:
  - remove old scripts from build folder
  - optimization : pi (used classes byte code)
  port:
      - chat sample
  prom:
  --------------------------------------
  --------------------------------------
  --------------------------------------

  ### EPIC: elena 6.8 ###

  === Iteration 41 ===
  --------------------------------------
  dev: 
  gen:
  maint:
      - review pi performance (must < 6)
  port:
  prom:
  --------------------------------------
  --------------------------------------
  --------------------------------------

  === Iteration 42 ===
  --------------------------------------
  dev: 
  gen:
  maint:
  port:
  prom:
  --------------------------------------
  --------------------------------------
  --------------------------------------

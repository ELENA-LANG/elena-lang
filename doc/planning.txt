arrays:

#class(stringof:1) BaseByteArray
{
}

#class(stringof:byte) BaseByteArray
{
}

//---------------------



make possible something like type[]


dynamic, static


#class(stringof:1) BaseByteArray
{
}

#class(dynamic) BaseArray
{
}


//---


#class BaseArray
{
   #field(arrayof)theArray.
}


============================

actors
======

serialize / deserialize

#subject FirstName.
#subject LastName.
#subject MiddleName.


#class MyDTO
{
   #field theFirstName.
   #field theLastName.
   #field theMiddleName.

   #method set &FirstName:aValue [ theFirstName := aValue. ]

   #method FirstName = theFirstName.

   #method set &LastName : aValue [ theLastName := aValue. ]

   #method LastName = theLastName.

   #method set &MiddleName:aValue [ theMiddleName := aValue. ]

   #method MiddleName = theMiddleName.
}

#var aDTO := MyDTO new set &FirstName:aFirstName set &LastName:aLastName set &MiddleName:aMiddleName.


// ---

#var aStruct := Struct(%FirstName, aFirstName, %LastName, aLastName, %MiddleName, aMiddleName).

// Could we provide a way to automaticlly get a struct from DTO?
import cellular;

//const int maxX = 48;
//const int maxY = 28;

sealed class Model
{
   Space   _space;
   RuleSet _ruleSet;
   bool    _started;

//   event Func<Space, object> OnUpdate;
//    
//   constructor newRandomset(RuleSet transformSet)
//   {
//      _space := IntMatrixSpace.allocate(maxY, maxX, randomSet);
//
//      _ruleSet := transformSet;
//        
//      _started := false
//   }
//    
//   constructor newLoaded(RuleSet initSet, RuleSet transformSet)
//   {
//      _space := IntMatrixSpace.allocate(maxY, maxX, initSet);
//                        
//      _ruleSet := transformSet;
//        
//      _started := false
//   }
//    
//   private onUpdate()
//   {
//      OnUpdate.?(theSpace)
//   }
//    
//   run()
//   {
//      if (started)
//      { 
//            theSpace.update(theRuleSet) 
//      }
//      else
//      {
//            started := true
//      };
//        
//      self.onUpdate()
//   }
}

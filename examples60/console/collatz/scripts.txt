Version 1
=============
function altcol(x)
clc, close all
% Load auxilliary anonymous functions
hR=@(x,y,z)(x-z)*y+z;
hL=@(x,y,z,w)(1-y)*(x-z) + w;
Id=@(x)mod(x,2);
f=@(x)x/2;
g=@(x)3*x+1;
% Simple branching
disp('Execute branches independently w. half morphism')
y = f( hR(x, 1-Id(x), 0) );
disp(['1st branch: mod: ', num2str(Id(x)),' out: ', num2str(y)])
y = g( hR(x, Id(x), -1/3) );
disp(['2nd branch: mod: ',num2str(Id(x)),' out: ', num2str(y)])
disp '  '
% Branching w. safety value return (restore original)
disp('Execute branches independently w. full morphism')
y = hL( x, 1-Id(x), 0, f( hR(x, 1-Id(x), 0) ) );
disp(['1st branch: mod:  ', num2str(Id(x)),' out: ', num2str(y)])
y = hL( x, Id(x), 0, g( hR(x, Id(x), -1/3) ) );
disp(['2nd branch: mod: ', num2str(Id(x)),' out: ',  num2str(y)])
disp '  '
% All together
disp('Execute combined morphism')
y = hL( x, 1-Id(x), 0, f( hR(x, 1-Id(x), 0) ) );
z = hL( y, Id(x), 0, g( hR(y, Id(x), -1/3) ) );
disp(['Final out: ', num2str(z), ' Correct should be ', num2str( col(x) )])
end

function x = col(x)
if ~mod(x,2)
	x = x/2;
else
	x = 3*x+1;
 end
end

Version 2 (Single morphism)
=====================
function altcolsingle(x)
clc, close all
% Load auxilliary anonymous functions
h=@(x,y,z,w)y*(x-z) + w;
Id=@(x)mod(x,2);
f=@(x)x/2;
g=@(x)3*x+1;
% Simple branching
disp('Execute branches independently w. half morphism')
y = f( h(x, 1-Id(x), 0, 0) );
disp(['1st branch: mod: ', num2str(Id(x)),' out: ', num2str(y)])
y = g( h(x, Id(x), -1/3, -1/3) );
disp(['2nd branch: mod: ',num2str(Id(x)),' out: ', num2str(y)])
disp '  '
% Branching w. safety value return (restore original)
disp('Execute branches independently w. full morphism')
y = h( x, Id(x), 0, f( h(x, 1-Id(x), 0, 0) ) );
disp(['1st branch: mod:  ', num2str(Id(x)),' out: ', num2str(y)])
y = h( x, 1-Id(x), 0, g( h(x, Id(x), -1/3, -1/3) ) );
disp(['2nd branch: mod: ', num2str(Id(x)),' out: ',  num2str(y)])
disp '  '
% All together
disp('Execute combined morphism')
y = h( x, Id(x), 0, f( h(x, 1-Id(x), 0, 0) ) );
z = h( y, 1-Id(x), 0, g( h(y, Id(x), -1/3, -1/3) ) );
disp(['Final out: ', num2str(z), ' Correct should be ', num2str( col(x) )])
end

function x = col(x)
if ~mod(x,2)
	x = x/2;
else
	x = 3*x+1;
 end
end
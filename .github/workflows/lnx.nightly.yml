# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Linux Nightly Build

on:
  schedule:
    - cron: '0 4 * * *'  # Run once per day
  workflow_dispatch: # Put here!!

permissions: write-all

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04]
        platform: [amd64]
 
    steps:
    - uses: actions/checkout@v4

    - name: Set version
      run: |
        VER=$(cat VERSION)
        echo "BUILD_TAG=$VER" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get install build-essential gcc-multilib g++-multilib alien dpkg-dev debhelper

    - name: Build
      run: make all_${{ matrix.platform }}

    - name: Generate Data / API
      run: |
        cd scripts/${{ matrix.platform }}
        sudo ./local_build_package_${{ matrix.platform }}.script 

    - name: Run functional test
      run: |
        cd scripts/${{ matrix.platform }}
        ./local_runtests.script

    - name: Create a package
      run: |
        cd scripts/${{ matrix.platform }}
        sudo ./local_create_package.script
          
    - name: Delete old release assets
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ github.token }}
        tag: nightly
        assets: '*amd64-linux.deb'
        fail-if-no-assets : false

    - name: Upload Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: nightly
        draft: false
        prerelease: true
        files: |
          ./build/*.deb

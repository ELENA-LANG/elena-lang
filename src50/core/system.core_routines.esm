//        ELENA Language 5.0
//      inline system library

// ; external methods

procedure __object."#dispatch[1]"

  bsredirect  

  open     4
  reserve  2
  savesi   3
  pushs   -3
  pusha
  movr     class : system'Message
  pushr    class : system'MethodNotFoundException
  storesi  5
  peeksi   0
  pushr    mssgconst : "new[3]"

  throw

end

procedure __object.equal[2]

  peeksi 1
  pushsi 2
  equal
  select const : false const : true
  freei  1
  quitn  2
  
end

procedure __literal."readLengthTo$system@String$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  len
  dec 1
  peeksi 2
  save
  quitn 2

end

procedure __literal."copy$system@String$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : subcopyz
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __literal."copy$system@String$system@IntNumber$system@IntNumber$system@String[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : subcopyz
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __literal."copy$system@String$system@String[2]"

  pushsi 2
  peeksi 2
  clone
  freei 1
  quitn 2

end

procedure __literal."equal$system@String[2]"

  pushsi 2
  pushsi 2
  callextr api : sequal
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __literal."less$system@String[2]"

  pushsi 2
  pushsi 2
  callextr api : sless
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __literal."read$system@IntNumber$@system@ref#1&system@CharValue[3]"

  pusha
  len
  pushd
  peeksi 4
  load
  movs 0
  notless labErr
  lessn   labErr 0

  pushsi 4
  pushsi 2
  callextr api : strtochar
  ifr labErr 0
  freei 4
  peeksi 3
  save
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[3]"
  throw

end

procedure __literal."add$system@String[2]"

  open     5
  reserve  3

  len
  movf    -2
  dec      1
  save
  movf    -3
  save
  peekfi  -8
  len
  movf    -4
  save
  addf    -2

  pushf    -2
  createn  class : system'String 1
  pusha

  pushn    0
  pushf   -3
  pushs   -1
  pushfi  -7
  pushsi   4
  callextr api : insert
  freei    5

  pushf    -4
  pushf    -3
  pushfi   -8
  pushsi   3
  callextr api : insert
  freei    4
  popa

  restore  5
  close

  quitn 2

end                                                

procedure __literal."indexOf$system@IntNumber$system@String$@system@ref#1&system@IntNumber[4]"

  pushsi 2
  pushsi 4
  pushsi 3
  callextr api : sseek
  freei  3
  peeksi 4
  save
  quitn 4

end

procedure __literal."indexOf$system@IntNumber$system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushn  0
  pushn  0
  movs   0
  pusha
  pushsi 6
  callextr api : chartostr
  freei  2 
  inc    1
  pushn  0
  pushd

  pushsi 6
  pushs -3
  pushsi 7
  callextr api : sseek
  freei  7

  peeksi 4                 // ; load target
  save                     // ; save index
  quitn 4

end

procedure __literal."insert$system@IntNumber$system@String[3]"

  open     5
  reserve  3

  len
  movf    -2
  dec      1
  save
  peekfi  -9
  len
  movf    -4
  save
  addf    -2
  dec      1
  movf    -3
  save

  pushf    -2
  createn  class : system'String 1
  pusha

  // ; copy left side               
  pushn    0
  pushfi  -8
  pushs   -1
  pushfi  -7
  pushsi   4
  callextr api : insert
  freei    5

  // ; insert
  pushf    -4
  pushfi   -8
  pushfi   -9
  pushsi   3
  callextr api : insert
  freei    4

  // ; copy right side    
  peekfi  -8
  load
  addf    -3
           
  pushf   -3
  pushfi  -8
  pushfi  -7
  pushsi   3
  callextr api : sadd
  freei    4

  popa

  restore  5
  close

  quitn 3
  
end

procedure __literal."delete$system@IntNumber$system@IntNumber[3]"

  open     5
  reserve  3

  len
  movf    -2
  save
  peekfi  -9
  load
  subf    -2
  movf    -3
  save

  peekfi  -8
  load
  addf    -3

  pushf    -2
  createn  class : system'String 1
  pusha

  // ; copy left side               
  pushn    0
  pushfi  -8
  pushs   -1
  pushfi  -7
  pushsi   4
  callextr api : insert
  freei    5

  // ; copy right side    
  pushfi  -8
  pushf   -3
  pushfi  -7
  pushsi   3
  callextr api : sadd
  freei    4

  popa

  restore  5
  close

  quitn 3
  
end

procedure __wide."copy$system@WideString$system@IntNumber$system@IntNumber$system@WideString[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : wsubcopyz
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __wide."copy$system@WideString$system@IntNumber$system@IntNumber$@system@Array#1&system@ShortNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : wsubcopyz
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __wide."readLengthTo$system@WideString$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  len
  shr 1
  dec 1
  peeksi 2
  save
  quitn 2

end

procedure __wide."concat$system@WideString$system@WideString$system@IntNumber$system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : winsert
  
  peeksi 0
  freei  4
  quitn  4

end                                                


procedure __wide."copy$system@WideString$system@WideString[2]"

  pushsi 2
  peeksi 2
  clone
  freei 1
  quitn 2

end

procedure __wide."equal$system@WideString[2]"

  pushsi 2
  pushsi 2
  callextr api : wequal
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __wide."less$system@WideString[2]"

  pushsi 2
  pushsi 2
  callextr api : wless
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __wide."read$system@IntNumber$@system@ref#1&system@CharValue[3]"

  pusha
  len
  pushd
  peeksi 4
  load
  movs 0
  notless labErr
  lessn   labErr 0

  pushsi 4
  pushsi 2
  callextr api : wstrtochar
  ifr labErr 0
  freei 4
  peeksi 3
  save
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[3]"
  throw

end

procedure __wide."add$system@WideString[2]"

  open     5
  reserve  3

  len
  shl      1
  movf    -2
  dec      1
  save
  movf    -3
  save
  peekfi  -8
  len
  shl      1
  movf    -4
  save
  addf    -2

  pushf    -2
  createn  class : system'WideString 2
  pusha

  pushn    0
  pushf   -3
  pushs   -1
  pushfi  -7
  pushsi   4
  callextr api : winsert
  freei    5

  pushf    -4
  pushf    -3
  pushfi   -8
  pushsi   3
  callextr api : winsert
  freei    4
  popa

  restore  5
  close

  quitn 2

end                                                

procedure __wide."indexOf$system@IntNumber$system@WideString$@system@ref#1&system@IntNumber[4]"

  pushsi 2
  pushsi 4
  pushsi 3
  callextr api : wseek
  freei  3
  peeksi 4
  save
  quitn 4

end

procedure __wide."indexOf$system@IntNumber$system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushn  0
  pushn  0
  movs   0
  pusha
  pushsi 6
  callextr api : chartowstr
  freei  2 
  inc    1
  pushn  0
  pushd

  pushsi 6
  pushs -3
  pushsi 7
  callextr api : wseek
  freei  7

  peeksi 4                 // ; load target
  save                     // ; save index
  quitn 4

end

procedure __wide."insert$system@IntNumber$system@WideString[3]"

  open     5
  reserve  3

  len
  shr      1
  movf    -2
  dec      1
  save
  peekfi  -9
  len
  shr      1
  movf    -4
  save
  addf    -2
  dec      1
  movf    -3
  save

  pushf    -2
  createn  class : system'WideString 2
  pusha

  // ; copy left side               
  pushn    0
  pushfi  -8
  pushs   -1
  pushfi  -7
  pushsi   4
  callextr api : winsert
  freei    5

  // ; insert
  pushf    -4
  pushfi   -8
  pushfi   -9
  pushsi   3
  callextr api : winsert
  freei    4

  // ; copy right side    
  peekfi  -8
  load
  addf    -3
           
  pushf   -3
  pushfi  -8
  pushfi  -7
  pushsi   3
  callextr api : wadd
  freei    4

  popa

  restore  5
  close

  quitn 3
  
end

procedure __wide."delete$system@IntNumber$system@IntNumber[3]"

  open     5
  reserve  3

  len
  shr      1
  movf    -2
  save
  peekfi  -9
  load
  subf    -2
  movf    -3
  save

  peekfi  -8
  load
  addf    -3

  pushf    -2
  createn  class : system'String 1
  pusha

  // ; copy left side               
  pushn    0
  pushfi  -8
  pushs   -1
  pushfi  -7
  pushsi   4
  callextr api : winsert
  freei    5

  // ; copy right side    
  pushfi  -8
  pushf   -3
  pushfi  -7
  pushsi   3
  callextr api : wadd
  freei    4

  popa

  restore  5
  close

  quitn 3
  
end

procedure __wideconvertor."convert$system@String$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  pushsi 1
  pushsi 3
  callextr api : strtowstr
  freei 2
  peeksi 3
  save
  quitn 3

end

procedure __wideconvertor."convert$system@CharValue$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  peeksi 1
  load
  ifn labEmpty 0

  pushsi 2
  pushsi 2
  callextr api : chartowstr
  freei 2
  peeksi 3
  save
  quitn 3

labEmpty:
  movn 0
  peeksi 3
  save
  quitn 3

end

procedure __literalconvertor."convert$system@WideString$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  pushsi 1
  pushsi 3
  callextr api : wstrtostr
  freei 2
  peeksi 3
  save
  quitn 3

end

procedure __literalconvertor."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttostr
  freei 3

  peeksi 4
  save

  quitn 4

end


procedure __literalconvertor."convert$system@LongNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3
  
  callextr api : longtostr

  peeksi 4
  save

  quitn 4


end

procedure __literalconvertor."convert$system@UIntNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3
  
  callextr api : uinttostr
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __literalconvertor."convert$system@ShortNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttostr
  freei 3

  peeksi 4
  save

  quitn 4

end


procedure __literalconvertor."convert$system@ByteNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttostr
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __literalconvertor."convert$system@CharValue$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  peeksi 1                                                       
  load
  ifn labEmpty 0

  pushsi 2
  pushsi 2
  callextr api : chartostr
  freei 2

  peeksi 3
  save
  quitn 3
  
labEmpty:
  movn 0
  peeksi 3
  save
  quitn 3

end

procedure __args."readLengthTo$@system@ref#1&system@IntNumber[2]"

  movn   0
labSearch:
  peeksi 1
  get
  inc 1
  elser labSearch terminal
  dec 1
  peeksi 2
  save
  quitn 2

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$@system@ref#1&system@ShortNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  lessn   labErr 0
 
  peeksi  2
  load
  peeksi  1
  read
  and     0FFFFh
  peeksi  3
  save

  quitn   3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[3]"
  throw  

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$@system@ref#1&system@IntNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  lessn   labErr 0

  peeksi  2
  load
  peeksi  1
  read
  peeksi  3
  save

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[3]"
  throw  

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$@system@ref#1&system@CharValue[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  lessn   labErr 0

  peeksi  2
  load
  peeksi  1
  read
  peeksi  3
  save

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[3]"
  throw  

end

procedure __intconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@IntNumber[3]"

  pushsi 2
  pushsi 2  
  callextr api : strtoint
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __intconvertor."convertUnsigned$system@String$system@IntNumber$@system@ref#1&system@IntNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : strtouint
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __intconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@IntNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : wstrtoint
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __intconvertor."convert$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  loadi 1
  lessn labNegative 0  
  elsen labErr 0  

  load
  peeksi 2
  save
  quitn 2  

labNegative:
  elsen labErr 0FFFFFFFFh

  load
  peeksi 2
  save
  quitn 2  

labErr:
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

end

procedure __intconvertor."convert$system@CharValue$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __intconvertor."convert$system@ShortNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __intconvertor."convert$system@ByteNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __intconvertor."convert$system@RealNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  rload
  rget
  peeksi 2  
  save
  peeksi 1
  quitn 2

end

procedure __shortconvertor."convert$system@ByteNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2  

end


procedure __shortconvertor."convert$system@IntNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1

  load
  lessn labNegative 0
  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2
  
labNegative:
  not

  lessn labCopyNeg 8000h

  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    
  
labCopyNeg:
  not
  peeksi 2
  save
  quitn 2  

end

procedure __shortconvertor."convert$system@UIntNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load

  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2

end

procedure __shortconvertor."convert$system@LongNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  loadi 1
  lessn labNegative 0  
  elsen labErr 0  

  load
  lessn labCopy 8000h  
  jump  labErr

labCopy:
  peeksi 2
  save
  quitn 2  

labNegative:
  elsen labErr 0FFFFFFFFh
  load
  not
  lessn labCopyNegative 8000h  

labErr:
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopyNegative:
  load
  peeksi 2
  save
  quitn 2  

end


procedure __shortconvertor."convert$system@RealNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi   1
  open     4
  reserve  2

  rintf    1
  movf     1
  rload
  rget

  restore 4
  close
  
  lessn labErr 0FFFF8000h
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __shortconvertor."convert$system@CharValue$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load
  
  lessn labErr 0  
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __shortconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@ShortNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : strtoint
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __shortconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@ShortNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : wstrtoint
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __byte."readInvertedTo$system@ByteNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  quitn 2
  
end

procedure __short."readInvertedTo$system@ShortNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  quitn 2
  
end

procedure __byteconvertor."convert$system@ShortNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@CharValue$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load
  
  lessn labErr 0  
  lessn labCopy 080h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@IntNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load
  
  lessn labErr 0  
  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@UIntNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load  

  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@LongNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  loadi 1
  elsen labErr 0  

  load

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end


procedure __byteconvertor."convert$system@RealNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi   1
  open     4
  reserve  2

  rintf    1
  movf     1
  rload
  rget

  restore 4
  close

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@ByteNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : strtoint
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __byteconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@ByteNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : wstrtoint
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __int."readInvertedTo$system@IntNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  quitn 2

end

procedure __longconvertor."convert$system@IntNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  lessn labNegative 0
  movn 0
  savei 1
  peeksi 1
  quitn 2

labNegative:
  movn 0FFFFFFFFh
  savei 1
  peeksi 1
  quitn 2

end

procedure __longconvertor."convert$system@UIntNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  movn 0
  savei 1
  quitn 2

end

procedure __longconvertor."convert$system@ShortNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  lessn labNegative 0
  movn 0
  savei 1
  peeksi 1
  quitn 2

labNegative:
  movn 0FFFFFFFFh
  savei 1
  peeksi 1
  quitn 2

end

procedure __longconvertor."convert$system@ByteNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  movn 0
  savei 1
  quitn 2

end

procedure __longconvertor."convert$system@RealNumber$@system@ref#1&system@LongNumber[2]"

  peeksi 1
  rload
  rget
  peeksi 2

  save
  movn 0
  savei 1
  quitn 2

end

procedure __longconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@LongNumber[3]"

  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : strtolong
  freei 3

  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __longconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@LongNumber[3]"

  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : wstrtolong
  freei 3

  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __uintconvertor."convert$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  loadi 1
  elsen labErr 0  

  load
  peeksi 2
  save
  quitn 2  

labErr:
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[0]"
  throw    

end

procedure __long."readInvertedTo$system@LongNumber$@system@ref#1&system@LongNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  peeksi 1
  loadi 1
  peeksi 2
  savei 1
  quitn 2

end

procedure __realconvertor."convert$system@IntNumber$@system@ref#1&system@RealNumber[2]"
  
  peeksi 1
  load
  rset
  peeksi 2
  rsave
  quitn 2

end

procedure __realconvertor."convert$system@ByteNumber$@system@ref#1&system@RealNumber[2]"
  
  peeksi 1
  load
  rset
  peeksi 2
  rsave
  quitn 2

end

procedure __realconvertor."convert$system@ShortNumber$@system@ref#1&system@RealNumber[2]"
  
  peeksi 1
  load
  rset
  peeksi 2
  rsave
  quitn 2

end

procedure __realconvertor."convert$system@LongNumber$@system@ref#1&system@RealNumber[2]"
  
  pushsi 2
  pushsi 2  
  callextr api : longtoreal
  freei 2
  quitn 2

end

procedure __realconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@RealNumber[3]"
  
  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : strtoreal
  freei 3
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __realconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@RealNumber[3]"
  
  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : wstrtoreal
  freei 3
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr mssgconst : "new[0]"
  throw

end

procedure __charconvertor."convert$system@IntNumber$@system@ref#1&system@CharValue[2]"
  
  peeksi 1
  load
  
  lessn labErr 0
  lessn labCopy 110000h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[0]"
  throw  

labCopy:

  peeksi 2
  save
  quitn 2

end

procedure __char."readLengthTo$system@CharValue$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  // ; < 80 - 1
  lessn labEnd 80h
  // ; <= 800 - 2
  lessn labEnd2 800h 
  lessn labEnd3 10000h 
  movn 4
  peeksi 2
  save  
  quitn 2
labEnd:
  movn 1
  peeksi 2
  save  
  quitn 2
labEnd2:
  movn 2
  peeksi 2
  save  
  quitn 2
labEnd3:
  movn 3
  peeksi 2
  save  
  quitn 2

end

// ; system routines

symbol sta_start

  pushr entry : "$forwards'$program"
  pushr api : seh_handler
  pushr api : default_handler
  alloci 1
  loadenv
  savesi 0
  callextr extern : InitializeSTA
  freei 4
  quit

end

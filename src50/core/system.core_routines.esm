//        ELENA Language 5.0
//      inline system library

define ARG_MASK              0000001Fh
define SPECIAL_MESSAGE       00000020h
define VARIADIC_MESSAGE      00000080h
define SPECIAL_MESSAGE_INV  0FFFFFFDFh

define elStructure           00000008h
define elSubject             04000000h
define elMessage             00200000h

// ; external methods

procedure __object."#dispatch[1]"

  bsredirect  

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw

end

procedure __object.equal[2]

  peeksi 1
  pushsi 2
  equal
  select const : false const : true
  freei  1
  quitn  2
  
end

procedure __object."equalReference$system@Object$system@Object[2]"

  peeksi 1
  pushsi 2
  equal
  select const : false const : true
  freei  1
  quitn  2
  
end

procedure __object."__getClass$system@Object[1]"

  peeksi 1
  class
  quitn 1

end

procedure __object."__getParentClass$system@Object[1]"

  peeksi 1
  class
  parent
  quitn  1

end

procedure __object."instanceOf$system@Object$system@Object[2]"

  peeksi  1
  checksi 2
  select  const : false const : true
  quitn   2

end

procedure __object."raise[1]"

  freei 1
  peeksi 0
  throw
  
end

procedure __object."setField$system@Object$system@IntNumber$system@Object[3]"

  peeksi  1
  flag
  and     elStructure
  elsen   labErr 0
  len
  peeksi  2
  notless labErr
  lessn   labErr 0
  load
  peeksi  1
  pushsi  3
  set
  freei   1
  quitn   3

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw
  
end

procedure __object."getField$system@Object$system@IntNumber[2]"

  peeksi  1
  flag
  and     elStructure
  elsen   labErr 0
  len
  peeksi  2
  notless labErr
  lessn   labErr 0
  load
  peeksi  1
  get
  quitn   2

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw
  
end

procedure __object."respondTo$system@Object$system@Message[2]"

  peeksi   2 // ; get message
  load       // ; load message id
  peeksi   1
  mindex
  ifn      labFalse 0FFFFFFFFh
  movr     const : true
  quitn    2

labFalse:
  movr     const : false
  quitn    2

end

procedure __object."readLength$system@Object$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  count
  peeksi 2
  save
  quitn 2

end


procedure __literal."readLengthTo$system@String$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  len
  dec 1
  peeksi 2
  save
  quitn 2

end

procedure __literal."copy$system@String$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : subcopyz 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __literal."copy$system@String$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : s_copychars 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __literal."save$system@IntNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4

  callextr api : strtochararray 4
  
  freei  4
  quitn  4

end

procedure __literal."sizeOf$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : slen_ch 4
  
  freei  4
  quitn  4

end

procedure __literal."copy$system@String$system@IntNumber$system@IntNumber$system@String[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4                                                                                      
  
  callextr api : subcopyz 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __literal."copy$system@String$system@String[2]"

  pushsi 2
  peeksi 2
  clone
  freei 1
  quitn 2

end

procedure __literal."equal$system@String[2]"

  pushsi 2
  pushsi 2
  callextr api : sequal 2
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __literal."less$system@String[2]"

  pushsi 2
  pushsi 2
  callextr api : sless 2
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __literal."read$system@IntNumber$@system@ref#1&system@CharValue[3]"

  pusha
  len
  pushd
  peeksi     4
  load
  movsip     0
  notgreater labErr
  lessn      labErr 0

  pushsi 1
  pushsi 5
  callextr   api : strtochar 2
  ifr        labErr 0
  freei      4
  peeksi     3
  save
  quitn      3

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw

end

procedure __literal."add$system@String[2]"

  open     3
  reserve  12

  len
  movf     -4 
  dec      1
  save
  movf     -8 // ; s1 size
  save
  peekfi   -2
  len
  movf     -12 // ; s2 size
  save
  addf     -4  // ; total size

  pushf    -4
  createn  class : system'String 1
  pusha

  pushn    0   // index

  pushf    -8  
  pushsip  -1  
  pushfi   -1  
  pusha        
  // ; insert(dest,sour,index,size)
  callextr api : insert 4
  freei    5

  pushf    -12
  pushf    -8
  pushfi   -2
  pushsi   3
  // ; insert(dest,sour,index,size)
  callextr api : insert 4
  freei    4
  popa

  restore  12
  close

  quitn    2

end                                                

procedure __literal."indexOf$system@IntNumber$system@String$@system@ref#1&system@IntNumber[4]"

  pushsi 2
  pushsi 4
  pushsi 3
  callextr api : sseek 3
  freei  3
  peeksi 4
  save
  quitn 4

end

procedure __literal."indexOf$system@IntNumber$system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushn    0
  pushn    0
  movsip   0
  pusha
  pushsi   6
  callextr api : chartostr 2
  freei    2 
  inc      1
  pushn    0
  pushd

  pushsi   6
  pushsip  -3
  pushsi   7
  callextr api : sseek 3
  freei    7

  peeksi   4                 // ; load target
  save                     // ; save index
  quitn    4

end

procedure __literal."insert$system@IntNumber$system@String[3]"

  open     3
  reserve  12

  len
  movf     -8
  dec      1
  save
  peekfi   -9
  len
  movf     -12
  save
  addf     -8
  dec      1
  movf     -12
  save

  pushf    -8
  createn  class : system'String 1
  pusha

  // ; copy left side               
  pushn    0
  pushfi   -8
  pushsip  -1
  pushfi   -7
  pushsi   4
  callextr api : insert 4
  freei    5

  // ; insert
  pushf    -16
  pushfi   -8
  pushfi   -9
  pushsi   3
  callextr api : insert 4
  freei    4

  // ; copy right side    
  peekfi   -8
  load
  addf     -12
           
  pushf    -12
  pushfi   -8
  pushfi   -7
  pushsi   3
  callextr api : sadd 4
  freei    4

  popa

  restore  12
  close

  quitn    3
  
end

procedure __literal."delete$system@IntNumber$system@IntNumber[3]"

  open     3
  reserve  12

  // ; -4 - new size
  // ; -8 - index
  // ; -12 - index+len
  len
  movf     -4  // ; src size
  save

  peekfi   -2
  load
  savef    -8

  peekfi   -3
  nsubf    -4
  load
  savef   -12
  movf     -8
  load
  addf    -12

  pushf    -4
  createn  class : system'String 1
  pusha

  // ; copy left side               
  pushn    0   // index

  pushf    -8  
  pushsip  -1  
  pushfi   -1  
  pusha        
  // ; insert(dest,sour,index,size)
  callextr api : insert 4
  freei    5

  // ; copy right side  

  peeksi   0
  pushf    -8
  pushf    -12
  pushfi   -1
  pusha
// ; sadd(dest,sour,sindex,dindex)
  callextr api : sadd 4
  freei    4

  popa

  restore  12
  close

  quitn 3
  
end

procedure __literal."system$$saveToByteArray$system@IntNumber$@system@Array#1&system@ByteNumber$system@IntNumber[4]"

  pushsi 1
  pushsi 5
  pushsi 4
  pushsi 6

  callextr api : subcopyto 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __wide."system$$saveToShortArray$system@IntNumber$@system@Array#1&system@ShortNumber$system@IntNumber[4]"

  pushsi 1
  pushsi 5
  pushsi 4
  pushsi 6

  // ; wsubcopy(target,index,size,arr)
  callextr api : wsubcopyto 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __wide."copy$system@WideString$system@IntNumber$system@IntNumber$system@WideString[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : wsubcopyz 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __wide."copy$system@WideString$system@IntNumber$system@IntNumber$@system@Array#1&system@ShortNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : wsubcopyz 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __wide."readLengthTo$system@WideString$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  len
  shr 1
  dec 1
  peeksi 2
  save
  quitn 2

end

procedure __wide."concat$system@WideString$system@WideString$system@IntNumber$system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : winsert 4
  
  peeksi 0
  freei  4
  quitn  4

end                                                

procedure __wide."copy$system@WideString$system@WideString[2]"

  pushsi 2
  peeksi 2
  clone
  freei 1
  quitn 2

end

procedure __wide."equal$system@WideString[2]"

  pushsi 2
  pushsi 2
  callextr api : wequal 2
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __wide."less$system@WideString[2]"

  pushsi 2
  pushsi 2
  callextr api : wless 2
  freei 2
  select const : false const : true
  quitn 2
  
end

procedure __wide."read$system@IntNumber$@system@ref#1&system@CharValue[3]"

  pusha
  len
  pushd
  peeksi     4
  load
  movsip     0
  notgreater labErr
  lessn      labErr 0

  pushsi     1
  pushsi     5
  callextr   api : wstrtochar 2
  ifr        labErr 0
  freei      4
  peeksi     3
  save
  quitn      3

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw

end

procedure __wide."add$system@WideString[2]"

  open     3
  reserve  12

  len
  shr      1
  movf     -4
  dec      1
  save
  movf     -8 // ; s1 size
  save
  peekfi   -2
  len
  shr      1
  movf     -12
  save
  addf     -4

  pushf    -4
  createn  class : system'WideString 2
  pusha

  pushn    0  // ; index

  pushf    -8
  pushsip  -1
  pushfi   -1
  pusha
  // ; winsert(dest,sour,index,size)
  callextr api : winsert  4
  freei    5

  pushf    -12
  pushf    -8
  pushfi   -2
  pushsi   3
  // ; winsert(dest,sour,index,size)
  callextr api : winsert 4
  freei    4
  popa

  restore  12
  close

  quitn    2

end                                                

procedure __wide."indexOf$system@IntNumber$system@WideString$@system@ref#1&system@IntNumber[4]"

  pushsi 2
  pushsi 4
  pushsi 3
  callextr api : wseek 3
  freei  3
  peeksi 4
  save
  quitn 4

end

procedure __wide."indexOf$system@IntNumber$system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushn    0
  pushn    0
  movsip   0
  pusha
  pushsi   6
  callextr api : chartowstr 2
  freei    2 
  inc      1
  pushn    0
  pushd

  pushsi   6
  pushsip  -3
  pushsi   7
  callextr api : wseek 3
  freei    7

  peeksi   4                 // ; load target
  save                     // ; save index
  quitn    4

end

procedure __wide."insert$system@IntNumber$system@WideString[3]"

  open     3
  reserve  12

  len
  shr      1
  movf     -8
  dec      1
  save
  peekfi   -9
  len
  shr      1
  movf     -16
  save
  addf     -8
  dec      1
  movf     -12
  save

  pushf    -8
  createn  class : system'WideString 2
  pusha

  // ; copy left side               
  pushn    0
  pushfi   -8
  pushsip  -1
  pushfi   -7
  pushsi   4
  callextr api : winsert 4
  freei    5

  // ; insert
  pushf    -16
  pushfi   -8
  pushfi   -9
  pushsi   3
  callextr api : winsert 4
  freei    4

  // ; copy right side    
  peekfi   -8
  load
  addf     -12
           
  pushf    -12
  pushfi   -8
  pushfi   -7
  pushsi   3
  callextr api : wadd 4
  freei    4

  popa

  restore  12
  close

  quitn 3
  
end

procedure __wide."delete$system@IntNumber$system@IntNumber[3]"

  open     3
  reserve  12

  // ; -4 - new size
  // ; -8 - index
  // ; -12 - index+len
  len
  shr      1
  movf     -4  // ; src size
  save

  peekfi   -2
  load
  savef    -8

  peekfi   -3
  nsubf    -4
  load
  savef   -12
  movf     -8
  load
  addf    -12

  pushf    -4
  createn  class : system'WideString 2
  pusha

  // ; copy left side               
  pushn    0   // index

  pushf    -8  
  pushsip  -1  
  pushfi   -1  
  pusha        
  // ; winsert(dest,sour,index,size)
  callextr api : winsert 4
  freei    5

  // ; copy right side    
  peeksi   0
  pushf    -8
  pushf    -12
  pushfi   -1
  pusha
  // ; wadd(dest,sour,sindex,dindex)
  callextr api : wadd 4
  freei    4

  popa
           
  restore  12
  close

  quitn 3
  
end

procedure __wide."save$system@IntNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4

  callextr api : wstrtochararray 4
                
  freei  4
  quitn  4

end

procedure __wide."sizeOf$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : wslen_ch 4
  
  freei  4
  quitn  4

end

procedure __wide."copy$system@WideString$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : ws_copychars 4
  
  peeksi 0
  freei  4
  quitn  4

end

procedure __wideconvertor."convert$system@String$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  pushsi 1
  pushsi 3
  callextr api : strtowstr 2
  freei 2
  peeksi 3
  save
  quitn 3

end

procedure __wideconvertor."convert$system@CharValue$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[3]"

  peeksi 1
  load
  ifn labEmpty 0

  pushsi 2
  pushsi 2
  callextr api : chartowstr 2
  freei 2
  peeksi 3
  save
  quitn 3

labEmpty:
  movn 0
  peeksi 3
  save
  quitn 3

end

procedure __wideconvertor."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttowstr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __wideconvertor."convert$system@ShortNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttowstr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __wideconvertor."convert$system@ByteNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttowstr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __wideconvertor."convert$system@UIntNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : uinttowstr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __wideconvertor."convert$system@LongNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3
  
  callextr api : longtowstr 3
  freei 3

  peeksi 4
  save

  quitn 4
end

procedure __wideconvertor."convert$system@RealNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3
  
  callextr api : realtowstr 3
  freei 3

  peeksi 4
  save

  quitn 4
end

procedure __literalconvertor."convert$system@WideString$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  pushsi 1
  pushsi 3
  callextr api : wstrtostr 2
  freei 2
  peeksi 3
  save
  quitn 3

end

procedure __literalconvertor."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttostr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __literalconvertor."convert$system@RealNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3
  
  callextr api : realtostr 3
  freei 3

  peeksi 4
  save

  quitn 4
end

procedure __literalconvertor."convert$system@LongNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3
  
  callextr api : longtostr 3
  freei 3

  peeksi 4
  save

  quitn 4


end

procedure __literalconvertor."convert$system@UIntNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3
  
  callextr api : uinttostr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __literalconvertor."convert$system@ShortNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttostr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __literalconvertor."convert$system@ByteNumber$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3

  callextr api : inttostr 3
  freei 3

  peeksi 4
  save

  quitn 4

end

procedure __literalconvertor."convert$system@CharValue$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[3]"

  peeksi 1                                                       
  load
  ifn labEmpty 0

  pushsi 2
  pushsi 2
  callextr api : chartostr 2
  freei 2

  peeksi 3
  save
  quitn 3
  
labEmpty:
  movn 0
  peeksi 3
  save
  quitn 3

end

procedure __args."readLengthTo$@system@ref#1&system@IntNumber[2]"

  movn   0
labSearch:
  peeksi 1
  get
  inc 1
  elser labSearch terminal
  dec 1
  peeksi 2
  save
  quitn 2

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$@system@ref#1&system@ShortNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0
 
  peeksi  2
  load
  peeksi  1
  read
  and     0FFFFh
  peeksi  3
  save

  quitn   3
  
labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber[4]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  pushsi 1
  peeksi 4
  pushai 0
  peeksi 4
  pushai 0
  pushsi 7
  // subcopy(target,index,size,arr)
  callextr api : subcopy 4
  quitn 4
  
labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$@system@ref#1&system@ShortNumber[4]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0
 
  peeksi  2
  load
  peeksi  1
  read
  and     0FFFFh
  peeksi  3
  save

  quitn   3
  
labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$@system@ref#1&system@IntNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  peeksi  2
  load
  peeksi  1
  read
  peeksi  3
  save

  quitn 3
  
labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."read$@system@Array#1&system@ByteNumber$system@IntNumber$@system@ref#1&system@CharValue[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  peeksi  2
  load
  peeksi  1
  read
  peeksi  3
  save

  quitn 3
  
labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."write$@system@Array#1&system@ByteNumber$system@IntNumber$system@IntNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  pushsi  3
  peeksi  2
  xwrite  4
  freei   1
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."write$@system@Array#1&system@ByteNumber$system@IntNumber$system@CharValue[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  pushsi  3
  peeksi  2
  xwrite  4
  freei   1
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."write$@system@Array#1&system@ByteNumber$system@IntNumber$system@ShortNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  pushsi  3
  peeksi  2
  xwrite  2
  freei   1
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."write$@system@Array#1&system@ByteNumber$system@IntNumber$system@LongNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  pushsi  3
  peeksi  2
  xwrite  8
  freei   1
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."write$@system@Array#1&system@ByteNumber$system@IntNumber$system@RealNumber[3]"

  peeksi  1
  len
  peeksi  2
  notless labErr
  load
  lessn   labErr 0

  pushsi  3
  peeksi  2
  xwrite  8
  freei   1
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __bytearray."write$@system@Array#1&system@ByteNumber$system@IntNumber$system@IntNumber$@system@Array#1&system@ByteNumber[4]"

  peeksi   1
  len
  peeksi   2
  notless  labErr
  load
  lessn    labErr 0

  //; insert(dest,sour,index,size)
  pushsi   3
  pushsi   3
  pushsi   6
  pushsi   4

  callextr api : insert 4
  freei    4

  quitn    4

labErr:
  open     0
  pushr    class : system'InvalidArgumentException
  pushr    mssgconst : "new[1]"
  throw  

end

procedure __bytearray."move$@system@Array#1&system@ByteNumber$system@IntNumber$system@IntNumber$system@IntNumber[4]"

  pushsi   4
  pushsi   4
  pushsi   4
  pushsi   4

  // ; move(target,index,len,offs)
  callextr api : move 4

  freei    4
  quitn    4
  
end

procedure __intarray."write$@system@Array#1&system@IntNumber$system@IntNumber$system@IntNumber$@system@Array#1&system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : ninsert 4
  ifn labErr 0 

  peeksi 0
  freei  4
  quitn  4

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __chararray."write$@system@Array#1&system@CharValue$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : ninsert 4
  ifn labErr 0 

  peeksi 0
  freei  4
  quitn  4

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

end

procedure __chararray."move$@system@Array#1&system@CharValue$system@IntNumber$system@IntNumber$system@IntNumber[4]"

  pushsi 4
  pushsi 4
  pushsi 4
  pushsi 4
  
  callextr api : nmove 4
  ifn labErr 0 

  peeksi 0
  freei  4
  quitn  4

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  
  
end

procedure __intconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@IntNumber[3]"

  pushsi 2
  pushsi 2  
  callextr api : strtoint 2
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __intconvertor."convertUnsigned$system@String$system@IntNumber$@system@ref#1&system@IntNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : strtouint 2
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __intconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@IntNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : wstrtoint 2
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __intconvertor."convert$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  loadi 1
  lessn labNegative 0  
  elsen labErr 0  

  load
  peeksi 2
  save
  quitn 2  

labNegative:
  elsen labErr 0FFFFFFFFh

  load
  peeksi 2
  save
  quitn 2  

labErr:
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

end

procedure __intconvertor."convert$system@CharValue$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __intconvertor."convert$system@ShortNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __intconvertor."convert$system@ByteNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __intconvertor."convert$system@RealNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  rload
  peeksi 2  
  rsaven
  peeksi 1
  quitn 2

end

procedure __shortconvertor."convert$system@ByteNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2  

end

procedure __shortconvertor."convert$system@IntNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1

  load
  lessn labNegative 0
  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2
  
labNegative:
  not

  lessn labCopyNeg 8000h

  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    
  
labCopyNeg:
  not
  peeksi 2
  save
  quitn 2  

end

procedure __shortconvertor."convert$system@UIntNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load

  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2

end

procedure __shortconvertor."convert$system@LongNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  loadi 1
  lessn labNegative 0  
  elsen labErr 0  

  load
  lessn labCopy 8000h  
  jump  labErr

labCopy:
  peeksi 2
  save
  quitn 2  

labNegative:
  elsen labErr 0FFFFFFFFh
  load
  not
  lessn labCopyNegative 8000h  

labErr:
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopyNegative:
  load
  peeksi 2
  save
  quitn 2  

end

procedure __shortconvertor."convert$system@RealNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi   1
  open     1
  reserve  4

  rintf    4
  movf     4
  rload
  pushn    0
  movsip   0
  rsaven
  popd

  restore  4
  close
  
  lessn    labErr 0FFFF8000h
  lessn    labCopy 08000h

labErr:  
  pushr    class : system'OutOfRangeException
  pushr    mssgconst : "new[1]"
  throw    

labCopy:
  peeksi   2 
  save
  quitn    2  

end

procedure __shortconvertor."convert$system@CharValue$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load
  
  lessn labErr 0  
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __shortconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@ShortNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : strtoint 2
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labExit:
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __shortconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@ShortNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : wstrtoint 2
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labExit:
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __byte."readInvertedTo$system@ByteNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  quitn 2
  
end

procedure __short."readInvertedTo$system@ShortNumber$@system@ref#1&system@ShortNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  quitn 2
  
end

procedure __byteconvertor."convert$system@ShortNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@CharValue$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load
  
  lessn labErr 0  
  lessn labCopy 080h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@IntNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load
  
  lessn labErr 0  
  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@UIntNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  load  

  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@LongNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi 1
  loadi 1
  elsen labErr 0  

  load

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labCopy:
  peeksi 2
  save
  quitn 2  

end

procedure __byteconvertor."convert$system@RealNumber$@system@ref#1&system@ByteNumber[2]"

  peeksi   1
  open     1
  reserve  4

  rintf    4
  movf     4
  rload
  pushn    0
  movsip   0
  rsaven
  popd

  restore  4
  close

  lessn    labErr 0  
  lessn    labCopy 0FFh

labErr:  
  pushr    class : system'OutOfRangeException
  pushr    mssgconst : "new[1]"
  throw    

labCopy:
  peeksi   2
  save
  quitn    2  

end

procedure __byteconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@ByteNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : strtoint 2
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labExit:
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __byteconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@ByteNumber[3]"
  
  pushsi 2
  pushsi 2  
  callextr api : wstrtoint 2
  freei 2

  ifr      labErr 0
  peeksi 3
  save
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw    

labExit:
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __int."readInvertedTo$system@IntNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  quitn 2

end

procedure __int."readHashCodeTo$system@IntNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __int."readHashCodeTo$system@UIntNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __int."readHashCodeTo$system@ByteNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __int."readHashCodeTo$system@ShortNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __int."readHashCodeTo$system@RealNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn  2

end

procedure __int."readHashCodeTo$system@CharValue$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn  2

end

procedure __int."readHashCodeTo$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  peeksi  1
  load
  peeksi  2
  save
  quitn 2

end

procedure __longconvertor."convert$system@IntNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  lessn labNegative 0
  movn 0
  savei 1
  peeksi 1
  quitn 2

labNegative:
  movn 0FFFFFFFFh
  savei 1
  peeksi 1
  quitn 2

end

procedure __longconvertor."convert$system@UIntNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  movn 0
  savei 1
  quitn 2

end

procedure __longconvertor."convert$system@ShortNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  lessn labNegative 0
  movn 0
  savei 1
  peeksi 1
  quitn 2

labNegative:
  movn 0FFFFFFFFh
  savei 1
  peeksi 1
  quitn 2

end

procedure __longconvertor."convert$system@ByteNumber$@system@ref#1&system@LongNumber[2]"
  
  peeksi 1
  load
  peeksi 2
  save
  movn 0
  savei 1
  quitn 2

end

procedure __longconvertor."convert$system@RealNumber$@system@ref#1&system@LongNumber[2]"

  peeksi 1
  rload
  peeksi 2
  rsavel
  quitn 2

end

procedure __longconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@LongNumber[3]"

  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : strtolong 3
  freei 3

  ifr      labErr 0
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __longconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@LongNumber[3]"

  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : wstrtolong 3
  freei 3

  ifr      labErr 0
  quitn    3

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __uintconvertor."convert$system@LongNumber$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  loadi  1
  ifn    labNext 0
  elsen  labErr  0FFFFFFFFh  

labNext:
  load
  peeksi 2
  save
  quitn  2  

labErr:
  pushr  class : system'OutOfRangeException
  pushr  mssgconst : "new[1]"
  throw    

end

procedure __long."readInvertedTo$system@LongNumber$@system@ref#1&system@LongNumber[2]"

  peeksi 1
  load
  not
  peeksi 2
  save
  peeksi 1
  loadi 1
  peeksi 2
  savei 1
  quitn 2

end

procedure __realconvertor."convert$system@IntNumber$@system@ref#1&system@RealNumber[2]"
  
  peeksi 1
  load
  rset
  peeksi 2
  rsave
  quitn 2

end

procedure __realconvertor."convert$system@ByteNumber$@system@ref#1&system@RealNumber[2]"
  
  peeksi 1
  load
  rset
  peeksi 2
  rsave
  quitn 2

end

procedure __realconvertor."convert$system@ShortNumber$@system@ref#1&system@RealNumber[2]"
  
  peeksi 1
  load
  rset
  peeksi 2
  rsave
  quitn 2

end

procedure __realconvertor."convert$system@LongNumber$@system@ref#1&system@RealNumber[2]"
  
  pushsi 2
  pushsi 2  
  callextr api : longtoreal 2
  freei 2
  quitn 2

end

procedure __realconvertor."convert$system@String$system@IntNumber$@system@ref#1&system@RealNumber[3]"
  
  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : strtoreal 3
  freei 3
  ifr      labErr 0
  quitn    2

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __realconvertor."convert$system@WideString$system@IntNumber$@system@ref#1&system@RealNumber[3]"
  
  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : wstrtoreal 3
  freei 3
  ifr      labErr 0
  quitn    2

labErr:
  open 0
  pushr class : system'FormatException
  pushr mssgconst : "new[1]"
  throw

end

procedure __charconvertor."convert$system@IntNumber$@system@ref#1&system@CharValue[2]"
  
  peeksi 1
  load
  
  lessn labErr 0
  lessn labCopy 110000h

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw  

labCopy:

  peeksi 2
  save
  quitn 2

end

procedure __charconvertor."save$system@CharValue$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : chartoshorts 3
  freei  3
  peeksi 4
  save
  
  quitn 4

end

procedure __charconvertor."save$system@CharValue$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  pushsi 3
  pushsi 3
  pushsi 3  
  callextr api : chartobytes 3
  freei  3
  peeksi 4
  save
  
  quitn 4

end

procedure __charconvertor."convert$system@IntNumber$system@String$@system@ref#1&system@CharValue[3]"
  
  pushsi 2
  pushsi 2

  callextr api : strtochar 2
  ifr   labErr 0

  freei 2
  peeksi 3
  save
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw

end

procedure __charconvertor."convert$system@IntNumber$@system@Array#1&system@ByteNumber$@system@ref#1&system@CharValue[3]"
  
  pushsi 2
  pushsi 2

  callextr api : strtochar 2
  ifr   labErr 0

  freei 2
  peeksi 3
  save
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw

end

procedure __charconvertor."convert$system@IntNumber$@system@Array#1&system@ShortNumber$@system@ref#1&system@CharValue[3]"

  pushsi 2
  pushsi 2

  callextr api : wstrtochar 2
  ifr   labErr 0

  freei 2
  peeksi 3
  save
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw

end

procedure __charconvertor."convert$system@IntNumber$system@WideString$@system@ref#1&system@CharValue[3]"
  
  pushsi 2
  pushsi 2

  callextr api : wstrtochar 2
  ifr   labErr 0

  freei 2
  peeksi 3
  save
  quitn 3

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw

end

procedure __charconvertor."convert$system@ByteNumber$@system@ref#1&system@CharValue[2]"
  
  peeksi 1
  load

  lessn labErr 0
  lessn labCopy 080h

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw

labCopy:

  peeksi 2
  save
  quitn 2

end

procedure __charconvertor."convert$system@ShortNumber$@system@ref#1&system@CharValue[2]"
  
  peeksi 1
  load

  lessn labErr 0
  lessn labCopy 010000h

labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw

labCopy:

  peeksi 1
  save
  quitn 2

end

procedure __char."readLengthTo$system@CharValue$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  // ; < 80 - 1
  lessn labEnd 80h
  // ; <= 800 - 2
  lessn labEnd2 800h 
  lessn labEnd3 10000h 
  movn 4
  peeksi 2
  save  
  quitn 2
labEnd:
  movn 1
  peeksi 2
  save  
  quitn 2
labEnd2:
  movn 2
  peeksi 2
  save  
  quitn 2
labEnd3:
  movn 3
  peeksi 2
  save  
  quitn 2

end

procedure __exception."on[2]"

  open   0
  hook   labNotFound
  pusha
  peekfi -2
  movm   mssgconst : "#invoke[1]"

  callvi 0

labReturn:

  unhook

  close
  quitn 2

labNotFound:

  // ; movs    9
  // ; address labReturn
  // ; else    labContinueError

  restore 4

  close
  pushsi 10

labContinueError:

  popa
  unhook
  pusha
  throw

end

procedure __exception.register[0]

  movr intern : system'core_routines'critical_exception_handler
  callextr api : register_critical_exception_handler 0

  quit

end

procedure __dptr."system$setReference[2]"

  loadsi 2
  save
  quitn 2

end

procedure __dptr."read$system@UnsafePointer$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __dptr."readVal$system@UnsafePointer$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  geti   0
  load
  peeksi 2
  save
  quitn 2

end

procedure __dptr."copyTo$system@UnsafePointer$@system@Array#1&system@ByteNumber$system@IntNumber[3]"

  pushn  0
  peeksi 2
  pushai 0
  pushsi 5
  movsip 2
  pusha
  pushsi 6
  // subcopy(target,index,size,arr)
  callextr api : subcopy 4
  
  peeksi 0
  freei  5
  quitn  3

end

procedure __dptr."copyTo$system@UnsafePointer$system@Symbol[2]"

  peeksi 1
  load
  peeksi 2
  save
  quitn 2

end

procedure __message."getWeakMessage$system@Message$@system@ref#1&system@Message[2]"

  peeksi 1
  load

  pushn  0
  movsip 0
  save
  loadverb
  setv
  popd

  peeksi 2
  save

  quitn 2

end

procedure __message."getMessageName$system@Message$@system@ref#1&system@MessageName[2]"

  peeksi  1
  load
  loadverb
  peeksi  2
  save

  quitn 2

end

procedure __message."#dispatch[1]"

  pushd

  // check if it is invoke
  and     SPECIAL_MESSAGE
  ifn     labDefault 0 

  load
  storev

  elsed   labDefault

  popd
  peeksi  1
  jumpvi  0

labDefault:
  popd
  bsredirect 

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw
  
end

procedure __message."copy$system@Message$system@IntNumber[2]"

  peeksi 2  
  load
  peeksi 1
  save
  quitn  2

end

procedure __message."load$system@Message$system@String[2]"

  peeksi   2
  pusha
  callextr extern : LoadMessage 0301h
  ifn      labErr 0
  peeksi   1
  save

  quitn 2
 
labErr:
  open 0
  pushr class : system'InvalidArgumentException
  pushr mssgconst : "new[1]"
  throw

end

procedure __signature."#dispatch[1]"

  pushd

  // check if it is invoke
  and      SPECIAL_MESSAGE
  ifn      labDefault 0 

  load
  movsip 0
  setv
  popd
  and      SPECIAL_MESSAGE_INV
  peeksi   1
  jumpvi   0
  
labDefault:
  popd
  bsredirect 

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw
  
end

procedure __signature."load$system@MessageName$system@String[2]"

  peeksi   2
  pusha
  callextr extern : LoadSubject 0301h
  ifn      labErr 0
  peeksi   1
  save

  quitn 2
 
labErr:
  peeksi   2
  open 0
  pusha
  pushr class : system'MessageLoaderException
  pushr mssgconst : "new[2]"
  throw

  quitn 2

end

procedure __signature."getProperty$system@MessageName$@system@ref#1&system@Message[2]"

  peeksi 1
  load
  pushn  1
  movsip 0
  setv
  popd
  or     40h  
  peeksi 2
  save

  quitn 2

end

procedure __signature."setProperty$system@MessageName$@system@ref#1&system@Message[2]"

  peeksi 1
  load
  pushn  2
  movsip 0
  setv
  popd
  or     40h
  peeksi 2
  save

  quitn 2

end

procedure __signature."varidadic$system@MessageName$@system@ref#1&system@Message[2]"

  peeksi 1
  load
  pushn  2
  movsip 0
  setv
  popd
  or     80h
  peeksi 2
  save

  quitn 2

end

procedure __extmessage."#dispatch[1]"

  pushd

  // check if it is invoke
  and     SPECIAL_MESSAGE
  ifn     labDefault 0 

  load
  storev

  elsed   labDefault
  popd

  jumpi   1

labDefault:
  popd
  bsredirect 

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw
  
end

procedure __extdispatcher."#dispatch[1]"

  pushd

// ; temporally commented out to allow call from interpreter tape
//  // check if it is invoke
//  and        SPECIAL_MESSAGE
//  ifn        labDefault 0 

  load
  storev

  elsed      labDefault

  popd
  xredirect  1
  jump       labDefault2

labDefault:
  popd

labDefault2:
  peeksi     1
  bsredirect 

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw

end

procedure __vextdispatcher."#dispatch[1]"

  pushd

  // check if it is invoke
  and        VARIADIC_MESSAGE
  ifn        labBoxing 0 
  popd        

  xvredirect 1

  peeksi     1
  jumpvi     0

labBoxing:

  loadsi     0
  open       0
  pusha      
  mcount     
  pushn      0FFFFFFFFh
  movf       -8
  Lab00:     nop
  push       
  dec        1h
  elsen      Lab00 0h
  loadfi     -1
  and        0FFFFFFE0h
  or         82h
  peekfi     1
  callrm     system'dynamic'VariadicExtensionDispatcher mssgconst : "#dispatch[1]"
  close      
  popd       
  mquit      

end

procedure __extdispatcher."load$@system@Array#1&system@UnsafePointer$system@Message$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[4]"

  peeksi   1

  pusha
  pusha
  popd
  inc      4
  pushd

  peeksi   4
  load
  peeksi   3
  savei    0
  pushd

  peeksi   6
  pusha 
  callextr extern : LoadExtensionDispatcher 0303h
  freei    1
  peeksi   4
  inc      1
  save

  quitn    3

end

procedure __symbol."#dispatch[1]"

  open     1
  reserve  4
  savesi   2
  calli    0
  loadsi   2
  restore  4
  close
  jumpvi   0

end

procedure __symbol."load$system@Symbol$system@String[2]"

  peeksi   2
  pusha
  loadenv
  pushd
  callextr extern : LoadSymbolByString 0302h
  ifn      labErr 0
  peeksi   1
  save

  quitn 2
 
labErr:
  peeksi  2
  open    0
  pusha
  pushr   class : system'SymbolLoaderException
  pushr   mssgconst : "new[2]"
  throw

end

procedure __symbol."tryLoad$@system@ref#1&system@UnsafePointer$system@String$system@String[3]"

  peeksi   3
  pusha
  peeksi   3
  pusha
  loadenv
  pushd
  callextr extern : LoadSymbolByString2 0303h
  peeksi   1
  save

  quitn 3

end

procedure __class."#dispatch[1]"

  geti    0
  jumpvi  0

end

procedure __class."load$system@ClassReference$system@String[2]"

  peeksi   2
  pusha
  loadenv
  pushd
  callextr extern : LoadClassByString 0302h
  ifn      labErr 0
  peeksi   1
  save

  quitn 2
 
labErr:
  peeksi   2
  open     0
  pusha
  pushr class : system'TypeLoaderException
  pushr mssgconst : "new[2]"
  throw

end

procedure __struct."#dispatch[1]"

  bsredirect

  pusha
  pushd
  and      ARG_MASK
  elsen    labEnd 1

  loadsi   0
  loadverb
  pushd

  count
  pushd
  ifn      labEnd 0

labNext:  
  dec      2
  savesi   0

  peeksi   3
  get

  flag
  and      elSubject
  ifn      labSkip 0

  load
  movsip   1
  if       labCall

labSkip:
  loadsi   0
  elsen    labNext 0

  jump     labEnd

labCall:
  loadsi   0
  inc      1
  peeksi   3
  get

  freei    4
  quitn 1
  
labEnd:

  freei    2
  popd
  popa

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw

end

procedure __lazyexpression."#dispatch[1]"

  vcallrm  system'BaseLazyExpression mssgconst : "#invoke[0]"
  storesi  1
  jumpvi   0

end

procedure __array."at$system@IntNumber[2]"

  count
  pushd

  peeksi     3
  load
  movsip     0
  notgreater labErr
  lessn   labErr 0

  peeksi 2
  freei  1
  get
  quitn 2

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw

end

procedure __array."setAt$system@IntNumber$system@Object[3]"

  count
  pushd

  peeksi     3
  load
  movsip     0
  notgreater labErr                
  lessn      labErr 0

  peeksi  2
  pushsi  4
  set
  freei   2
  quitn 3

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw

end

procedure __array."readLengthTo$system@Array$@system@ref#1&system@IntNumber[2]"

  peeksi 1
  count
  peeksi 2
  save
  quitn 2

end

procedure __array."copy$system@Array$system@IntNumber$system@IntNumber$system@Array[4]"

  pushsi 4
  pushsi 4
  pushsi 4  
  pushsi 4  

  callextr api : nsubcopy 4
  freei 4
  quitn 4
  
end

procedure __utf8encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@ByteNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  pushsi 6
  pushsi 6
  pushsi 6  
  pushsi 6  
  pushsi 6  
  
  callextr api : s_encode 5
  freei 5
  ifr labErr 0
  
  quitn 6

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw
  
end

procedure __utf8encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$system@String$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  pushsi 6
  pushsi 6
  pushsi 6  
  pushsi 6  
  pushsi 6  
  
  callextr api : s_encode 5
  freei 5
  ifr labErr 0
  
  quitn 6

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw
  
end

procedure __utf8encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@CharValue$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[6]"

  pushsi 6
  pushsi 6
  pushsi 6  
  pushsi 6  
  pushsi 6  
  
  callextr api : s_decode 5
  freei 5
  ifr labErr 0
  
  quitn 6

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw
  
end

procedure __utf8encoder."charCount$system@String$@system@ref#1&system@IntNumber[3]"

  peeksi   2
  len
  dec      1
  pushd
  pusha
  callextr api : strcharlen 2
  freei    2
  peeksi   3
  save
  quitn 3

end

procedure __utf16encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@ByteNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  pushsi 6
  pushsi 6
  pushsi 6  
  pushsi 6  
  pushsi 6  
  
  callextr api : ws_encode 5
  freei 5
  ifr labErr 0
  
  quitn 6

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw

end

procedure __utf16encoder."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@ShortNumber$@system@Array#1&system@CharValue$@system@ref#1&system@IntNumber[6]"

  pushsi 6
  pushsi 6
  pushsi 6  
  pushsi 6  
  pushsi 6  
  
  callextr api : ws_encodew 5
  freei 5
  ifr labErr 0
  
  quitn 6

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw

end

procedure __utf16encoder."convert$system@IntNumber$@system@ref#1&system@IntNumber$@system@Array#1&system@CharValue$@system@Array#1&system@ByteNumber$@system@ref#1&system@IntNumber[6]"

  pushsi 6
  pushsi 6
  pushsi 6  
  pushsi 6  
  pushsi 6  
  
  callextr api : ws_decode 5
  freei 5
  ifr labErr 0
  
  quitn 6

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw
  
end

procedure __utf16encoder."convert$system@IntNumber$system@IntNumber$@system@Array#1&system@CharValue$@system@Array#1&system@ShortNumber$@system@ref#1&system@IntNumber[6]"

  pushsi 6
  pushsi 6
  pushsi 6  
  pushsi 6  
  pushsi 6  
  
  callextr api : ws_decodew 5
  freei 5
  ifr labErr 0
  
  quitn 6

labErr:
  open 0
  pushr class : system'OutOfRangeException
  pushr mssgconst : "new[1]"
  throw
  
end

procedure __utf16encoder."charCount$system@WideString$@system@ref#1&system@IntNumber[3]"

  peeksi   2
  len
  dec      1
  pushd
  pusha
  callextr api : wstrcharlen 2
  freei    2
  peeksi   3
  save
  quitn 3

end

procedure __real."exp$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rexp
  freei 1

  quitn 2

end

procedure __real."ln$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rln
  freei 1

  quitn 2

end

procedure __real."sqrt$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  callextr api : rsqrt 2
  freei 1

  quitn 2

end

procedure __real."sin$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rsin
  freei 1

  quitn 2

end

procedure __real."cos$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rcos
  freei 1

  quitn 2

end

procedure __real."arctan$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rarctan
  freei 1

  quitn 2
  
end

procedure __real."pi$@system@ref#1&system@RealNumber[1]"

  peeksi 1
  callextr api : rpi 1

  quitn 1
  
end

procedure __real."abs$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rabs
  freei 1

  quitn 2

end

procedure __real."round$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rround
  freei 1

  quitn 2

end

procedure __real."truncate$system@RealNumber$@system@ref#1&system@RealNumber[2]"

  pushsi 1
  peeksi 3
  rint
  freei 1

  quitn 2

end

procedure __timest."empty$system@calendar@TimeStruct[1]"

  peeksi  1
  xsaveai 0 0
  xsaveai 1 0
  xsaveai 2 0
  xsaveai 3 0

  quitn 1

end

procedure __extension."#dispatch[1]"

  storesi 1
  geti    1
  bsredirect

  peeksi  1
  geti    0
  jumpvi  0

end

procedure __extensionvar."#dispatch[1]"

  pusha
  geti    1
  storesi 2
  popa
  geti    0
  or      SPECIAL_MESSAGE
  jumpvi  0

end

procedure __event."#dispatch[1]"

  bsredirect  

  open     2
  reserve  8

  savef    -8
  xsavef   -4 0

  geti     0  // ; get the first field !! better to define a special array (like castover group object)
  pusha

labNext:
  count
  movf     -4
  if       labEnd

  // ; define the message length
  loadf    -8
  and      ARG_MASK
  ifn      labSkip 0
  
// ; copy message
labNextParam:
  movfip   -1
  dec      1
  get
  pusha
  elsen    labNextParam 0

labSkip:
  peekfi   1
  loadf    -4
  get
  inc      1
  savef    -4
  
  loadf    -8
  callvi   0
  
  peekfi   1
  jump     labNext

labEnd:
  loadfi  -1
  restore  8
  close
  mquit

end

procedure __dynamicmssg_closure."params##invoke$system@Object[0]"

  popd
  popa
  pushd
  load
  peeksi  1
  jumpvi  0

end

procedure __mssg_closure."params##invoke$system@Object[0]"

  load
  peeksi  1
  jumpvi  0

end

procedure __ext_closure."params##invoke$system@Object[0]"

  pusha
  geti    1
  load
  popa
  geti    0
  jumpvi  0

end

procedure __fun_closure."params##invoke$system@Object[0]"

  popd
  swapd
  pushd
  load
  or      SPECIAL_MESSAGE
  popa
  jumpvi  0

end

procedure __local_closure."params##invoke$system@Object[0]"

  pusha
  movn   0
labSearch:
  movsip 2
  get
  inc 1
  elser  labSearch terminal
  dec    1
  popa
  sub
  movsip 1
  get

  quit

end

procedure __saving_closure."params##invoke$system@Object[0]"

  pushsi 1

  load
  movsip 2
  xset
  freei  1
  peeksi 2 

  quitn  2

end

procedure __assign_closure."params##invoke$system@Object[0]"

  pusha
  movn   0
labSearch:
  movsip 2
  get
  inc 1
  elser  labSearch terminal
  dec    1
  popa
  sub
  movsip 1
  pushsi 1
  xset
  popa

  quitn 1

end

procedure __jump_closure."params##invoke$system@Object[0]"

  naddf   -8
  peeksi  1
  quitn   1

end

procedure __jumpifnot_closure."params##invoke$system@Object[0]"

  pusha

  peeksi  2
  elser   labSkip const : false

  peeksi 0 
  naddf  -8

labSkip:
  freei   1
  peeksi  2
  quitn   2

end

procedure __jumpif_closure."params##invoke$system@Object[0]"

  pusha

  peeksi  2
  ifr     labSkip const : false

  peeksi  0 
  naddf   -8

labSkip:
  freei   1
  peeksi  2
  quitn   2

end

procedure __free_closure."params##invoke$system@Object[0]"

  load
  movsip  1
  get
  inc     1

  mquit

end

procedure __exit_closure."params##invoke$system@Object[0]"

  peekfi  1
  count
  savef   -8
  peeksi  1
  quit

end

procedure __closuretape."#dispatch[1]"

  pushd

  //; check if it is a closure call, otherwise handle it by default
  and     SPECIAL_MESSAGE
  ifn     labDefault 0 

  popd
  mcount

  open    2
  reserve 8
  pusha
  
  savef   -8
  movn    0  
  savef   -4
  
  pushn   -1
  
  movfip  -1
  
// ; copy message parameters
  loadf   -8
  ifn     labSkipCopy 0
labNextParam:
  dec     1
  push
  elsen   labNextParam 0

labSkipCopy:
  peekfi  1

labNext:
  breakpoint

  loadf   -4

  ifcount labEnd

  get
  inc 1
  savef   -4

  vcallrm system'dynamic'TapeFunction mssgconst : "params##invoke<system'Object>[0]"
  pusha
  peekfi  1
  jump    labNext

labEnd:
  popa

  loadf  -8
  restore 8
  close

  mquit

labDefault:
  popd
  bsredirect  

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw

end

procedure __group."#dispatch[1]"

  open     2
  reserve  8

  savef    -12
  xsavef   -8 0

  pusha

  hook     labNotFound

  // ; define the message length
  loadfi   -3
  and      ARG_MASK
  ifn      labSkip 0
  
// ; copy message
labNextParam:
  movf     -20
  get
  pusha
  dec      1
  elsen    labNextParam 0

  peekfi   1

labNext:
  loadfi   -2
  ifcount  labEnd

  get
  inc      1
  savefi   -8

  loadfi   -3
  callvi   0

labReturn:
  unhook
  loadfi   -3
  restore  8
  close

  mquit
  
labNotFound:  
  loadsi   9
  address  labReturn
  else     labContinueError

  restore  8
  close
  close
  freei    1
  loadfi   1
  jump     labNext

labContinueError:
  unhook
  loadfi  -3
  throw
                         
labEnd:
  unhook

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw
        
end

procedure __closureclass."#dispatch[1]"

  bsredirect

  pusha
  pushd
  pushn    0

labNext:
  peeksi   2
  loadsi   0
  ifcount  labEnd
  get
  inc      1
  savesi   0

  flag
  and      elMessage
  ifn      labNext 0

  loadsi   1
  else     labNext

labCall:
  peeksi   2 
  popd
  get
  popd
  freei    1
  or       20h // ; set special flag
  jumpvi   0

labQuit:
  quitn    1
  
labEnd:
  loadsi   1
  freei    3

  open     6
  reserve  24
  pushf    -16
  pusha
  pushf    -16
  movr     class : system'Message
  callextr api : tempObject 1 
  movr     class : system'MethodNotFoundException
  storesi  0
  pushr    mssgconst : "new[3]"

  throw

end

procedure __tape."build$@system@Array#1&system@ByteNumber$system@IntNumber[3]"

  open     7
  reserve  28
  pusha    
  // int i := 0;
  xsavef   -8 0
  // byte command := 0;
  xsavef   -12 0
  // int size := 0;
  xsavef   -16 0
  // while (i < len) {
  Lab00:   nop
  snop  
  
  peekfi   -3 // len
  pusha      
  movf     -8  // i
  nless      
  select   const : false const : true
  freei    1h
  ifr      Lab01 const : false 

  //command := buffer[i];
  peekfi   -2 // buffer
  loadf    -8
  read
  and      0FFh
  savef    -12

  // i += 1;
  xaddf    -8 1

  // size := buffer[i];
  peekfi   -2
  loadf    -8
  read
  savef    -16

  // i += 4;
  xaddf    -8 4

  // commands[command](size,buffer,i);
  loadf    -12
  movr     constarray : "system'dynamic'$private'commands#$inline0"
  get
  callvi   0
  pusha

  // i += size
  movf     -16
  naddf    -8

  jump     Lab00
  Lab01:   nop
  popa
  restore  28
  close    
  quitn    3h

end

procedure loadClass

  setframe 7

  // extern elenart.LoadClassByBuffer(buffer, i, size)
  loadf    -16
  pushd
  loadf    -8
  pushd
  pushfi   -2
  loadenv
  pushd
  callextr extern : LoadClassByBuffer 0304h
  ifn      labNotFound 0
  
  popa
  swapd    
  pushd  
  pusha
  
  quit

labNotFound:

  callr intern : system'core_routines'invokerError

end

procedure __invoke0."#dispatch[1]"   // 4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[1]"
  peeksi   1
  jumpvi   0

end

procedure invokerError

  setframe 7

  // ; remove a return point
  freei    1

  // UTF8Encoding.toString(i,size,buffer)
  pushfi   -12
  pushf    -16
  pushf    -8    
  movr     const : system'text'UTF8Encoding
  pusha  
  movm     mssgconst : "toString<system'IntNumber,system'IntNumber,'$auto'system@Array#1&system@ByteNumber>[4]"
  callrm   system'text'UTF8Encoding mssgconst : "toString<system'IntNumber,system'IntNumber,'$auto'system@Array#1&system@ByteNumber>[4]"

  open     0  
  pusha  
  pushr    class : system'TypeLoaderException
  pushr    mssgconst : "new[2]"
  throw

end

procedure __invoke1."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[2]"
  peeksi   1
  jumpvi   0

end

procedure __invoke2."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[3]"
  peeksi   1
  jumpvi   0

end

procedure __invoke3."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[4]"
  peeksi   1
  jumpvi   0

end

procedure __invoke4."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[5]"
  peeksi   1
  jumpvi   0

end

procedure __invoke5."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[6]"
  peeksi   1
  jumpvi   0

end

procedure __invoke6."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[7]"
  peeksi   1
  jumpvi   0

end

procedure __invoke7."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[8]"
  peeksi   1
  jumpvi   0

end

procedure __invoke8."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[9]"
  peeksi   1
  jumpvi   0

end

procedure __invoke9."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[10]"
  peeksi   1
  jumpvi   0

end

procedure __invoke10."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[11]"
  peeksi   1
  jumpvi   0

end

procedure __invoke11."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[12]"
  peeksi   1
  jumpvi   0

end

procedure __invoke12."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[13]"
  peeksi   1
  jumpvi   0

end

procedure __invoke13."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[14]"
  peeksi   1
  jumpvi   0

end

procedure __invoke14."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[15]"
  peeksi   1
  jumpvi   0

end

procedure __invoke15."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[16]"
  peeksi   1
  jumpvi   0

end

procedure __invoke16."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[17]"
  peeksi   1
  jumpvi   0

end

procedure __invoke17."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[18]"
  peeksi   1
  jumpvi   0

end

procedure __invoke18."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[19]"
  peeksi   1
  jumpvi   0

end

procedure __invoke19."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[20]"
  peeksi   1
  jumpvi   0

end

procedure __invoke20."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[21]"
  peeksi   1
  jumpvi   0

end

procedure __invoke21."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[22]"
  peeksi   1
  jumpvi   0

end

procedure __invoke22."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[23]"
  peeksi   1
  jumpvi   0

end

procedure __invoke23."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[24]"
  peeksi   1
  jumpvi   0

end

procedure __invoke24."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[25]"
  peeksi   1
  jumpvi   0

end

procedure __invoke25."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[26]"
  peeksi   1
  jumpvi   0

end

procedure __invoke26."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[27]"
  peeksi   1
  jumpvi   0

end

procedure __invoke27."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[28]"
  peeksi   1
  jumpvi   0

end

procedure __invoke28."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[29]"
  peeksi   1
  jumpvi   0

end

procedure __invoke29."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[30]"
  peeksi   1
  jumpvi   0

end

procedure __invoke30."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "#constructor[31]"
  peeksi   1
  jumpvi   0

end

procedure __invoke31."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "params##constructor[2]"
  peeksi   1
  jumpvi   0

end

procedure __invokeV1."#dispatch[1]"   // -4 - size, -2 - index, -12 - buffer

  callr intern : system'core_routines'loadClass

  movm     mssgconst : "params##constructor[2]"
  peeksi   1
  jumpvi   0

end

procedure __loadString."#dispatch[1]" // -4 - size, -2 - index, -12 - buffer

  setframe 7

  // UTF8Encoding.toString(i,size,buffer)
  pushfi   -2
  pushf    -16
  pushf    -8    
  movr     const : system'text'UTF8Encoding
  pusha  
  movm     mssgconst : "toString<system'IntNumber,system'IntNumber,'$auto'system@Array#1&system@ByteNumber>[4]"
  callrm   system'text'UTF8Encoding mssgconst : "toString<system'IntNumber,system'IntNumber,'$auto'system@Array#1&system@ByteNumber>[4]"

  quit

end

procedure __freeVArg."#dispatch[1]"

  popd

labNext:
  popa
  swap
  elser   labNext terminal  

  popa
  pushd
  quit

end

procedure __loadTerminator."#dispatch[1]"

  movr  terminal
  quit

end

procedure __rtptr."new$system@RTPointer$system@Object[2]"

  callr    system'rt_sync
  pusha
labWait:
  snop
  trylock
  elsen    labWait 0 

  callextr api : alloc_index 0 
  pushsi   3
  set 
  freei    1 

  popa
  freelock

  peeksi   1
  save

  quitn 2

end

procedure __rtptr."free[1]"
                      
  callr    system'rt_sync
  pusha
labWait:
  snop
  trylock
  elsen    labWait 0 

  peeksi   2
  load
  pushd
  callextr api : free_index 1
  freei    1

  popa
  freelock

  quitn 1
  
end

procedure __rtptr.get[1]

  pusha
  callextr api : resolve_index 1

  quitn 1

end

procedure __hwnd."system@winforms$$fillWndClass$@system@Array#1&system@ByteNumber$system@WideString$system@IntNumber$system@winforms@HInstance$system@IntNumber[6]"

  peeksi   4
  load
  peeksi   2
  save
  peeksi   5
  load
  peeksi   2
  savei    4
  peeksi   6
  load
  peeksi   2
  savei    7
  pushsi   3
  xseti    9
  freei    1
  pushr    intern : system'core_routines'win_WndProc
  xseti    1
  freei    1
  movn     0
  savei    2
  savei    3
  savei    5
  savei    6
  savei    8
  quitn 6

end

// ; win32 constants
define WM_CREATE            1
define WM_DESTROY           2
define WM_SIZE              5
define WM_PAINT             000Fh
define WM_CLOSE             0010h
define WM_SETCURSOR         0020h
define WM_KEYDOWN           0100h
define WM_KEYUP             0101h
define WM_COMMAND           0111h
define GWL_USERDATA         0FFFFFFEBh

procedure win_WndProc

  loadsi   2
  ifn      labPaint WM_PAINT
  ifn      labCreate WM_CREATE
  ifn      labCursor  WM_SETCURSOR
  ifn      labSize  WM_SIZE
  ifn      labCommand WM_COMMAND
  ifn      labDestroy WM_DESTROY
  ifn      labDestroy WM_CLOSE

labEnd:
  loadsi   4
  pushd
  loadsi   4
  pushd
  loadsi   4 
  pushd
  loadsi   4
  pushd
  callextr extern : 'dlls'USER32.DefWindowProcW 0204h
  quitn    4 
  
labCreate:
  open     0
  reserve  0  // ; open new frame
  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : OpenFrame 0302h

  pushn    0
  movsip   0  
  pusha
  peekfi   -7
  pusha
  movf     -24
  pusha
  movf     -20
  pusha
  movf     -16
  pusha

  peekfi   -7
  pusha
  callextr api : resolve_index 0 

  pusha  
  vcallrm  system'winforms'WindowCallback mssgconst : "wm_create<system'winforms'WindowHandle,system'IntNumber,system'IntNumber,system'winforms'CREATESTRUCT,'$auto'system@ref#1&system@IntNumber>[6]"
  popa

  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : CloseFrame 0302h
  restore  0
  close

  quitn    4
  
labDestroy:
  open     0
  reserve  0  // ; open new frame
  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : OpenFrame 0302h

  peeksi   4
  pushn    GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW 0202h
  ifn      labEnd2 0  

  callextr api : resolve_index_value 0 
  pushn    0
  pushsip  0

  pushf    -20
  pushf    -16

  pusha  
  vcallrm  system'winforms'WindowCallback mssgconst : "eval<system'winforms'WindowHandle,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[4]"
  popa

  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : CloseFrame 0302h
  restore  0
  close

  quitn    4
  
labCommand:
  open     0
  reserve  0  // ; open new frame
  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : OpenFrame 0302h

  peeksi   4
  pushn    GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW 0202h
  ifn      labEnd2 0  

  callextr api : resolve_index_value 0 
  pushn    0
  pushsip  0

  pushf    -28
  pushf    -24
  pushf    -20
  pushf    -16

  pusha  
  vcallrm  system'winforms'WindowCallback mssgconst : "wm_command<system'winforms'WindowHandle,system'IntNumber,system'IntNumber,system'winforms'WindowHandle,'$auto'system@ref#1&system@IntNumber>[6]"
  popa

  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : CloseFrame 0302h
  restore  0
  close

  quitn    4
  
labCursor:
  open     0
  reserve  0  // ; open new frame
  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : OpenFrame 0302h

  peeksi   4
  pushn    GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW 0202h
  ifn      labEnd2 0  

  callextr api : resolve_index_value 0 
  pushn    0
  pushsip  0  

  pushf    -28
  pushf    -24
  pushf    -20
  pushf    -16

  pusha  
  vcallrm  system'winforms'WindowCallback mssgconst : "eval<system'winforms'WindowHandle,system'IntNumber,system'winforms'WindowHandle,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[6]"
  popa

  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : CloseFrame 0302h
  restore  0
  close

  quitn    4
  
labPaint:
  open     0
  reserve  0  // ; open new frame
  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : OpenFrame 0302h

  peeksi   4
  pushn    GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW 0202h
  ifn      labEnd2 0  

  callextr api : resolve_index_value 0 
  pushn    0
  pushsip  0  

  pushf    -20
  pushf    -16

  pusha  
  vcallrm  system'winforms'WindowCallback mssgconst : "wm_paint<system'winforms'WindowHandle,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[4]"
  popa

  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : CloseFrame 0302h
  restore  0
  close

  quitn    4
  
labSize:
  open     0
  reserve  0  // ; open new frame
  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : OpenFrame 0302h

  peeksi   4
  pushn    GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW 0202h
  ifn      labEnd2 0  

  callextr api : resolve_index_value 0 
  pushn    0
  pushsip  0  

  pushf    -28
  pushf    -24
  pushf    -20
  pushf    -16

  pusha  
  vcallrm  system'winforms'WindowCallback mssgconst : "eval<system'winforms'WindowHandle,system'IntNumber,system'IntNumber,system'IntNumber,'$auto'system@ref#1&system@IntNumber>[6]"
  popa

  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : CloseFrame 0302h
  restore  0
  close

  quitn    4

labEnd2:
  movsip   0
  pusha
  loadenv
  pushd
  callextr extern : CloseFrame 0302h
  freei    4
  jump     labEnd
  
end

procedure __thread."readThreadProc$@system@ref#1&system@IntNumber[1]"

  pushr    intern : system'core_routines'thread_start
  peeksi   2
  xseti    0
  freei    1
  quitn    1

end

procedure __thread."enterCriticalSection$system@Object[1]"

  peeksi   1
  pusha
labWait:
  snop
  trylock
  elsen    labWait 0

  freei    1
  quitn    1
  
end

procedure __thread."leaveCriticalSection$system@Object[1]"

  peeksi   1
  freelock

  quitn    1
  
end

// ; system routines

procedure critical_exception_handler

  open 0
  pushr class : system'CriticalException
  pushr mssgconst : "new[1]"
  throw

end

symbol vm_sta_start

  pushsip  0
  callextr extern : PrepareEM 0301h

  open     0
  reserve  sizeof ProgramHeader

  pushsip  -2
  callextr api : initProcess 1

  pushr    rdata : "$elena'@tapekey"
  pushr    api : seh_handler
  pushr    api : default_handler
  alloci   1
  loadenv
  savesi   0
  callextr api : get_seh_handler 0
  pushd
  callextr extern : InitializeVMSTA 0306h

  close
  quit

end

symbol mta_start

  pushsip  0
  callextr extern : PrepareEM 0301h

  open    0
  reserve sizeof ProgramHeader

  pushsip  -2
  callextr api : initProcess 1

  pushr    entry : "$forwards'$program"
  pushr    api : seh_handler
  pushr    api : default_handler
  alloci   1
  loadenv
  savesi   0
  callextr extern : InitializeMTA 0305h

  restore  sizeof ProgramHeader
  close
  quit

end

symbol sta_start

  pushsip  0
  callextr extern : PrepareEM 0301h

  open    0
  reserve sizeof ProgramHeader

  pushsip  -2
  callextr api : initProcess 1

  pushr    entry : "$forwards'$program"
  pushr    api : seh_handler
  pushr    api : default_handler
  alloci   1
  loadenv
  savesi   0
  movf     -4
  callextr extern : InitializeSTA 0305h

  restore  sizeof ProgramHeader
  close
  quit

end

procedure thread_start

  open     0
  reserve  sizeof ProgramHeader

  pushsip  -2
  callextr api : initThread 1

  loadfi   -9
  pushd

  pushr    intern : system'core_routines'threadEntry
  pushr    api : seh_handler
  pushr    api : thread_default_handler
  loadenv
  pushd
  callextr extern : StartThread 0306h

  restore  sizeof ProgramHeader
  close
  quitn    1

end

procedure threadEntry

  peeksi   1
  pusha
  callextr api : resolve_index 1
  pusha
  movm     mssgconst : "#invoke[0]"
  callvi   0
  ifr      labError 0
  freei    1
  quit

labError:
  open 0
  pushr class : system'NotSupportedException
  pushr mssgconst : "new[1]"
  throw

end

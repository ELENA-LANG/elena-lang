import system'threading;
import extensions;
import extensions'threading;

static sync = new object();

public program()
{
   threadControl.start(
   {
      try {
        int n := 1;
        while (true) {
           lock(sync) {
              console.writeLine("Line from thread 1 : " + n.toPrintable());
              n++;
           };
           if (n == 50000)
             InvalidArgumentException.raise()
        }
      }
      catch(Exception ex)
      {
         console.writeLine(ex);
      }
   });

   threadControl.start(
   {
      int n := 1000;
      while (true) {
         lock(sync) {
            console.writeLine("Line from thread 2 : " + n.toPrintable());
            n++;
         }         
      }
   });

   console.readChar()
}

/*public program()
{
   var list := new BlockingQueue<string>();

   Thread.new(
   {
      var s := list.pop();

      console.printLine("Thread says ",s);
   });

   console.printLineConcurrent("Send a message to a thread");
   var msg := console.readLine();

   list.push(msg);

   Console.printLineConcurrent("Press any key");
   Console.readChar();
}*/

//import extensions.
import cellular.

//const int maxX = 48.
//const int maxY = 28.
//
//type listener_func = ListenerFunc.
//
//limited closure class ListenerFunc
//{
//    closure space:space []
//}

sealed class Model
{
    T<Space>   theSpace.
    T<RuleSet> theRuleSet.
//    bool    started.
//    
//    listener_func event onUpdate :: theListener.
    
    constructor newRandomset(RuleSet transformSet)
    [
//        theSpace := IntMatrixSpace new int:maxY int:maxX ruleset:randomSet.
//                        
//        theRuleSet := transformSet.
//        
//        started := false.
    ]
    
//    constructor newLoaded ruleset:initSet ruleset:transformSet
//    [
//        theSpace := IntMatrixSpace new int:maxY int:maxX ruleset:initSet.
//                        
//        theRuleSet := transformSet.
//        
//        started := false.
//    ]
//    
//    $onUpdate
//    [
//        if ($nil != theListener)
//            [ theListener(theSpace) ].
//    ]
//    
//    init
//    [
//        $self $onUpdate.
//    ]
//    
//    run
//    [
//        if (started)
//            [ theSpace update ruleset:theRuleSet. ];
//            [ started := true. ].        
//        
//        $self $onUpdate.
//    ]
}
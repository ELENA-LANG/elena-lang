//        ELENA Language 2.0
//      inline system library

define EVAL_MESSAGE_ID      085000000h

define INV_PARAM_MASK       0FFFFFFF0h

procedure __object.dispatch[1]

  bsredirect  

  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw

end

procedure __object.equal[2]

  aloadsi 1
  bloadsi 2
  ifb     labTrue
  acopyr  const : system'false
  quitn   2
  
labTrue:
  acopyr const : system'true
  quitn 2
  
end

procedure __object.equal&reference[2]

  aloadsi 1
  bloadsi 2
  ifb     labTrue
  acopyr  const : system'false
  quitn   2
  
labTrue:
  acopyr const : system'true
  quitn 2
  
end

procedure __verb.dispatch[1]

  bloadsi 1
  ifb labDefault
  
  setverb 0
  nload
  or
  ecopyd
  aloadsi 1
  ajumpvi 0
  
labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw
  
end

procedure __message.dispatch[1]

  bloadsi 1
  ifb labDefault

  nload
  eswap
  setverb EVAL_MESSAGE_ID
  setsubj 0
  else labEnd
  nload
  ecopyd
  aloadsi 1
  ajumpvi 0

labEnd:
  open    4
  reserve 1
  dsavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw

labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw
  
end

procedure __message.get&subject$[1]

  pusha
  newn   class : system'Signature 4
  bcopya
  popa
  nload
  andn INV_PARAM_MASK
  ecopyd
  setverb 0
  dcopye
  nsave
  acopyb

  quitn 1

end

procedure __signature.dispatch[1]

  bloadsi 1
  ifb labDefault

  setsubj 0
  nload
  or
  aloadsi 1
  ecopyd
  ajumpvi 0
  
labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw
  
end

procedure __signature.load&subject$&literal$[2]

  aloadsi 2
  pusha
  callextr extern : LoadSubject
  pop
  ifn labErr 0
  bloadsi 1
  nsave
  acopyb

  quitn 2
 
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

  quitn 2

end

procedure __signature.load&subject$&mssg$[2]

  bloadsi 1
  aloadsi 2
  nload
  andn INV_PARAM_MASK
  ecopyd
  setverb 0
  dcopye
  nsave
  acopyb
  quitn 2

end

procedure __lazyexpression.dispatch[1]

  pushe
  pusha
  copym EVAL_MESSAGE_ID

  xindexrm system'BaseLazyExpression %eval[0]
  acallvd

  pope
  asavesi 1
  ajumpvi 0

end

procedure __literal.eval&readLength&vint$[2]

  aloadsi 1
  blen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __literal.eval&copy&literal$&int$&int$&bytearray$[4]

  bloadsi 1
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callextr api : subcopy
  
  acopyb
  quitn 4

end

procedure __literal.eval&Substring&int$&int$[3]

  // ; calculate length
  aloadsi 3
  nload
  inc

  // ; create a new string  
  acopyr class : system'LiteralValue
  bcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  
  aloadsi 2
  nload

  aloadsi 1
  callextr api : subcopy
  
  acopyb
  blen
  ecopy 0
  dec
  bwriteb

  quitn 3

end

procedure __literal.add&literal$[2]

  blen
  dec
  ecopyd
  bcopya
  aloadsi 2
  blen
  add
  acopyr class : system'LiteralValue
  bcreate
  bswap
  blen
  dec
  ecopyd
  dcopy 0
  callextr api : insert
  ecopyd
  aloadsi 2
  blen
  eswap
  callextr api : insert
  acopyb

  quitn 2

end                                                

procedure __literal.equal&literal$[2]

  bloadsi 2
  callextr api : sequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __literal.less&literal$[2]

  bloadsi 2
  callextr api : sless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __literal.read&int$&vbyte$[3]

  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  breadb
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __literal.read&int$&vchar$[3]

  blen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  acopyb  
  callextr api : strtochar
  ifr labErr 0
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __literal.indexOf&int$&literal$&vint$[4]

  bcopya
  aloadsi 2                 // ; load index
  nload
  aloadsi 3                 // ; load searching str
  callextr api : sseek
  acopyb
  bloadsi 4                 // ; load target
  nsave                    // ; save index
  quitn 4

end

procedure __literal.indexOf&int$&char$&vint$[4]

  pusha
  aloadsi 4
  pushn 0
  pushn 0
  bcopys 0
  pushn 0
  callextr api : chartostr
  pushe

  aloadsi 7                 // ; load index
  nload
  acopys 2
  bloadsi 4
  callextr api : sseek
  bloadsi 9                // ; load target
  nsave                    // ; save index
  popi 4
  popa
  quitn 4

end

procedure __literal.insert&int$&literal$[3]

  // ; calculate length
  blen
  dec
  ecopyd
  
  aloadsi 3
  blen
  add

  acopyr class : system'LiteralValue
  bcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : insert

  // ; insert
  aloadsi 3
  ecopyd
  blen
  dec
  eswap
  callextr api : insert
  
  // ; copy right side 
  ecopyd
  aloadsi 2
  nload  
  eswap
  aloadsi 1
  callextr api : sadd

  acopyb
  quitn 3
  
end

procedure __literal.delete&int$&int$[3]

  bcopya

  // ; calculate length
  aloadsi 3
  nload
  ecopyd

  acopyb
  blen
  sub

  acopyr class : system'LiteralValue
  bcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : insert

  // ; copy right side 
  ecopyd          
  aloadsi 3
  nload
  add
  eswap
  aloadsi 1
  callextr api : sadd

  acopyb
  quitn 3
  
end

procedure __literal.save&int$&chararray$&vint$[4]

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0
  callextr api : strtochararray
  bloadsi 5
  dcopye
  nsave
  popa

  quitn 4

end

procedure __literal.eval&system$save&int$&bytearray$&int$[4]

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0

  pushe                                               
  pushd
  dcopy 0

labNext:
  esavesi 1
  breadb
  inc
  dswapsi 0
  bwriteb
  inc
  eloadsi 1
  dswapsi 0
  less labNext

  popi 2
  popa

  quitn 4

end

procedure __literal.new&int$&int$&chararray$[4]

  aloadsi 3
  nload
  ifn labEmpty 0
    
  aloadsi 4
  ecopyd
  callextr api : slen_ch
            
  acopyr class : system'LiteralValue
  inc
  bcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4

  callextr api : s_copychars
  
  acopyb
  blen
  ecopy 0
  dec
  bwriteb
  quitn 4
  
labEmpty:
  dcopy 1
  acopyr class : system'LiteralValue
  bcreate
  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 4

end

procedure __wide.eval&readLength&vint$[2]

  aloadsi 1
  wlen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __wide.eval&Substring&int$&int$[3]

  // ; calculate length
  aloadsi 3
  nload
  inc

  // ; create a new string  
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  
  aloadsi 2
  nload

  aloadsi 1
  callextr api : wsubcopy

  acopyb
  wlen
  ecopy 0
  dec
  shiftn -1
  bwritew

  quitn 3

end

procedure __wide.add&wide$[2]

  wlen
  dec
  ecopyd
  bcopya
  aloadsi 2
  wlen
  add
  acopyr class : system'WideLiteralValue
  wcreate
  bswap
  wlen
  dec
  ecopyd
  dcopy 0
  callextr api : winsert
  ecopyd
  aloadsi 2
  wlen
  eswap
  callextr api : winsert
  acopyb

  quitn 2

end                                                

procedure __wide.eval&copy&wide$&int$&int$&shortarray$[4]

  bloadsi 1
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callextr api : wsubcopy
  
  acopyb
  quitn 4

end

procedure __wide.equal&wide$[2]

  bloadsi 2
  callextr api : wequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __wide.less&wide$[2]

  bloadsi 2
  callextr api : wless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure __wide.read&int$&vchar$[3]

  wlen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  acopyb  
  callextr api : wstrtochar
  ifr labErr 0
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __wide.read&int$&vshort$[3]

  wlen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  eaddn -1
  notless labErr
  lessn   labErr 0

  acopyb
  shiftn -1
  breadw
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure __wide.indexOf&int$&wide$&vint$[4]

  bcopya
  aloadsi 2                 // ; load index
  nload
  aloadsi 3                 // ; load searching str
  callextr api : wseek
  acopyb
  bloadsi 4                 // ; load target
  nsave                    // ; save index
  quitn 4

end

procedure __wide.indexOf&int$&char$&vint$[4]

  pusha
  aloadsi 4
  pushn 0
  bcopys 0
  pushn 0
  callextr api : chartowstr
  pushe

  aloadsi 7                 // ; load index
  nload
  acopys 2
  bloadsi 4
  callextr api : wseek
  bloadsi 9                // ; load target
  nsave                    // ; save index
  popi 4
  popa
  quitn 4
  
end

procedure __wide.insert&int$&wide$[3]

  // ; calculate length
  wlen
  dec
  ecopyd
  
  aloadsi 3
  wlen
  add

  acopyr class : system'WideLiteralValue
  wcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : winsert

  // ; insert
  aloadsi 3
  ecopyd
  wlen
  dec
  eswap
  callextr api : winsert
  
  // ; copy right side 
  ecopyd
  aloadsi 2
  nload  
  eswap
  aloadsi 1
  callextr api : wadd

  acopyb
  quitn 3
  
end

procedure __wide.delete&int$&int$[3]

  bcopya

  // ; calculate length
  aloadsi 3
  nload
  ecopyd

  acopyb
  wlen
  sub

  acopyr class : system'WideLiteralValue
  wcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callextr api : winsert                  

  // ; copy right side 
  ecopyd          
  aloadsi 3
  nload
  add
  eswap
  aloadsi 1
  callextr api : wadd

  acopyb
  quitn 3
  
end

procedure __wide.save&int$&chararray$&vint$[4]

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0
  callextr api : wstrtochararray
  bloadsi 5
  dcopye
  nsave
  popa
  
  quitn 4

end

procedure __wide.eval&system$save&int$&shortarray$&int$[4]

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0

  pushe                                               
  pushd
  dcopy 0

labNext:
  esavesi 1
  wread
  inc
  dswapsi 0
  wwrite
  inc
  eloadsi 1
  dswapsi 0
  less labNext

  popi 2
  popa

  quitn 4

end

procedure __wide.new&int$&int$&chararray$[4]
  
  aloadsi 3
  nload
  ifn labEmpty 0
    
  aloadsi 4
  ecopyd
  callextr api : wslen_ch

  acopyr class : system'WideLiteralValue
  inc
  wcreate
  bcopya
  
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4

  callextr api : ws_copychars
  
  acopyb
  wlen
  ecopy 0
  dec
  shiftn -1
  bwritew
  quitn 4
  
labEmpty:
  dcopy 1
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 4  

end

procedure __literalconvertor.convert&int$&bytearray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : inttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor.convert&wide$&bytearray$&vint$[4]

  aloadsi 2
  bloadsi 3
  callextr api : wstrtostr
  bloadsi 4
  nwritei 0
  quitn 4
  
end

procedure __literalconvertor.convert&int$&int$&bytearray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : inttostr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __literalconvertor.convert&short$&bytearray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : inttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor.convert&byte$&bytearray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : inttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor.convert&long$&bytearray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : longtostr

  bloadsi 4
  nwritei 0

  quitn 4


end

procedure __literalconvertor.convert&real$&bytearray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 24
  
  callextr api : realtostr

  bloadsi 4
  nwritei 0

  quitn 4
end

procedure __literalconvertor.convert&char$&bytearray$&vint$[4]

  aloadsi 2
  nload
  ifn labEmpty 0

  bloadsi 3

  callextr api : chartostr
  bloadsi 4
  nwritei 0
  quitn 4
  
labEmpty:
  ecopy 0
  bloadsi 4
  nwritei 0
  quitn 4

end

procedure __literalconvertor.convert&short$&int$&bytearray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : inttostr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __literalconvertor.convert&byte$&int$&bytearray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : inttostr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __literalconvertor.convert&long$&int$&bytearray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : longtostr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __wideconvertor.convert&literal$&shortarray$&vint$[4]

  aloadsi 2
  bloadsi 3
  callextr api : strtowstr
  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor.convert&int$&int$&shortarray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : inttowstr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __wideconvertor.convert&int$&shortarray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : inttowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor.convert&short$&shortarray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : inttowstr

  bloadsi 4
  nwritei 0

  quitn 4
  
end

procedure __wideconvertor.convert&byte$&shortarray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : inttowstr

  bloadsi 4
  nwritei 0

  quitn 4
  
end

procedure __wideconvertor.convert&long$&shortarray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : longtowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor.convert&real$&shortarray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 24
  
  callextr api : realtowstr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __wideconvertor.convert&char$&shortarray$&vint$[4]

  aloadsi 2
  nload
  ifn labEmpty 0

  bloadsi 3
  aloadsi 2
  callextr api : chartowstr
  bloadsi 4
  nwritei 0
  quitn 4

labEmpty:
  ecopy 0
  bloadsi 4
  nwritei 0
  quitn 4

end

procedure __wideconvertor.convert&short$&int$&shortarray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : inttowstr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __wideconvertor.convert&byte$&int$&shortarray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : inttowstr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __wideconvertor.convert&long$&int$&shortarray$&vint$[5]

  bloadsi 4
  aloadsi 3
  nload
  aloadsi 2
  
  callextr api : longtowstr

  bloadsi 5
  nwritei 0

  quitn 5

end

procedure __char.eval&readLength&vint$[2]

  bloadsi 2
  nload
  // ; < 80 - 1
  ecopy 1
  lessn labEnd 80h
  eaddn 1
  // ; <= 800 - 2
  lessn labEnd 800h 
  eaddn 1
  lessn labEnd 10000h 
  // ; <= 10000 - 3
  eaddn 1
  // ; - 4
labEnd:
  dcopye
  nsave  
  quitn 2

end

procedure __array.eval&readLength&vint$[2]

  len
  bloadsi 2
  nsave
  quitn 2

end

procedure __array.getAt&int$[2]

  bcopya
  len
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  get
  quitn 2

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __array.setAt&int$&object[3]

  bcopya
  len
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  aloadsi 3
  set
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure __array.eval&copy&array$&int$&int$&array$[4]

  aloadsi 1
  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  callextr api : nsubcopy
  
  acopyb
  quitn 4
  
end

procedure __intarray.eval&readLength&vint$[2]

  aloadsi 1
  nlen
  bloadsi 2
  nsave
  quitn 2

end

procedure __intarray.read&int$&int$&intarray$[4]

  aloadsi 1
  bcopya
  nlen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
  ecopyd
  aloadsi 3
  nload
  lessn   labErr 0
  add
  nlen
  less labErr
 
  aloadsi 3
  nload
  eswap

  acopyb
  bloadsi 4
  callextr api : nsubcopy
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __intarray.write&int$&int$&intarray$[4]

  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  pushd
  add
  ecopyd
  acopyb
  nlen
  less labErr
  pope
  aloadsi 2
  nload
  aloadsi 4
  callextr api : ninsert
  quitn 4

labErr:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __intarray.write&int$&int$[3]

  nlen
  bcopya
  ecopyd
  aloadsi 2
  nload
  notless labErr
  ecopyd
  aloadsi 3
  nload
  eswap  
  nwrite
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __intarray.read&int$&vint$[3]

  bcopya
  nlen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  nread
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __chararray.read&int$&int$&chararray$[4]

  bcopya
  nlen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  aloadsi 3
  nload
  acopyb

  bloadsi 4
  callextr api : nsubcopy
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __chararray.write&int$&int$&chararray$[4]

  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  pushd
  add
  ecopyd
  acopyb
  nlen
  less labErr
  pope
  aloadsi 2
  nload
  aloadsi 4
  callextr api : ninsert
  quitn 4

labErr:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __chararray.write&int$&char$[3]

  nlen
  bcopya
  ecopyd
  aloadsi 2
  nload
  notless labErr
  ecopyd
  aloadsi 3
  nload
  eswap  
  nwrite
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __chararray.read&int$&vchar$[3]

  bcopya
  nlen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  nread
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __chararray.eval&move&int$&int$&int$[4]

  pusha 

  // ; insert
  aloadsi 4
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi  0
  aloadsi 5
  pushai 0

  callextr api : nmove

  pop  
  popa
  quitn 4
  
end

procedure __byteconvertor.convert&short$&vbyte$[3]

  aloadsi 2
  nload

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure __byteconvertor.convert&int$&vbyte$[3]

  aloadsi 2
  nload
  
  lessn labErr 0  
  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure __byteconvertor.convert&long$&vbyte$[3]

  aloadsi 2
  dcopy 4
  bread
  dcopye
  elsen labErr 0  

  nload

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure __byteconvertor.convert&char$&vbyte$[3]

  aloadsi 2
  nload
  
  lessn labErr 0  
  lessn labCopy 080h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure __byteconvertor.convert&real$&vbyte$[3]

  pushn 0
  pushn 0
  acopys 0
  bcopya

  aloadsi 4
  rint

  acopyb
  rload
  dcopyr

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  popi 2
  bloadsi 3
  nsave
  quitn 3  

end

procedure __byteconvertor.convert&literal$&vbyte$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : strtoint
  nsave
  ifr      labErr 0

  aloadsi 3
  nload
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __byteconvertor.convert&wide$&vbyte$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : wstrtoint
  nsave
  ifr      labErr 0

  aloadsi 3
  nload
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __shortconvertor.convert&byte$&vshort$[3]

  aloadsi 2
  nload
  bloadsi 3
  nsave
  quitn 3  

end

procedure __shortconvertor.convert&int$&vshort$[3]

  bloadsi 3
  aloadsi 2

  nload
  lessn labNegative 0

  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  nsave
  quitn 3
  
labNegative:
  not

  lessn labCopyNeg 8000h

  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    
  
labCopyNeg:
  not
  nsave
  quitn 3  

end

procedure __shortconvertor.convert&long$&vshort$[3]

  aloadsi 2
  dcopy 4
  bread
  dcopye
  lessn labNegative 0  
  elsen labErr 0  

  nload
  lessn labCopy 8000h  
  jump  labErr

labCopy:
  bloadsi 3
  nsave
  quitn 3  

labNegative:
  elsen labErr 0FFFFFFFFh
  nload
  not
  lessn labCopyNegative 8000h  

labErr:
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopyNegative:
  nload
  bloadsi 3
  nsave
  quitn 3  

end

procedure __shortconvertor.convert&char$&vshort$[3]

  aloadsi 2
  nload
  
  lessn labErr 0  
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure __shortconvertor.convert&real$&vshort$[3]

  pushn 0
  pushn 0
  acopys 0
  bcopya

  aloadsi 4
  rint

  acopyb
  rload
  dcopyr
  
  lessn labErr 0FFFF8000h
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  popi 2
  bloadsi 3
  nsave
  quitn 3  

end

procedure __shortconvertor.convert&literal$&vshort$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : strtoint
  nsave
  ifr      labErr 0
  
  aloadsi 3
  nload
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __shortconvertor.convert&wide$&vshort$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : wstrtoint
  nsave
  ifr      labErr 0

  aloadsi 3
  nload
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __charconvertor.convert&byte$&vchar$[3]
  
  bloadsi 3
  aloadsi 2
  nload

  lessn labErr 0
  lessn labCopy 080h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 3

end

procedure __charconvertor.convert&short$&vchar$[3]
  
  bloadsi 3
  aloadsi 2
  nload

  lessn labErr 0
  lessn labCopy 010000h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 3

end

procedure __charconvertor.convert&int$&vchar$[3]
  
  bloadsi 3
  aloadsi 2
  nload
  
  lessn labErr 0
  lessn labCopy 110000h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 3

end

procedure __charconvertor.eval&system$convert&int$&literal$&vchar$[4]
  
  aloadsi 2
  nload
  aloadsi 3

  callextr api : strtochar
  ifr   labErr 0

  dcopye
  bloadsi 4
  nsave
  acopyb
  quitn 4

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __charconvertor.eval&system$convert&int$&bytearray$&vchar$[4]
  
  aloadsi 2
  nload
  aloadsi 3

  callextr api : strtochar
  ifr   labErr 0

  dcopye
  bloadsi 4
  nsave
  acopyb
  quitn 4

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __charconvertor.eval&system$convert&int$&wide$&vchar$[4]
  
  aloadsi 2
  nload
  aloadsi 3

  callextr api : wstrtochar
  ifr   labErr 0

  dcopye
  bloadsi 4
  nsave
  acopyb
  quitn 4

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __charconvertor.eval&system$convert&int$&shortarray$&vchar$[4]
  
  aloadsi 2
  nload
  aloadsi 3

  callextr api : wstrtochar
  ifr   labErr 0

  dcopye
  bloadsi 4
  nsave
  acopyb
  quitn 4

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure __charconvertor.eval&system$save&char$&int$&shortarray$&vint$[5]

  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi 4
  callextr api : chartoshorts
  dcopye
  bloadsi 5
  nsave
  
  quitn 5

end

procedure __charconvertor.eval&system$save&char$&int$&bytearray$&vint$[5]

  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi 4
  callextr api : chartobytes
  dcopye
  bloadsi 5
  nsave
  
  quitn 5

end

procedure __intconvertor.convert&short$&vint$[3]

  aloadsi 2
  nload
  bloadsi 3
  nsave
  quitn 3

end

procedure __intconvertor.convert&byte$&vint$[3]

  aloadsi 2
  nload
  bloadsi 3
  nsave
  quitn 3

end

procedure __intconvertor.convert&long$&vint$[3]

  aloadsi 2
  dcopy 4
  bread
  dcopye
  lessn labNegative 0  
  elsen labErr 0  

  nload
  bloadsi 3
  nsave
  quitn 3  

labNegative:
  elsen labErr 0FFFFFFFFh

  nload
  bloadsi 3
  nsave
  quitn 3  

labErr:
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

end

procedure __intconvertor.convert&literal$&vint$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : strtoint
  nsave
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor.convert&literal$&int$&vint$[4]
  
  bloadsi  4
  aloadsi  3
  nload
  ecopyd   
  aloadsi  2
  callextr api : strtoint
  nsave
  ifr      labErr 0
  quitn    4

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor.convert&wide$&vint$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : wstrtoint
  nsave
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor.convert&wide$&int$&vint$[4]
  
  bloadsi  4
  aloadsi  3
  nload
  ecopyd   
  aloadsi  2
  callextr api : wstrtoint
  nsave
  ifr      labErr 0
  quitn    4

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __intconvertor.convert&char$&vint$[3]

  aloadsi 2
  nload
  bloadsi 3
  nsave
  quitn 3

end

procedure __intconvertor.convert&real$&vint$[3]

  aloadsi 2
  bloadsi 3  
  rload
  dcopyr
  nsave
  aloadsi 1
  quitn 3

end

procedure __longconvertor.convert&int$&vlong$[3]
  
  bloadsi 3
  aloadsi 2
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 3

end

procedure __longconvertor.convert&short$&vlong$[3]
  
  bloadsi 3
  aloadsi 2
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 3

end

procedure __longconvertor.convert&byte$&vlong$[3]
  
  bloadsi 3
  aloadsi 2
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 3

end

procedure __longconvertor.convert&literal$&vlong$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : strtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor.convert&literal$&int$&vlong$[4]
  
  bloadsi  4
  aloadsi  3
  nload
  ecopyd   
  aloadsi  2
  callextr api : strtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    4

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor.convert&wide$&vlong$[3]
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callextr api : wstrtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor.convert&wide$&int$&vlong$[4]
  
  bloadsi  4
  aloadsi  3
  nload
  ecopyd   
  aloadsi  2
  callextr api : wstrtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    4

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __longconvertor.convert&real$&vlong$[3]

  aloadsi 2
  bloadsi 3
  rload
  nsave
  dcopy 0
  nsavei 1
  aloadsi 1
  quitn 3

end

procedure __realconvertor.convert&int$&vreal$[3]
  
  bloadsi 3
  aloadsi 2
  nload
  rcopy
  rsave
  acopyb
  quitn 3

end

procedure __realconvertor.convert&byte$&vreal$[3]
  
  bloadsi 3
  aloadsi 2
  nload
  rcopy
  rsave
  acopyb
  quitn 3

end

procedure __realconvertor.convert&short$&vreal$[3]
  
  bloadsi 3
  aloadsi 2
  nload
  rcopy
  rsave
  acopyb
  quitn 3

end

procedure __realconvertor.convert&long$&vreal$[3]
  
  bcopya
  aloadsi 2
  callextr api : longtoreal
  acopyb
  quitn 3

end


procedure __realconvertor.convert&literal$&vreal$[3]
  
  bloadsi  3
  dcopy    10
  aloadsi  2
  callextr api : strtoreal
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __realconvertor.convert&wide$&vreal$[3]
  
  bloadsi  3
  dcopy    10
  aloadsi  2
  callextr api : wstrtoreal
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure __args.eval&readLength&vint$[2]

  aloadsi 1
  bcopya
  dcopy 0
labSearch:
  get
  inc
  elser labSearch 0
  dec
  ecopyd
  bloadsi 2
  nsave
  quitn 2

end

procedure __timest.eval&empty&__time_st$calendar[1]

  bloadsi 1
  ecopy 0
  dcopy 0
  nwrite
  dcopy 1
  nwrite
  dcopy 2
  nwrite
  dcopy 3
  nwrite
  quitn 1

end

//        ELENA Language 2.0
//      inline system library

define EVAL_MESSAGE_ID      085000000h

procedure __object.dispatch[1]

  bsredirect  

  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw

end

procedure __object.equal[2]

  aloadsi 1
  bloadsi 2
  ifb     labTrue
  acopyr  const : system'false
  quitn   2
  
labTrue:
  acopyr const : system'true
  quitn 2
  
end

procedure __verb.dispatch[1]

  bloadsi 1
  ifb labDefault
  
  setverb 0
  nload
  or
  ecopyd
  aloadsi 1
  ajumpvi 0
  
labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw
  
end

procedure __message.dispatch[1]

  bloadsi 1
  ifb labDefault

  nload
  eswap
  setverb EVAL_MESSAGE_ID
  setsubj 0
  else labEnd
  nload
  ecopyd
  aloadsi 1
  ajumpvi 0

labEnd:
  open    4
  reserve 1
  dsavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw

labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw
  
end

procedure __signature.dispatch[1]

  bloadsi 1
  ifb labDefault

  setsubj 0
  nload
  or
  aloadsi 1
  ecopyd
  ajumpvi 0
  
labDefault:
  bsredirect  
  open    4
  reserve 1
  esavesi 2
  bcopys  -2
  pushb
  pushr class : system'MethodNotFoundException
  pushr const : %new&mssg$[1]
  throw
  
end

procedure __literal.eval&readLength&vint$[2]

  aloadsi 1
  blen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __literal.eval&copy&literal$&int$&int$&bytearray$[4]

  bloadsi 1
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callextr api : subcopy
  
  acopyb
  quitn 4

end

procedure __wide.eval&readLength&vint$[2]

  aloadsi 1
  wlen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure __literalconvertor.convert&int$&bytearray$&vint$[4]

  bloadsi 3
  aloadsi 2
  dcopy 10
  
  callextr api : inttostr

  bloadsi 4
  nwritei 0

  quitn 4

end

procedure __literalconvertor.convert&wide$&bytearray$&vint$[4]

  aloadsi 2
  bloadsi 3
  callextr api : wstrtostr
  bloadsi 4
  nwritei 0
  quitn 4
  
end

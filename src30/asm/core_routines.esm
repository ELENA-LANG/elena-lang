//        ELENA Language 2.0
//      inline system library

define elMessage            000008000h
define elRole               000004000h
define elSubject            000002000h
define elStructure          000000008h

define NEW_MESSAGE_ID       084000000h
define EVAL_MESSAGE_ID      085000000h
define GET_MESSAGE_ID       086000000h

define INV_PARAM_MASK       0FFFFFFF0h

procedure object_equal

  aloadsi 1
  bloadsi 2
  ifb     labTrue
  acopyr  const : system'false
  quitn   2
  
labTrue:
  acopyr const : system'true
  quitn 2
  
end

procedure dispatch

  bsredirect  
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw

end

procedure byte_min

  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 1

end

procedure byte_max

  bcopya
  dcopy 0FFh
  nsave
  acopyb
  quitn 1

end

procedure int_copy

  bcopya
  aloadsi 2
  ncopy
  acopyb
  quitn 2

end

procedure int_init

  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 1

end

procedure int_equal

  bloadsi 2
  nequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure int_less

  bloadsi 2
  nless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure byte_add

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nadd
  acopyb
  nload
  andn 0FFh
  nsave
  quitn 2

end

procedure byte_sub

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nsub
  acopyb
  nload
  andn 0FFh
  nsave
  quitn 2

end

procedure byte_mul

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nmul
  acopyb
  nload
  andn 0FFh
  nsave
  quitn 2

end

procedure byte_div

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  ndiv
  acopyb
  nload
  andn 0FFh
  nsave
  quitn 2

end

procedure byte_and

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nand
  acopyb
  quitn 2

end

procedure byte_or

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nor
  acopyb
  quitn 2

end

procedure byte_xor

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nxor
  acopyb
  quitn 2

end

procedure int_and

  pusha
  newn   class : system'IntNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nand
  acopyb
  quitn 2

end

procedure int_or

  pusha
  newn   class : system'IntNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nor
  acopyb
  quitn 2

end

procedure int_xor

  pusha
  newn   class : system'IntNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nxor
  acopyb
  quitn 2

end

procedure long_and

  pusha
  newn   class : system'LongNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  land
  acopyb
  quitn 2

end

procedure long_or

  pusha
  newn   class : system'LongNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  lor
  acopyb
  quitn 2

end

procedure long_xor

  pusha
  newn   class : system'LongNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  lxor
  acopyb
  quitn 2

end
                 
procedure byte_shift

  pusha
  newn   class : system'ByteNumber 4
  bcopya
  aloadsi 3    // ; load index
  nload
  popa
  nshift
  acopyb

  nload
  andn 0FFh
  nsave

  quitn 2
  
end

procedure int_save

  bloadsi 2
  ncopy
  quitn 2

end

procedure byte_not

  newn   class : system'ByteNumber 4
  bcopya
  aloadsi 1    // ; load source
  nnot         // ; invert
  acopyb
  quitn 1
  
end

procedure short_min

  bcopya
  dcopy 0FFFF8000h
  nsave
  acopyb
  quitn 1

end

procedure short_max

  bcopya
  dcopy 07FFFh
  nsave
  acopyb
  quitn 1

end

procedure short_add

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nadd
  acopyb
  nload
  lessn labNegative 0

  andn 0FFFFh
  nsave
  quitn 2

labNegative:
  orn 0FFFF0000h
  nsave
  quitn 2

end

procedure short_sub

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nsub
  acopyb
  nload
  lessn labNegative 0

  andn 0FFFFh
  nsave
  quitn 2

labNegative:
  orn 0FFFF0000h
  nsave
  quitn 2

end

procedure short_mul

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nmul
  acopyb
  nload
  lessn labNegative 0

  andn 0FFFFh
  nsave
  quitn 2

labNegative:
  orn 0FFFF0000h
  nsave
  quitn 2

end

procedure short_div

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  ndiv
  acopyb
  nload
  lessn labNegative 0

  andn 0FFFFh
  nsave
  quitn 2

labNegative:
  orn 0FFFF0000h
  nsave
  quitn 2
  
end

procedure short_and

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nand
  acopyb
  quitn 2

end

procedure short_or

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nor
  acopyb
  quitn 2

end

procedure short_xor

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nxor
  acopyb
  quitn 2

end

procedure short_shift

  pusha
  newn   class : system'ShortNumber 4
  bcopya
  aloadsi 3    // ; load index
  nload
  popa
  nshift
  acopyb
  nload
  lessn labNegative 0

  andn 0FFFFh
  nsave
  quitn 3

labNegative:
  orn 0FFFF0000h
  nsave
  quitn 3

end

procedure short_not

  newn   class : system'ShortNumber 4
  bcopya
  aloadsi 1    // ; load source
  nnot         // ; invert
  acopyb
  quitn 1
  
end

procedure int_min

  bcopya
  dcopy 80000000h
  nsave
  acopyb
  quitn 1

end

procedure int_max

  bcopya
  dcopy 07FFFFFFFh
  nsave
  acopyb
  quitn 1

end

procedure int_copyshort

  bcopya
  aloadsi 2
  nload
  andn 0FFFFh
  nsave
  acopyb
  quitn 2

end

procedure int_add

  pusha
  newn   class : system'IntNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nadd
  acopyb
  quitn 2

end

procedure int_sub

  pusha
  newn   class : system'IntNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nsub
  acopyb
  quitn 2

end

procedure int_mul

  pusha
  newn   class : system'IntNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  nmul
  acopyb
  quitn 2

end

procedure int_div

  pusha
  newn   class : system'IntNumber 4
  bcopya
  popa
  ncopy
  aloadsi 2
  ndiv
  acopyb
  quitn 2

end
                 
procedure int_shift

  pusha
  newn   class : system'IntNumber 4
  bcopya
  aloadsi 3    // ; load index
  nload
  popa
  nshift
  acopyb
  quitn 2
  
end
                 
procedure int_shift2

  pusha
  bloadsi 4
  aloadsi 3    // ; load index
  nload
  popa
  nshift
  quitn 2
  
end

procedure int_not

  newn   class : system'IntNumber 4
  bcopya
  aloadsi 1    // ; load source
  nnot         // ; invert
  acopyb
  quitn 1
  
end

procedure long_min

  bcopya
  dcopy 80000000h
  nsave
  dcopy 32
  lshift
  acopyb
  quitn 1

end

procedure long_max

  bcopya
  dcopy 07FFFFFFFh
  nsave
  dcopy 32
  lshift
  dcopy 0FFFFFFFFh
  nsave
  acopyb
  quitn 1

end

procedure long_copy

  bcopya
  aloadsi 2
  lcopy
  acopyb
  quitn 2

end

procedure long_copyint
  
  bcopya
  aloadsi 2
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 2

end

procedure long_convertint
  
  bloadsi 3
  aloadsi 2
  nload
  nsave
  dcopy 0
  nsavei 1
  acopyb
  quitn 3

end

procedure long_copystruct

  bcopya
  aloadsi 2
  nload
  nsave
  aloadsi 3
  nload
  nsavei 1
  acopyb
  quitn 3

end

procedure long_equal

  bloadsi 2
  lequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure long_less

  bloadsi 2
  lless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure long_add

  pusha
  newn   class : system'LongNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  ladd
  acopyb
  quitn 2

end

procedure long_sub

  pusha
  newn   class : system'LongNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  lsub
  acopyb
  quitn 2

end

procedure long_mul

  pusha
  newn   class : system'LongNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  lmul
  acopyb
  quitn 2

end

procedure long_div

  pusha
  newn   class : system'LongNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  ldiv
  acopyb
  quitn 2

end
                 
procedure long_shift

  pusha
  newn   class : system'LongNumber 8
  bcopya
  aloadsi 3    // ; load index
  nload
  popa
  lshift
  acopyb
  quitn 2
  
end

procedure long_not

  newn   class : system'LongNumber 8
  bcopya
  aloadsi 1    // ; load source
  lnot         // ; invert
  acopyb
  quitn 1
  
end

procedure real_copyint
  
  bcopya
  aloadsi 2
  nload
  rcopy
  rsave
  acopyb
  quitn 2

end

procedure real_copylong
  
  bcopya
  aloadsi 2
  callr api : coreapi'longtoreal
  acopyb
  quitn 2

end

procedure real_equal

  bloadsi 2
  requal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure real_less

  bloadsi 2
  rless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure real_add

  pusha
  newn   class : system'RealNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  radd
  acopyb
  quitn 2

end

procedure real_sub

  pusha
  newn   class : system'RealNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  rsub
  acopyb
  quitn 2

end

procedure real_mul

  pusha
  newn   class : system'RealNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  rmul
  acopyb
  quitn 2

end

procedure real_div

  pusha
  newn   class : system'RealNumber 8
  bcopya
  popa
  lcopy
  aloadsi 2
  rdiv
  acopyb
  quitn 2

end

procedure char_getlen

  bloadsi 2
  nload
  // ; < 80 - 1
  ecopy 1
  lessn labEnd 80h
  eaddn 1
  // ; <= 800 - 2
  lessn labEnd 800h 
  eaddn 1
  lessn labEnd 10000h 
  // ; <= 10000 - 3
  eaddn 1
  // ; - 4
labEnd:
  dcopye
  nsave  
  quitn 2

end

procedure byte_copychar

  aloadsi 2
  nload
  
  lessn labErr 0  
  lessn labCopy 080h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure byte_copyint

  aloadsi 2
  nload
  
  lessn labErr 0  
  lessn labCopy 100h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure byte_copyword

  aloadsi 2
  nload

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure byte_copylong

  aloadsi 2
  dcopy 4
  bread
  dcopye
  elsen labErr 0  

  nload

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  dcopy 4
  ecopy 0
  bwrite
  quitn 3  

end

procedure byte_copyreal

  pushn 0
  pushn 0
  acopys 0
  bcopya

  aloadsi 4
  rint

  acopyb
  rload
  dcopyr

  lessn labErr 0  
  lessn labCopy 0FFh

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  popi 2
  bloadsi 3
  nsave
  quitn 3  

end

procedure byte_copystr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'strtoint
  nsave
  ifr      labErr 0

  aloadsi 3
  nload
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure byte_copywstr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'wstrtoint
  nsave
  ifr      labErr 0

  aloadsi 3
  nload
  
  lessn labErr2 0  
  lessn labExit 0FFh
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure word_copychar

  aloadsi 2
  nload
  
  lessn labErr 0  
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  bloadsi 3
  nsave
  quitn 3  

end

procedure word_copybyte

  aloadsi 2
  nload
  bloadsi 3
  nsave
  quitn 3  

end

procedure word_copyint

  bloadsi 3
  aloadsi 2

  nload
  lessn labNegative 0

  lessn labCopy 8000h

  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  nsave
  quitn 2  
  
labNegative:
  not

  lessn labCopyNeg 8000h

  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    
  
labCopyNeg:
  not
  nsave
  quitn 2  

end

procedure word_copylong

  aloadsi 2
  dcopy 4
  bread
  dcopye
  lessn labNegative 0  
  elsen labErr 0  

  nload
  lessn labCopy 8000h  
  jump  labErr

labCopy:
  bloadsi 3
  nsave
  quitn 3  

labNegative:
  elsen labErr 0FFFFFFFFh
  nload
  not
  lessn labCopyNegative 8000h  

labErr:
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopyNegative:
  nload
  bloadsi 3
  nsave
  quitn 3  

end

procedure word_copyreal

  pushn 0
  pushn 0
  acopys 0
  bcopya

  aloadsi 4
  rint

  acopyb
  rload
  dcopyr
  
  lessn labErr 0FFFF8000h
  lessn labCopy 08000h

labErr:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labCopy:
  popi 2
  bloadsi 3
  nsave
  quitn 3  

end

procedure word_copystr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'strtoint
  nsave
  ifr      labErr 0

  aloadsi 3
  nload
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure word_copywstr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'wstrtoint
  nsave
  ifr      labErr 0

  aloadsi 3
  nload
  
  lessn labErr2 0FFFF8000h
  lessn labExit 08000h
  
labErr2:  
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

labExit:
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure char_savebyte
  
  bloadsi 3
  aloadsi 2
  nload

  lessn labErr 0
  lessn labCopy 080h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 3

end

procedure char_saveshort
  
  bloadsi 3
  aloadsi 2
  nload

  lessn labErr 0
  lessn labCopy 010000h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 3

end

procedure char_saveint
  
  bloadsi 3
  aloadsi 2
  nload
  
  lessn labErr 0
  lessn labCopy 110000h

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

labCopy:

  nsave
  acopyb
  quitn 3

end

procedure int_copystr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'strtoint
  nsave
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure int_copywstr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'wstrtoint
  nsave
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure int_saveint

  aloadsi 2
  nload
  bloadsi 3
  nsave
  quitn 3

end

procedure int_savelong

  aloadsi 2
  dcopy 4
  bread
  dcopye
  lessn labNegative 0  
  elsen labErr 0  

  bloadsi 3
  nsave
  quitn 3  

labNegative:
  elsen labErr 0FFFFFFFFh

  bloadsi 3
  nsave
  quitn 3  

labErr:
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw    

end

procedure int_copyreal

  aloadsi 2
  bloadsi 3  
  rload
  dcopyr
  nsave
  aloadsi 1
  quitn 3

end

procedure long_copystr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'strtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure long_copywstr
  
  bloadsi  3
  ecopy    10
  aloadsi  2
  callr api : coreapi'wstrtolong
  nsave
  dcopye
  nsavei   1
  ifr      labErr 0
  quitn    3

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure long_copyreal

  aloadsi 2
  bloadsi 3
  rload
  nsave
  dcopy 0
  nsavei 1
  aloadsi 1
  quitn 3

end

procedure real_saveint
  
  bloadsi 3
  aloadsi 2
  nload
  rcopy
  rsave
  acopyb
  quitn 3

end

procedure real_copystr
  
  bloadsi  3
  dcopy    10
  aloadsi  2
  callr api : coreapi'strtoreal
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure real_copywstr
  
  bloadsi  3
  dcopy    10
  aloadsi  2
  callr api : coreapi'wstrtoreal
  ifr      labErr 0
  quitn    2

labErr:
  open 1
  pushr class : system'FormatException
  pushr const : %new[0]
  throw

end

procedure s_copychar

  aloadsi 2
  nload
  ifn labEmpty 0

  dcopy 8
  acopyr class : system'LiteralValue
  bcreate
  bcopya
  aloadsi 2
  callr api : coreapi'chartostr
  acopyb
  quitn 2
  
labEmpty:
  dcopy 1
  acopyr class : system'LiteralValue
  bcreate
  bcopya
  aloadsi 2
  nload
  nsave
  acopyb
  quitn 2

end

procedure ws_copychar

  aloadsi 2
  nload
  ifn labEmpty 0

  dcopy 3
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya
  aloadsi 2
  callr api : coreapi'chartowstr
  acopyb
  quitn 2

labEmpty:
  dcopy 1
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya
  aloadsi 2
  nload
  nsave
  acopyb
  quitn 2

end

procedure char_copystr
  
  aloadsi 2
  nload
  aloadsi 3

  callr api : coreapi'strtochar
  ifr   labErr 0

  dcopye
  bloadsi 4
  nsave
  acopyb
  quitn 4

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure char_copywstr
  
  aloadsi 2
  nload
  aloadsi 3

  callr api : coreapi'wstrtochar
  ifr   labErr 0

  dcopye
  bloadsi 4
  nsave
  acopyb
  quitn 4

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure s_copyint

  dcopy 10
  acopyr class : system'LiteralValue
  bcreate
  bcopya
  aloadsi 2
  dcopy 10

  callr api : coreapi'inttostr

  acopyb
  quitn 2

end

procedure ws_copyint

  dcopy 10
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya
  aloadsi 2
  dcopy 10

  callr api : coreapi'inttowstr

  acopyb
  quitn 2
  
end

procedure s_copylong

  dcopy 64
  acopyr class : system'LiteralValue  
  bcreate
  bcopya
  aloadsi 2
  dcopy 10

  callr api : coreapi'longtostr

  acopyb
  quitn 2

end

procedure ws_copylong

  dcopy 64
  acopyr class : system'WideLiteralValue  
  wcreate
  bcopya
  aloadsi 2
  dcopy 10

  callr api : coreapi'longtowstr

  acopyb
  quitn 2

end

procedure s_copyint_radix

  dcopy 11
  acopyr class : system'LiteralValue
  bcreate
  bcopya
  aloadsi 3
  nload
  aloadsi 2

  callr api : coreapi'inttostr

  acopyb
  quitn 3

end

procedure ws_copyint_radix

  dcopy 11
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya
  aloadsi 3
  nload
  aloadsi 2
  callr api : coreapi'inttowstr
  acopyb
  quitn 3

end

procedure s_copylong_radix

  dcopy 25
  acopyr class : system'LiteralValue
  bcreate
  bcopya

  aloadsi 3
  nload
  aloadsi 2
  callr api : coreapi'longtostr
  acopyb
  quitn 3

end

procedure ws_copylong_radix

  dcopy 25
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya

  aloadsi 3
  nload
  aloadsi 2
  callr api : coreapi'longtowstr
  acopyb
  quitn 3

end

procedure s_copyreal

  dcopy 30
  acopyr class : system'LiteralValue
  bcreate
  bcopya
  aloadsi 2
  dcopy 24
  callr api : coreapi'realtostr
  acopyb
  quitn 2

end

procedure ws_copyreal

  dcopy 30
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya
  aloadsi 2
  dcopy 24
  callr api : coreapi'realtowstr
  acopyb
  quitn 2

end

procedure str_copywstr

  aloadsi 2
  wlen
  shiftn -1
  acopyr class : system'LiteralValue
  bcreate
  bcopya  
  aloadsi 2
  callr api : coreapi'wstrtostr
  acopyb
  quitn 2
  
end

procedure wstr_copystr

  aloadsi 2
  blen
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya  
  aloadsi 2
  callr api : coreapi'strtowstr
  acopyb
  quitn 2  

end

procedure bs_create

  bcopya
  aloadsi 2
  nload
  acopyb
  acallvi 1
  quitn 2
  
end

procedure bs_copy

  bcopya
  aloadsi 2
  nload
  acopyb
  acallvi 1
  
  bcopya
  aloadsi 3
  copy
  acopyb
  quitn 3

end

procedure bs_copysubarr

  bcopya
  aloadsi 3
  nload
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4

  callr api : coreapi'subcopy
  
  acopyb
  quitn 4

end

procedure bs_getlen

  blen
  bloadsi 2
  nsave
  quitn 2

end

procedure bs_read

  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  acopyb

  bloadsi 4
  callr api : coreapi'subcopy
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_write

  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  pushd
  add
  ecopyd
  acopyb
  blen
  less labErr
  pope
  aloadsi 2
  nload
  aloadsi 4
  callr api : coreapi'insert
  quitn 4

labErr:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_writebyte

  blen
  ecopyd
  bcopya
  aloadsi 2
  nload
  notless labErr
  nload
  ecopyd
  aloadsi 3
  nload
  eswap
  bwriteb
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_readbyte

  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  breadb
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_writeword

  blen
  ecopyd
  bcopya
  aloadsi 2
  nload
  addn 3
  notless labErr
  nload
  ecopyd
  aloadsi 3
  nload
  eswap
  bwritew
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_readword

  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  breadw
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_writedword

  blen
  ecopyd
  bcopya
  aloadsi 2
  nload
  addn 3
  notless labErr
  nload
  ecopyd
  aloadsi 3
  nload
  eswap
  bwrite
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_readdword

  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  bread
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_writeqword

  blen
  bcopya
  ecopyd
  aloadsi 2
  nload
  addn 7
  notless labErr

  nload
  aloadsi 3
  ecopy 8
  callr api : coreapi'insert
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure bs_readqword

  bcopya
  blen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  bloadsi 3
  ecopy 8
  callr api : coreapi'subcopy
  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure sa_create

  bcopya
  aloadsi 2
  nload
  acopyb
  acallvi 1
  quitn 2

end

procedure sa_copy

  bcopya
  aloadsi 2
  nload
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  copy
  acopyb
  quitn 3

end

procedure sa_copysubarr

  bcopya
  aloadsi 3
  nload
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  callr api : coreapi'wsubcopy
  
  acopyb
  quitn 4

end

procedure sa_getlen

  wlen
  bloadsi 2
  nsave
  quitn 2

end

procedure sa_read

  bcopya
  wlen
  ecopyd
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0

  aloadsi 3
  pushe
  ecopyd
  nload
  add
  pope
  notless labErr
  lessn   labErr 0

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  acopyb
  bloadsi 4
  callr api : coreapi'wsubcopy
  
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure sa_write

  bcopya
  wlen
  ecopyd
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0

  aloadsi 3
  pushe
  ecopyd
  nload
  add
  pope
  notless labErr
  lessn   labErr 0

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  callr api : coreapi'winsert
  
  acopyb
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure sa_writeword

  wlen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  ecopyd
  aloadsi 3
  nload
  eswap
  shiftn -1
  bwritew
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw  

end

procedure sa_readword

  wlen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  eaddn -1
  notless labErr
  lessn   labErr 0

  acopyb
  shiftn -1
  breadw
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure ns_create

  bcopya
  aloadsi 2
  nload
  acopyb
  acallvi 1
  quitn 2

end

procedure ns_copy

  bcopya
  aloadsi 2
  nload
  acopyb
  acallvi 1
  
  bcopya
  aloadsi 3
  copy
  acopyb
  quitn 3

end

procedure ns_copysubarr

  bcopya
  aloadsi 3
  nload
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  callr api : coreapi'nsubcopy
  
  acopyb
  quitn 4
  
end

procedure arr_copysubarr

  bcopya
  aloadsi 3
  nload
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  callr api : coreapi'nsubcopy
  
  acopyb
  quitn 4
  
end

procedure ns_getlen

  aloadsi 1
  nlen
  bloadsi 2
  nsave
  quitn 2

end

procedure ns_read

  bcopya
  nlen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  aloadsi 3
  nload
  acopyb

  bloadsi 4
  callr api : coreapi'nsubcopy
  quitn 4
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure ns_write

  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  pushd
  add
  ecopyd
  acopyb
  nlen
  less labErr
  pope
  aloadsi 2
  nload
  aloadsi 4
  callr api : coreapi'ninsert
  quitn 4

labErr:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure ns_writedword

  nlen
  bcopya
  ecopyd
  aloadsi 2
  nload
  notless labErr
  ecopyd
  aloadsi 3
  nload
  eswap  
  nwrite
  quitn 3

labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure ns_readdword

  bcopya
  nlen
  ecopyd  
  aloadsi 2
  nload
  notless labErr
  lessn   labErr 0
 
  acopyb
  nread
  dcopye
  bloadsi 3
  nsave

  quitn 3
  
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw  

end

procedure s_empty

  dcopy 1
  acallvi 1

  ecopy 0
  dcopy 0
  nwrite
  quitn 1

end

procedure ws_empty

  dcopy 1
  acallvi 1

  ecopy 0
  dcopy 0
  nwrite
  quitn 1

end

procedure s_create

  bcopya
  aloadsi 2
  nload
  inc
  acopyb
  acallvi 1
  quitn 2

end

procedure ws_create

  bcopya
  aloadsi 2
  nload
  inc
  acopyb
  acallvi 1
  quitn 2

end

procedure s_copy

  bcopya
  aloadsi 2
  nload
  inc
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  copy
  acopyb
  quitn 3

end

procedure ws_copy

  bcopya
  aloadsi 2
  nload
  inc
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  copy
  acopyb
  quitn 3

end

procedure s_copyarr

  bcopya
  aloadsi 2
  nload
  inc
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  copy
  acopyb
  blen
  ecopy 0
  dec
  bwriteb
  quitn 3

end

procedure ws_copyarr

  bcopya
  aloadsi 2
  nload
  inc
  acopyb
  acallvi 1

  bcopya
  aloadsi 3
  copy
  acopyb
  wlen
  ecopy 0
  dec
  shiftn -1
  bwritew
  quitn 3

end

procedure s_fill
  
  pusha

  aloadsi 4
  nload
  pushd
  acopys 0
  pushn 0
  pushn 0
  bcopys 0
  pushn 0
  pushn 0
  
  callr api : coreapi'chartostr
  acopyb
  blen
  popi 2
  dec

  ifn lab1 1 
  ifn lab2 2
  ifn lab3 3

  popd
  popi 2
  popa

  pushd
  aloadsi 3
  shiftn -2
  inc
  
  acallvi 1
  bcopya

  blen
  dec  
  shiftn 2
  ecopyd
  dcopy 0

labNext4:
  eswapsi 0
  nwrite
  eswapsi 0
  addn 1
  next labNext4
  jump labEnd  
  
lab1:  
  aloadsi 6
  nload
  pushd
  inc
  aloadsi 4
  
  acallvi 1
  bcopya

  popd
  ecopyd
  dcopy 0

labNext1:
  eswapsi 0
  bwriteb
  eswapsi 0
  next labNext1
  popi 4
  jump labEnd  
    
lab2:
  popi 2
  popd
  popi 2
  popa

  pushd
  shiftn -1
  inc
  
  acallvi 1
  bcopya

  blen
  dec  
  ecopyd
  dcopy 0
  
labNext2:
  eswapsi 0
  bwritew
  eswapsi 0
  addn 1
  next labNext2
  jump labEnd  

lab3:
  popi 2
  popd
  popi 2
  popa

  pushd
  ecopyd
  add
  add
  add
  inc
  
  acallvi 1
  bcopya

  blen
  dec  
  ecopyd
  dcopy 0

labNext3:
  eswapsi 0
  bwrite
  eswapsi 0
  addn 2
  next labNext3
  jump labEnd  

labEnd:
  blen
  dec
  ecopy 0
  bwriteb

  acopyb
  quitn 3
  
end

procedure ws_fill
  
  bcopya

  aloadsi 3
  nload
  pushd
  lessn labFill 10000h
  
  aloadsi 3
  nload
  shiftn -1
  inc
  acopyb
  acallvi 1
  
  bcopya
  acopys 0
  callr api : coreapi'chartowstr
  pop
  
  dcopy 0
  nread
  pushe
  
  wlen
  dec  
  shiftn 1
  ecopyd
  dcopy 0

labNext2:
  eswapsi 0
  nwrite
  eswapsi 0
  addn 1
  next labNext2
  jump labEnd  
  
labFill:
  aloadsi 3
  nload
  inc
  acopyb
  acallvi 1

  bcopya
  wlen
  dec
  ecopyd  
  dcopy 0

labNext:
  eswapsi 0
  bwritew
  eswapsi 0
  addn 2
  next labNext

labEnd:
  pop
  wlen
  dec
  shiftn -1
  ecopy 0
  bwritew

  acopyb
  quitn 3
  
end

procedure s_equal

  bloadsi 2
  callr api : coreapi'sequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure ws_equal

  bloadsi 2
  callr api : coreapi'wequal
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure s_less

  bloadsi 2
  callr api : coreapi'sless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure ws_less

  bloadsi 2
  callr api : coreapi'wless
  selectr const : system'false const : system'true
  quitn 2
  
end

procedure s_add

  blen
  dec
  ecopyd
  bcopya
  aloadsi 2
  blen
  add
  acopyr class : system'LiteralValue
  bcreate
  bswap
  blen
  dec
  ecopyd
  dcopy 0
  callr api : coreapi'insert
  ecopyd
  aloadsi 2
  blen
  eswap
  callr api : coreapi'insert
  acopyb

  quitn 2

end                                                

procedure ws_add

  wlen
  dec
  ecopyd
  bcopya
  aloadsi 2
  wlen
  add
  acopyr class : system'WideLiteralValue
  wcreate
  bswap
  wlen
  dec
  ecopyd
  dcopy 0
  callr api : coreapi'winsert
  ecopyd
  aloadsi 2
  wlen
  eswap
  callr api : coreapi'winsert
  acopyb

  quitn 2

end                                                

procedure s_getat

  blen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  acopyb  
  callr api : coreapi'strtochar
  ifr labErr 0
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure ws_getat

  wlen
  bcopya
  ecopyd
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  acopyb  
  callr api : coreapi'wstrtochar
  ifr labErr 0
  bloadsi 3
  dcopye
  nsave
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure s_indexof

  bcopya
  aloadsi 2                 // ; load index
  nload
  aloadsi 3                 // ; load searching str
  callr api : coreapi'sseek
  acopyb
  bloadsi 4                 // ; load target
  nsave                    // ; save index
  quitn 4

end

procedure ws_indexof

  bcopya
  aloadsi 2                 // ; load index
  nload
  aloadsi 3                 // ; load searching str
  callr api : coreapi'wseek
  acopyb
  bloadsi 4                 // ; load target
  nsave                    // ; save index
  quitn 4

end

procedure s_indexof_char

  pusha
  aloadsi 4
  pushn 0
  pushn 0
  bcopys 0
  pushn 0
  pushn 0FFFFFFFEh
  callr api : coreapi'chartostr

  aloadsi 7                 // ; load index
  nload
  acopys 2
  bloadsi 4
  callr api : coreapi'sseek
  bloadsi 9                // ; load target
  nsave                    // ; save index
  popi 4
  popa
  quitn 4

end

procedure ws_indexof_char

  pusha
  aloadsi 4
  pushn 0
  pushn 0
  bcopys 0
  pushn 0
  pushn 0FFFFFFFEh
  callr api : coreapi'chartowstr

  aloadsi 7                 // ; load index
  nload
  acopys 2
  bloadsi 4
  callr api : coreapi'wseek
  bloadsi 9                // ; load target
  nsave                    // ; save index
  popi 4
  popa
  quitn 4
  
end

procedure s_insert

  // ; calculate length
  blen
  dec
  ecopyd
  
  aloadsi 3
  blen
  add

  acopyr class : system'LiteralValue
  bcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callr api : coreapi'insert

  // ; insert
  aloadsi 3
  ecopyd
  blen
  dec
  eswap
  callr api : coreapi'insert
  
  // ; copy right side 
  ecopyd
  aloadsi 2
  nload  
  eswap
  aloadsi 1
  callr api : coreapi'sadd

  acopyb
  quitn 3
  
end

procedure ws_insert

  // ; calculate length
  wlen
  dec
  ecopyd
  
  aloadsi 3
  wlen
  add

  acopyr class : system'WideLiteralValue
  wcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callr api : coreapi'winsert

  // ; insert
  aloadsi 3
  ecopyd
  wlen
  dec
  eswap
  callr api : coreapi'winsert
  
  // ; copy right side 
  ecopyd
  aloadsi 2
  nload  
  eswap
  aloadsi 1
  callr api : coreapi'wadd

  acopyb
  quitn 3
  
end

procedure s_delete

  bcopya

  // ; calculate length
  aloadsi 3
  nload
  ecopyd

  acopyb
  blen
  sub

  acopyr class : system'LiteralValue
  bcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callr api : coreapi'insert

  // ; copy right side 
  ecopyd          
  aloadsi 3
  nload
  add
  eswap
  aloadsi 1
  callr api : coreapi'sadd

  acopyb
  quitn 3
  
end

procedure ws_delete

  bcopya

  // ; calculate length
  aloadsi 3
  nload
  ecopyd

  acopyb
  wlen
  sub

  acopyr class : system'WideLiteralValue
  wcreate

  // ; copy left side               
  bcopya
  aloadsi 2
  nload
  ecopyd
  aloadsi 1
  dcopy 0
  callr api : coreapi'winsert                  

  // ; copy right side 
  ecopyd          
  aloadsi 3
  nload
  add
  eswap
  aloadsi 1
  callr api : coreapi'wadd

  acopyb
  quitn 3
  
end

procedure s_subs

  // ; calculate length
  aloadsi 3
  nload
  inc

  // ; create a new string  
  acopyr class : system'LiteralValue
  bcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  
  aloadsi 2
  nload

  aloadsi 1
  callr api : coreapi'subcopy
  
  acopyb
  blen
  ecopy 0
  dec
  bwriteb

  quitn 3

end

procedure ws_subs

  // ; calculate length
  aloadsi 3
  nload
  inc

  // ; create a new string  
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  
  aloadsi 2
  nload

  aloadsi 1
  callr api : coreapi'wsubcopy

  acopyb
  wlen
  ecopy 0
  dec
  shiftn -1
  bwritew

  quitn 3

end

procedure s_getlen

  aloadsi 1
  blen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure ws_getlen

  aloadsi 1
  wlen
  dec
  bloadsi 2
  nsave
  quitn 2

end

procedure arr_create

  bcopya
  aloadsi 2
  nload
  acopyb
  acallvi 1

  bcopya
  aloadsi 2
  nload
  
  ifn labSkip 0

  acopyr 0
labNext:
  dec
  xset
  elsen labNext 0

labSkip:
  acopyb
  quitn 2

end

procedure arr_empty

  dcopy 0
  acallvi 1
  quitn 1

end

procedure arr_getat

  bcopya
  len
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  get
  quitn 2

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure arr_setat

  bcopya
  len
  aloadsi 2
  nload  
  notless labErr
  lessn   labErr 0

  aloadsi 3
  set
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure arr_getlen

  bcopya
  len
  dcopye
  bloadsi 2
  nsave
  quitn 2

end


procedure args_getlen

  aloadsi 1
  bcopya
  dcopy 0
labSearch:
  get
  inc
  elser labSearch 0
  dec
  ecopyd
  bloadsi 2
  nsave
  quitn 2

end

procedure symbol_new

  pusha
  aloadsi 3   // ; read aName parameter
  pusha
  callr api : coreapi'load_symbol
  ifr labError 0
  popb 
  axsavebi 0
  acopyb
  quitn 2

labError:
  pop
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

end

procedure symbol_redirect

  pushe
  call
  pope
  ajumpvi 0

end

procedure handle_message

  bloadsi 1
  ifb labDefault

  nload
  eswap
  setverb EVAL_MESSAGE_ID
  setsubj 0
  else labEnd
  nload
  ecopyd
  aloadsi 1
  ajumpvi 0

labEnd:
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw

labDefault:
  bsredirect  
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw
  
end

procedure handle_verb

  bloadsi 1
  ifb labDefault
  
  setverb 0
  nload
  or
  ecopyd
  aloadsi 1
  ajumpvi 0
  
labDefault:
  bsredirect  
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw
  
end

procedure qualify_message

  bloadsi 1
  ifb labDefault

  setsubj 0
  nload
  or
  aloadsi 1
  ecopyd
  ajumpvi 0
  
labDefault:
  bsredirect  
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw
  
end

procedure subject_equal

  aloadsi 1
  bloadsi 2
  nequal
  selectr const : system'false const : system'true
  quitn 2
  
end

// ; callstack_load(array,length,out'length)
procedure callstack_load

  aloadsi 3
  pusha
  aloadsi 3
  nload
  pushd
  aloadsi 3
  pusha
  callr api : coreapi'load_callstack
  quitn 3

end

// ; callstack_readaddressinfo (index, shortarray, length)
procedure callstack_readaddressinfo

  pusha
  aloadsi 5
  pusha
  aloadsi 5
  pusha
  aloadsi 5
  pusha
  aloadsi 5
  aloadai 0
  pusha

  // ; load_addressinfo(array,index,out buffer, out length)
  callr api : coreapi'load_addressinfo
  popa
  quitn 4
  
end

procedure api_alloc_index

  pusha

  callr system'rt_sync
  pusha
labWait:
  snop
  trylock
  elser labWait 0 

  callr api : coreapi'alloc_index
  bcopya
  aloadsi 4
  set  

  popa
  freelock

  popb
  nsave
  acopyb

  quitn 2

end

procedure api_free_index
                      
  callr system'rt_sync
labWait:
  snop
  trylock
  elsen labWait 0 

  aloadsi 1
  nload
  callr api : coreapi'free_index

  freelock

  quitn 2
  
end

procedure save_int

  bloadsi 2
  nload
  nsave
  quitn 2

end

procedure ptr_get

  pusha
  callr api : coreapi'resolve_index

  quitn 1

end

procedure dptr_copy

  bcopya
  dloadsi 2
  nsave
  acopyb
  quitn 2

end

procedure dptr_readint

  nload
  pushd
  popa
  nload
  bloadsi 2
  nsave
  aloadsi 1
  quitn 2

end

procedure dptr_readbytearray

  bloadsi 2
  aloadsi 3
  nload
  ecopyd
  aloadsi 1

  callr api : coreapi'subcopy  
  
  quitn 3

end

procedure dptr_ret_double

  bloadsi 2
  callr api : coreapi'ret_double
  quitn 2

end

procedure arr_realloc

  aloadsi 1
  flag
  andn elStructure
  elsen labErr 0
  bcopya
  aloadsi 2
  nload
  class
  create
  bloadsi 1
  len
  dcopye        // ; index - old length
  bcopya
  len           // ; ext - new length
  less labExpand

  aloadsi 1

  pusha
  len
  dcopy 0
labCopy:
  get
  bswapsi 0
  xset
  bswapsi 0
  next labCopy
  pop

  acopyb
  quitn 2

labExpand:
  ecopyd
  dcopy 0
  pushb
labNext:
  bloadsi 2
  get
  bloadsi 0
  xset
  inc
  less labNext

  len
  acopyr const : system'nil
labNext2:
  xset
  inc
  less labNext2
  popa
  quitn 2

end

procedure r_abs

  aloadsi 2
  bloadsi 3
  rabs

  quitn 3

end

procedure r_exp

  aloadsi 2
  bloadsi 3
  rexp

  quitn 3

end

procedure r_ln

  aloadsi 2  
  bloadsi 3
  rln

  quitn 3

end

procedure r_round

  aloadsi 2  
  bloadsi 3
  rround
  
  quitn 3

end

procedure r_truncate

  aloadsi 2  
  bloadsi 3
  rint
  
  quitn 3

end

procedure r_sin

  aloadsi 2
  bloadsi 3
  rsin
  
  quitn 3

end

procedure r_cos

  aloadsi 2
  bloadsi 3
  rcos
  
  quitn 3

end

procedure r_arctan

  aloadsi 2
  bloadsi 3
  rarctan
  
  quitn 3
  
end

procedure r_pi

  bloadsi 2
  callr api : coreapi'rpi
  
  quitn 1
  
end

procedure r_sqrt

  aloadsi 2  
  bloadsi 3
  callr api : coreapi'rsqrt

  quitn 3

end

procedure ws_copysubarr

  aloadsi 3
  nload
  ifn labEmpty 0
    
  aloadsi 4
  ecopyd
  callr api : coreapi'wslen_ch

  acopyr class : system'WideLiteralValue
  inc
  wcreate
  bcopya
  
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4

  callr api : coreapi'ws_copychars
  
  acopyb
  wlen
  ecopy 0
  dec
  shiftn -1
  bwritew
  quitn 4
  
labEmpty:
  dcopy 1
  acopyr class : system'WideLiteralValue
  wcreate
  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 4
  
end

procedure s_copysubarr

  aloadsi 3
  nload
  ifn labEmpty 0
    
  aloadsi 4
  ecopyd
  callr api : coreapi'slen_ch
            
  acopyr class : system'LiteralValue
  inc
  bcreate
  bcopya

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4

  callr api : coreapi's_copychars
  
  acopyb
  blen
  ecopy 0
  dec
  bwriteb
  quitn 4
  
labEmpty:
  dcopy 1
  acopyr class : system'LiteralValue
  bcreate
  bcopya
  dcopy 0
  nsave
  acopyb
  quitn 4

end

procedure expression_dispatch

  pushe
  pusha
  copym EVAL_MESSAGE_ID
  acallvi 1
  pope
  asavesi 1
  ajumpvi 0

end

procedure dlong_empty

  bcopya
  ecopy 0
  dcopy 0
  nwrite
  dcopy 1
  nwrite
  dcopy 2
  nwrite
  dcopy 3
  nwrite
  quitn 1

end

procedure s_save

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0
  callr api : coreapi'strtochararray
  bloadsi 5
  dcopye
  nsave
  popa

  quitn 4

end

procedure ws_save

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0
  callr api : coreapi'wstrtochararray
  bloadsi 5
  dcopye
  nsave
  popa
  
  quitn 4

end

procedure s_saveraw

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0

  pushe                                               
  pushd
  dcopy 0

labNext:
  esavesi 1
  breadb
  inc
  dswapsi 0
  bwriteb
  inc
  eloadsi 1
  dswapsi 0
  less labNext

  popi 2
  popa

  quitn 4

end

procedure ws_saveraw

  pusha
  bloadsi 4
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  aloadsi 0

  pushe                                               
  pushd
  dcopy 0

labNext:
  esavesi 1
  wread
  inc
  dswapsi 0
  wwrite
  inc
  eloadsi 1
  dswapsi 0
  less labNext

  popi 2
  popa

  quitn 4

end

procedure ns_move

  pusha 

  // ; insert
  aloadsi 4
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi  0
  aloadsi 5
  pushai 0

  callr api : coreapi'nmove

  pop  
  popa
  quitn 4
  
end

procedure s_encode

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callr api : coreapi's_encode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    

  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure ws_encode

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callr api : coreapi'ws_encode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    

  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure sa_encode

  aloadsi 3
  nload
  shiftn -1
  ecopyd
  aloadsi 2
  nload
  shiftn -1
  aloadsi 4
  bloadsi 5
  
  callr api : coreapi'ws_encode
  ifr labErr 0

  dcopye  
  bloadsi 6
  nsave
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw

end

procedure s_decode

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callr api : coreapi's_decode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    
  
  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure ws_decode

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callr api : coreapi'ws_decode
  ifr labErr 0

  pushd
  dcopye  
  bloadsi 7
  nsave

  aloadsi 3
  nload
  ecopyd
  popd
  sub    

  bloadsi 3
  nsave
  aloadsi 1
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure s_charcount

  bcopya
  aloadsi 2
  blen
  callr api : coreapi'strcharlen
  aloadsi 3
  nsave

end

procedure ws_charcount

  bcopya
  aloadsi 2
  wlen
  callr api : coreapi'wstrcharlen
  aloadsi 3
  nsave

end

procedure sa_copychar

  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi 4
  callr api : coreapi'chartoshorts
  dcopye
  bloadsi 5
  nsave
  
  quitn 5

end

procedure ba_copychar

  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi 4
  callr api : coreapi'chartobytes
  dcopye
  bloadsi 5
  nsave
  
  quitn 5

end

procedure s_copybuf

  aloadsi 3
  nload  
  inc
  acopyr class : system'LiteralValue
  bcreate

  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callr api : coreapi'insert
  
  acopyb
  quitn 4

end

procedure ws_copybuf

  aloadsi 3
  nload  
  inc
  acopyr class : system'WideLiteralValue
  wcreate

  bcopya
  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  
  callr api : coreapi'winsert
  
  acopyb
  quitn 4

end

procedure handle_wrap

  bcopya

  aloadbi 0
  pushe
  asavesi 2

  len
  dcopye
  elsen labGroup 02
  
  aloadbi 1
  pope
  ajumpvi 0

labGroup:
  dcopy 1

labNext:
  pope
  get
  pushd
  mindex
  elsen labFound 0FFFFFFFFh
  popd
  pushe
  inc
  len
  less labNext

  pop
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw

labFound:
  pop
  ajumpvi 0

end

procedure handle_extension

  asavesi 1
  pushe
  bcopya
  dcopy 1

labNext:
  pope
  get
  bsredirect
  pushe
  bloadsi 2
  inc
  len
  less labNext
  
  pope
  aloadbi 0
  ajumpvi 0

end

procedure handle_group

  open 5
  reserve 2

  dcopye
  dsavefi -3
  dcopy 0  
  dsavefi -2

  pusha

  hook labNotFound

// ; define the message length
  dloadfi -3
  ecopyd
  dcopycount
  inc
  
// ; copy message
  bcopyf -5
labNextParam:
  get
  pusha
  dec
  elsen labNextParam 0

  bloadfi 1

labNext:
  len
  dloadfi -2
  if labEnd
  get
  inc
  dsavefi -2

  dloadfi -3
  ecopyd
  acallvi 0

labReturn:
  unhook
  dloadfi -3
  ecopyd
  restore 4
  close

  equit
  
labNotFound:  
  dloadsi 3
  address labReturn
  else labContinueError

  close
  pop
  bloadfi 1
  jump labNext

labContinueError:
  unhook
  throw
                         
labEnd:
  unhook
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw
        
end

procedure load_classname

  aloadsi 4
  pusha
  aloadsi 4
  pusha
  aloadsi 4
  pusha
  callr api : coreapi'load_classname
  ifr labErr 0
  quitn 4
 
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

end

procedure arrptr_getLen

  ecopy 0
  aloadsi 2
  flag
  andn elStructure
  elsen labSkip 0
  bcopya
  len
labSkip:
  dcopye
  bloadsi 3
  nsave
  quitn 3

end

procedure arrptr_get

  aloadsi 1
  flag
  andn elStructure
  elsen labErr 0
  bcopya
  len
  aloadsi 2
  nload
  notless labErr
  lessn labErr 0
  get
  quitn 2

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure arrptr_set

  aloadsi 1
  flag
  andn elStructure
  elsen labErr 0
  bcopya
  len
  aloadsi 2
  nload
  notless labErr
  lessn labErr 0
  aloadsi 3
  set
  bcopya
  quitn 3

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

procedure class_getClass

  bcopya
  class
  quitn 1

end

procedure class_indexOfMsg

  bcopya
  aloadsi 3 // ; get message
  nload // ; load message id
  acopyb
  mindex
  ifn labFalse 0FFFFFFFFh
  acopyr const : system'true
  quitn 2

labFalse:
  acopyr const : system'false
  quitn 2

end

procedure handle_tape

  dcopyverb
  eswap
  
  elsem labDefault EVAL_MESSAGE_ID

  ecopyd
  dcopycount
  inc
  ecopyd  

  open 5
  reserve 2
  pusha
  
  dsavefi -3
  dcopy 0  
  dsavefi -2
  
  pushn 0
  
  bcopyf -6
  
// ; copy message + self
labNextParam:
  get
  pusha
  next labNextParam

  bloadfi 1

labNext:
  len
  dloadfi -2
  if labEnd
  get
  inc
  dsavefi -2

  flag
  andn elMessage
  elsen labMessage 0
  pusha
  jump labNext

labMessage:
  nload
  ecopyd
  aloadsi 0  
  acallvi 0
  pusha
  bloadfi 1
  jump labNext

labEnd:
  popa

  dloadfi -3
  ecopyd
  restore 4
  close

  equit

labDefault:
  ecopyd
  bsredirect  
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw

end

procedure handle_selector

  pushe
  dcopysubj
  pushd
  bcopya
  pushn 0

labNext:
  len
  dloadsi 0
  if labEnd
  get
  inc
  dsavesi 0

  flag
  andn elSubject
  ifn  labNext 0

  nload
  ecopyd
  dloadsi 1
  else labNext

labCall:
  dloadsi 0
  get
  popi 2
  pope
  setsubj 0
  dcopye
  ifn labQuit GET_MESSAGE_ID
  ajumpvi 0

labQuit:
  quitn 1
  
labEnd:
  popi 3
  open 1
  pushr class : system'MethodNotFoundException
  pushr const : %new[0]
  throw

end

procedure win_thread_start

  acopys 1  
  pusha
  callr api : coreapi'resolve_index
  pusha
  callr api : coreapi'start_thread
  ifr labError 0
  quitn 1

labError:
  open 1
  pushr class : system'NotSupportedException
  pushr const : %new[0]
  throw
  
end

procedure win_fillWndClass

  bloadsi 2
  aloadsi 4
  nload
  nsavei 0
  aloadsi 5
  nload
  nsavei 4
  aloadsi 6
  nload
  nsavei 7
  aloadsi 3
  axsavebi 9    
  acopyr intern : system'core_routines'win_WndProc
  axsavebi 1
  dcopy 0
  nsavei 2
  nsavei 3
  nsavei 5
  nsavei 6
  nsavei 8
  quitn 6

end

// ; win32 constants
define WM_CREATE            1
define WM_DESTROY           2
define WM_SIZE              5
define WM_PAINT             000Fh
define WM_CLOSE             0010h
define WM_SETCURSOR         0020h
define WM_COMMAND           0111h
define GWL_USERDATA         0FFFFFFEBh

procedure win_WndProc

  dloadsi 2
  ifn labPaint WM_PAINT
  ifn labCreate WM_CREATE
  ifn labCursor  WM_SETCURSOR
  ifn labSize  WM_SIZE
  ifn labCommand WM_COMMAND
  ifn labDestroy WM_DESTROY
  ifn labDestroy WM_CLOSE

labEnd:
  eloadsi 4
  pushe
  eloadsi 4
  pushe
  pushd
  eloadsi 4
  pushe
  callextr extern : 'dlls'USER32.DefWindowProcW
  quitn 4
  
labCreate:
  callr api : coreapi'openframe

  pushn 0
  bcopys 0
  
  pushb
  aloadfi -7
  pusha
  acopyf -6
  pusha
  acopyf -5
  pusha
  acopyf -4
  pusha

  aloadfi -7
  pusha
  callr api : coreapi'resolve_index  

  pusha  
  xindexrm system'winforms'WindowCallback %eval&wm_create&hwnd$winforms&int$&int$&win_createstruct$winforms&vint$[5]


  acallvd
  popa

  callr api : coreapi'closeframe

  quitn 4
  
labDestroy:
  callr api : coreapi'openframe

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callr api : coreapi'resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback %eval&hwnd$winforms&int$&vint$[3]
  acallvd
  popa

  callr api : coreapi'closeframe

  quitn 4
  
labCommand:
  callr api : coreapi'openframe

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callr api : coreapi'resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -7
  pushb
  bcopyf -6
  pushb
  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback %eval&wm_command&hwnd$winforms&int$&int$&hwnd$winforms&vint$[5]  
  acallvd
  popa

  callr api : coreapi'closeframe

  quitn 4
  
labCursor:
  callr api : coreapi'openframe

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callr api : coreapi'resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -7
  pushb
  bcopyf -6
  pushb
  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback %eval&hwnd$winforms&int$&hwnd$winforms&int$&vint$[5]
  acallvd
  popa

  callr api : coreapi'closeframe

  quitn 4
  
labPaint:
  callr api : coreapi'openframe

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callr api : coreapi'resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback %eval&wm_paint&hwnd$winforms&int$&vint$[3]
  acallvd
  popa

  callr api : coreapi'closeframe

  quitn 4
  
labSize:
  callr api : coreapi'openframe

  aloadsi 4
  pushn GWL_USERDATA
  pusha
  callextr extern : 'dlls'USER32.GetWindowLongW
  ifn labEnd2 0  

  callr api : coreapi'resolve_index_value  
  pushn 0
  bcopys 0  
  pushb

  bcopyf -7
  pushb
  bcopyf -6
  pushb
  bcopyf -5
  pushb
  bcopyf -4
  pushb

  pusha  
  xindexrm system'winforms'WindowCallback %eval&hwnd$winforms&int$&int$&int$&vint$[5]  
  acallvd
  popa

  callr api : coreapi'closeframe

  quitn 4

labEnd2:
  callr api : coreapi'closeframe
  jump  labEnd
  
end

procedure lnx_getargc

  dcopy 0
  callr api : coreapi'getnarg
  dcopye
  bloadsi 2
  nsave
  quitn 2

end

procedure lnx_getarg

  pusha
  aloadsi 5
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi 4
  callr api : coreapi'copysarg
  dcopye
  bloadsi 5
  nsave
  popa
  quitn 4

end

procedure class_filterMsg

  aloadsi 2
  nload
  ecopyd
  aloadsi 3
  nload
  bloadsi 1
  class
  bloadsi 4
  
  // ; ecx - filter, esi - vmt starting index, edi - result array, eax - class ; output esi - array length
  callr api : coreapi'filter_vmt  

  bloadsi 5
  nsave

  quitn 5

end

procedure subj_copymssg

  bcopya
  aloadsi 2
  nload
  andn INV_PARAM_MASK
  ecopyd
  setverb 0
  dcopye
  nsave
  acopyb
  quitn 2

end

procedure mssg_getsubj

  pusha
  newn   class : system'Signature 4
  bcopya
  popa
  nload
  andn INV_PARAM_MASK
  ecopyd
  setverb 0
  dcopye
  nsave
  acopyb

  quitn 1

end

procedure subj_load

  pusha
  aloadsi 3
  pusha
  callr api : coreapi'load_subject
  ifn labErr 0
  popb
  nsave
  acopyb

  quitn 2
 
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

  quitn 2

end

procedure load_subjname

  aloadsi 4
  pusha
  aloadsi 4
  pusha
  aloadsi 4
  nload
  ecopyd
  callr api : coreapi'load_subjname
  ifr labErr 0
  quitn 4
 
labErr:
  open 1
  pushr class : system'InvalidArgumentException
  pushr const : %new[0]
  throw

end

procedure int_hashcode

  bloadsi 2
  ncopy
  quitn 2

end

procedure long_save

  bloadsi 2
  lcopy
  quitn 2

end

procedure long_savehi

  bloadsi 2
  nloadi 1
  nsave
  quitn 2

end

procedure handle_castover

  bsredirect  

  open 5
  reserve 2

  dcopye
  dsavefi -3
  dcopy 0  
  dsavefi -2

  pusha

  hook labNotFound

labNext:
  len
  dloadfi -2
  if labEnd

// ; define the message length
  dloadfi -3
  ecopyd
  dcopycount
  inc
  
// ; copy message
  bcopyf -5
labNextParam:
  get
  pusha
  dec
  elsen labNextParam 0

  bloadfi 1
  dloadfi -2
  get
  inc
  dsavefi -2

  dloadfi -3
  ecopyd
  acallvi 0
  
  bloadfi 1
  jump labNext

labNotFound:  
  dloadsi 3
  address labReturn
  else labContinueError
  
  close
  pop
  bloadfi 1
  jump labNext

labContinueError:
  unhook
  throw
                         
labEnd:
  unhook
  dloadfi -3
  ecopyd
  restore 4
  close

  equit
        
end

procedure sa_decode

  aloadsi 3
  nload
  ecopyd
  aloadsi 2
  nload
  aloadsi 4
  bloadsi 5
  
  callr api : coreapi'ws_decode
  ifr labErr 0

  dcopye  
  bloadsi 6
  nsave
  
  quitn 6

labErr:
  open 1
  pushr class : system'OutOfRangeException
  pushr const : %new[0]
  throw
  
end

//        ELENA Language 2.0
//      inline system library

define elMessage            000008000h
define elRole               000004000h
define elSubject            000002000h

define NEW_MESSAGE_ID       084000000h
define NEW_MESSAGE_ID_1     084000001h
define IFFAILED_MESSAGE_ID  0A1000001h
define EVAL_MESSAGE_ID      085000000h
define RAISE_MESSAGE_ID     0A0000001h
define GET_MESSAGE_ID       086000000h

procedure inline'redirect

  bsredirect
  throw

end

procedure inline'bs_equalword

  pushb
  aloadsi 3
  bcopya

  aloadsi 4
  dloadai 0
  acopyb
  bstest labErr
 
  pushn 0
  acopys 0
  bsgetword
  pusha
  aloadsi 7
  nequal
  popi 2
  delse labFalse

  acopyr  const : system'true
  popb
  quitn 4

labFalse:  
  acopyr  const : system'false
  popb
  quitn 4
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'bs_equalint

  pushb
  aloadsi 3
  bcopya

  aloadsi 4
  dloadai 0
  acopyb
  bstest labErr
 
  pushn 0
  acopys 0
  bsgetint
  pusha
  aloadsi 7
  nequal
  popi 2
  delse labFalse

  acopyr  const : system'true
  popb
  quitn 4

labFalse:  
  acopyr  const : system'false
  popb
  quitn 4
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'_console_trimline

  pushb
  aloadsi 3
  bcopya

  wsgetlen
  ddec

  pushn 0Ah
  pushn 0Dh
  pushn 0
  acopys 0
  pusha
  acopyb
  wsgetat
  acopys 3
  nequal
  delse labFalse
  
  acopyb
  wsgetlen
  ddec
  ddec  
  wsgetat
  acopys 2
  nequal
  delse labFalse
  popi 3
  
  // ; trim LRLN           
  acopyb
  wsgetlen
  ddec
  ddec
  wssetlen
  
  pushn 0
  acopys 0
  wssetat
  popi 2

  acopyr  const : system'true
  popb
  quitn 2

labFalse:  
  popi 4
  acopyr  const : system'false
  popb
  quitn 2

end

procedure inline'ws_concat

  pushn 0
  aloadsi 3  // ; s1
  wsgetlen
  dsavesi 0
  aloadsi 4  // ; s2
  wsgetlen
  daddsi 0
  pop
  acopyr class : system'LiteralValue
  wscreate
  pushb
  bcopya
  aloadsi 3
  wscopy
  aloadsi 4
  wsadd  
  acopyb
  popb
  quitn 3

end                                                

procedure inline'n_copystr

  aloadsi 3
  pushb
  bcopya
  dcopy 10
  aloadsi 3
  ncopystr
  delse labErr
  popb
  quitn 2

labErr:
  callr system'FormatException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'l_copystr

  aloadsi 3
  pushb
  bcopya
  dcopy 10
  aloadsi 3
  lcopystr
  delse labErr
  popb
  quitn 2

labErr:
  callr system'FormatException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'r_copystr

  aloadsi 3
  pushb
  bcopya
  dcopy 10
  aloadsi 3
  rcopystr
  delse labErr
  popb
  quitn 2

labErr:
  callr system'FormatException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end


procedure inline'ws_copyint

  pushb
  dcopy 10
  acopyr class : system'LiteralValue
  wscreate
  bcopya
  aloadsi 3
  dcopy 10
  wscopyint
  acopyb
  popb
  quitn 2

end

procedure inline'ws_copyint_radix

  pushb
  dcopy 32
  acopyr class : system'LiteralValue
  wscreate
  bcopya
  aloadsi 4
  dloadai 0
  aloadsi 3
  wscopyint
  acopyb
  popb
  quitn 2

end

procedure inline'ws_copylong

  pushb
  dcopy 64
  acopyr class : system'LiteralValue
  wscreate
  bcopya
  aloadsi 4
  dloadai 0
  aloadsi 3
  dcopy 10
  wscopylong
  acopyb
  popb
  quitn 2

end

procedure inline'ws_copylong_radix

  pushb
  dcopy 20
  acopyr class : system'LiteralValue
  wscreate
  bcopya
  aloadsi 4
  dloadai 0
  aloadsi 3
  wscopylong
  acopyb
  popb
  quitn 2

end

procedure inline'ws_copyreal

  pushb
  dcopy 30
  acopyr class : system'LiteralValue
  wscreate
  bcopya
  aloadsi 3
  dcopy 24
  wscopyreal
  acopyb
  popb
  quitn 2
end

procedure inline'ws_copyreal_len

  pushb
  dcopy 30
  acopyr class : system'LiteralValue
  wscreate
  bcopya
  aloadsi 4
  dloadai 0
  aloadsi 3
  wscopyreal
  acopyb
  popb
  quitn 2
end

procedure inline'ws_copybuf

  pushb

  aloadsi 4
  dloadai 0
  acopyr class : system'LiteralValue
  wscreate
  bcopya

  pushn 0
  acopys 0
  pusha

  aloadsi 6
  dloadai 0
  aloadsi 5
  wscopybuf
  popi 2
  acopyb
  popb
  quitn 3

end

procedure inline'handle_extension

  pushai  1
  aloadai 0
  popsi   2
  bsredirect
  aloadsi 1
  ajumpvi 0

end

procedure inline'handle_arraygroupextension

  aloadai 0
  bsgredirect
  aloadsi 1
  aloadai 1
  ajumpvi 0

end

procedure inline'handle_roles

  bsgredirect
  throw

end

procedure inline'bs_write

  pushb
  bcopya

  aloadsi 3
  dloadai 0
  acopyb
  bstest labErr
 
  aloadsi 4
  daddai 0
  acopyb
  bstest labErr
  
  aloadsi 4
  dloadai 0
  pushsi 3
  aloadsi 6
  bssetbuf
  pop

  acopyb
  popb
  quitn 4
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end


procedure inline'bs_writestr

  pushb
  bcopya

  aloadsi 3
  dloadai 0
  acopyb
  bstest labErr
 
  aloadsi 4
  wsgetlen
  pushn 0
  dsavesi 0
  daddsi 0
  acopyb
  bstest labErr
  
  dloadsi 0
  pop
  pushsi 3
  aloadsi 5
  bscopystr
  pop

  acopyb
  popb
  quitn 3
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'bs_read

  pushb
  bcopya

  aloadsi 3
  dloadai 0
  acopyb
  bstest labErr
 
  aloadsi 4
  daddai 0
  acopyb
  bstest labErr
  
  aloadsi 4
  dloadai 0
  pushsi 3
  aloadsi 6
  bsgetbuf
  pop

  acopyb
  popb
  quitn 4
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'bs_findbyte

  pushb
  bcopya

  aloadsi 3
  dloadai 0
  acopyb
  bstest labErr
 
  pushsi 4
  aloadsi 6
  bsindexof
  pop

  aloadsi 6
  dsaveai 0  
  acopyb
  popb
  quitn 3
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'bs_findshort

  pushb
  bcopya

  aloadsi 3
  dloadai 0
  acopyb
  bstest labErr
 
  pushsi 4
  aloadsi 6
  bsindexofword
  pop

  aloadsi 6
  dsaveai 0  
  acopyb
  popb
  quitn 3
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'array_getat

  pusha
  aloadsi 3
  dloadai 0
  popa
  test labErr
  aloadd
  quitn 2
  
labErr:
  callr system'OutOfRangeException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end
                                 
procedure inline'array_setat

  pushb
  bcopya
  aloadsi 3
  dloadai 0
  acopyb
  test labErr

  aloadsi 4
  set

  acopyb
  popb
  quitn 3
  
labErr:
  callr system'OutOfRangeException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'object_equal

  aloadsi 1
  athensi labTrue 2
  acopyr const : system'false
  quitn 2
  
labTrue:
  acopyr const : system'true
  quitn 2

end

procedure inline'bs_readword

  pushb
  aloadsi 3
  bcopya

  aloadsi 4
  dloadai 0
  acopyb
  bstest labErr
 
  aloadsi 5
  bsgetword

  acopyb
  popb
  quitn 3
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'ws_fill
  
  pushb
  bcopya
  wsgetlen

  // ; set zero at the end
  pushn 0
  acopys 0
  wssetat
  pop

  // ; fill the literal 
  aloadsi 4

labNext:
  ddec
  wssetat
  dthen labNext

  acopyb
  popb
  quitn 3

end

procedure inline'qualify_message

  msetsubj 0
  mloadai  0
  aloadsi  1
  ajumpvi  0

end

procedure inline'new_signature

  pushm
  dcopy 4
  acopyr class : system'dynamic'DispatchSubject
  bscreate
  popm
  mcopysubj
  msaveai 0
  quitn 2

end
                 
procedure inline'int_shift

  aloadsi 3    // ; load index
  dloadai 0
  pushsi 2     // ; push value
  aloadsi 5    // ; load target
  nload        // ; copy content
  nshift
  pop
  quitn 3
  
end

procedure inline'long_shift

  aloadsi 3    // ; load index
  dloadai 0
  pushsi 2     // ; push value
  aloadsi 5    // ; load target
  lload        // ; copy content
  lshift
  pop
  quitn 3
  
end

procedure inline'int_not

  pushsi 2     // ; push value
  aloadsi 4    // ; load target
  nload        // ; load content
  nnot         // ; invert
  pop
  quitn 2
  
end

procedure inline'long_not

  pushsi 2     // ; push value
  aloadsi 4    // ; load target
  lload        // ; copy content
  lnot         // ; invert
  pop
  quitn 2
  
end

procedure inline'array_getlen

  aloadsi 2
  getlen
  aloadsi 3
  dsaveai 0
  quitn 2

end

procedure inline'ws_insert

  pushb

  // ; calculate length
  pushn 0
  aloadsi 4
  wsgetlen
  acopys 0
  dsaveai 0
  aloadsi 6
  wsgetlen
  acopys 0
  daddai 0

  // ; create a new string  
  acopyr class : system'LiteralValue
  wscreate
  bcopya

  // ; copy left side               
  aloadsi 5
  dloadai 0
  acopys 0
  dsaveai 0                        
  pusha
  pushn 0
  acopys 0
  pusha
  aloadsi 7
  wscopystr
  popi 2

  // ; copy substring                             
  aloadsi 7
  wsadd

  // ; copy the rest
  aloadsi 5
  wsgetlen
  acopys 1
  dsubai 0
  aloadsi 5
  wsaddstr
  popi 2
  acopyb
  popb
  quitn 4
  
end

procedure inline'ws_delete

  pushb
  
  // ; calculate length
  pushn 0
  aloadsi 4
  wsgetlen
  aloadsi 6
  dsubai 0
  acopys 0
  dsaveai 0

  // ; create a new string  
  acopyr class : system'LiteralValue
  wscreate
  bcopya

  // ; copy left side               
  aloadsi 5             
  dloadai 0
  acopys 0
  dsaveai 0             // ; var = index
  pusha
  pushn 0
  acopys 0
  pusha
  aloadsi 7
  wscopystr
  popi 2

  // ; copy the rest
  acopys 1
  dloadai 0  
  aloadsi 7            // ; length
  daddai 0
  acopys 1
  dsaveai 0
  aloadsi 5
  wsgetlen
  pusha
  acopys 2
  dsubai 0
  popa 
  wsaddstr                                      
  popi 2
  acopyb
  popb                                                    
  quitn 4

end

procedure inline'ws_subs

  pushb
  
  // ; calculate length
  aloadsi 5
  dloadai 0

  // ; create a new string  
  acopyr class : system'LiteralValue
  wscreate
  bcopya

  // ; copy left side               
  aloadsi 5
  dloadai 0
  aloadsi 3
  pushsi 4
  wscopystr
  pop
  acopyb
  popb
  quitn 4

end

procedure inline'ws_refresh

  pushb
  aloadsi 3
  bcopya

  wsgetlen
  pushn 0
  acopys 0
  wssetat
  pop

  popb
  quitn 2

end

procedure inline'bs_writeword

  pushb
  aloadsi 3
  bcopya

  aloadsi 4
  dloadai 0
  acopyb
  bstest labErr
 
  aloadsi 5
  bssetword

  acopyb
  popb
  quitn 4
  
labErr:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'ws_equalchar

   pushb
   bcopya
   wsgetlen
   delsen labFalse 1
   pushn 0
   acopys 0
   pusha
   dcopy 0
   acopyb
   wsgetat
   aloadsi 5
   nequal

   popi 2
   delsen labFalse 1
   acopyr const : system'true
   popb
   quitn 2   
   
labFalse:
   acopyr const : system'false
   popb
   quitn 2

end

procedure inline'ws_getat

  pushsi 3  // target
  
  pusha
  aloadsi 4
  dloadai 0
  popa
  wstest labErr
  wsgetat
  pop
  quitn 2
  
labErr:
  callr system'OutOfRangeException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'ws_indexof

  pusha
  aloadsi 3                 // ; load index
  dloadai 0                      
  popa
  pushsi 3                  // ; load searching str
  wsindexofstr
  aloadsi 5                 // ; load target
  dsaveai 0                 // ; save index
  pop
  quitn 3

end

procedure inline'handle_exception

  aloadsi 2
  melse labRaise IFFAILED_MESSAGE_ID
  mcopy EVAL_MESSAGE_ID
  ajumpvi 0

labRaise:
  melse labCall RAISE_MESSAGE_ID
  throw
labCall:
  aloadsi 1
  bsredirect
labErr:
  pushn 0  
  popa
  mquit

end

procedure inline'r_exp

  pushb
  aloadsi 4
  bcopya
  
  aloadsi 3
  rexp

  popb
  quitn 2

end

procedure inline'r_ln

  pushb
  aloadsi 4
  bcopya

  aloadsi 3
  rln

  popb
  quitn 2

end

procedure inline'r_abs

  pushb
  aloadsi 4
  bcopya

  aloadsi 3
  rabs

  popb
  quitn 2

end

procedure inline'r_round

  pushb
  aloadsi 4
  bcopya

  aloadsi 3
  rround
  
  popb
  quitn 2

end

procedure inline'r_truncate

  pushb
  aloadsi 4
  bcopya

  aloadsi 3
  rint
  
  popb
  quitn 2

end

procedure inline'handle_message

  melseai labEnd 0
  msetverb EVAL_MESSAGE_ID
  aloadsi 1
  bsredirect
labEnd:
  throw

end

procedure inline'get_property

  pushai 1
  aloadai 0
  melseai labEnd 0
  popa
  quitn 1

labEnd:
  throw

end

procedure inline'class_getLen

  aloadsi 2
  getlen
  aloadsi 3
  dsaveai 0
  quitn 2
  
end

procedure inline'class_get                                        

  pushb

  aloadsi 4
  bcopya

  aloadsi 3
  dloadai 0

  get
  popb
  quitn 3
  
end

procedure inline'class_getClass

  pushb
  bcopya
  loadclass
  popb
  quitn 1

end
                    
procedure inline'class_getName

  pushb

  dcopy 255
  acopyr class : system'LiteralValue
  wscreate
  bcopya

  dcopy 255
  aloadsi 2
  wsloadname
  delse labErr
  wssetlen

  popb
  quitn 1
  
labErr:  
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'handle_tape

  pushm
  mcopyverb

  melse labErr EVAL_MESSAGE_ID
  mloadsi 0
  pushb
  bcopya
  open 2
  pushn 0
  pushn 0
  
  msaveparams -4
  pushfi -4

labNext:
  acopyb
  dloadfi 1
  test labEnd
  aloadd
  dinc
  dsavefi 1
  testflag labMessage elMessage
  pusha
  jump labNext

labMessage:
  mloadai 0
  aloadsi 0

  elseflag labSkip elRole
  popa
labSkip:

  acallvi 0
  pusha
  jump labNext

labEnd:
  popa
  close
  popb
  popm
  mquit

labErr:
  throw

end

procedure inline'handle_selector

  pushm
  pushb
  mcopysubj
  bcopya
  dcopy 0

labNext:
  acopyb
  test labEnd
  aloadd
  dinc
  elseflag labNext elSubject
  melseai labNext 0
  
  acopyb
  aloadd
  popb
  popm
  mthenverb labQuit GET_MESSAGE_ID
  msetsubj 0
  ajumpvi 0

labQuit:
  quitn 1
  
labEnd:
  throw

end

procedure inline'handle_class       

  pushb
  bcopya
  dcopy 0

labNext:
  acopyb
  test labEnd
  aloadd
  dinc
  elseflag labNext elMessage
  melseai labNext 0
  
  acopyb
  aloadd
  mreset EVAL_MESSAGE_ID
  popb
  ajumpvi 0

labEnd:
  throw

end

procedure inline'handle_wrap

  pushai 0
  aloadai 1
  asavesi 2
  popa
  ajumpvi 0

end

procedure inline'class_indexOfMsg

  pushb
  bcopya
  aloadsi 3   // ; get message
  mloadai 0   // ; load message id
  acopyb
  indexofmsg
  dthenn labFalse 0FFFFFFFFh
  acopyr  const : system'true
  popb
  quitn 2

labFalse:
  acopyr  const : system'false
  popb
  quitn 2

end

procedure inline'symbol_new

  pushb
  pusha
  aloadsi 4   // ; read aName parameter
  bcopya
  wseval
  aelse labError

  popb
  pusha  
  acopys 0
  ncopy
  pop  
  acopyb
  popb
  quitn 2

labError:
  callr system'InvalidArgumentException
  pusha
  mcopy NEW_MESSAGE_ID
  acallvi 0
  throw

end

procedure inline'symbol_redirect

  pushm
  ncall
  popm
  ajumpvi 0

end

procedure inline'vmscript_eval

  aloadsi 2
  exclude
  pusha
  callextr extern : 'dlls'elenasm.EvaluateScript
  aelse labErr
  popi 2
  quitn 2

labErr:
  callr system'dynamic'scriptLastError
  pusha  
  callr system'dynamic'ScriptException
  pusha
  mcopy NEW_MESSAGE_ID_1
  acallvi 0
  throw
    
end

procedure inline'vmscript_load

  exclude
  aloadsi 5
  pushai 0
  aloadsi 5
  pushai 0
  aloadsi 5
  pusha
  callextr extern : 'dlls'elenasm.EvaluateFile
  aelse labErr
  popi 4
  quitn 4

labErr:
  callr system'dynamic'scriptLastError
  pusha  
  callr system'dynamic'ScriptException
  pusha
  mcopy NEW_MESSAGE_ID_1
  acallvi 0
  throw
    
end

procedure inline'api_alloc_index

  aloadsi 2  
  callr api : coreapi'alloc_index
  aloadsi 3
  dsaveai 0
  quitn 3

end

procedure inline'api_free_index
                      
  aloadsi 2           
  dloadai 0
  callr api : coreapi'free_index
  quitn 2
  
end

procedure inline'thread_start

  aloadsi 1
  callr api : coreapi'resolve_index
  callr api : coreapi'start_thread
  quitn 1
  
end
